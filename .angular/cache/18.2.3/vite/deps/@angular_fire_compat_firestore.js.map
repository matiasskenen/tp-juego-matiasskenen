{
  "version": 3,
  "sources": ["../../../../../node_modules/@firebase/app-check/dist/esm/index.esm2017.js", "../../../../../node_modules/@angular/fire/fesm2022/angular-fire-app-check.mjs", "../../../../../node_modules/firebase/compat/app/dist/esm/index.esm.js", "../../../../../node_modules/@angular/fire/fesm2022/angular-fire-compat.mjs", "../../../../../node_modules/@angular/fire/fesm2022/angular-fire-compat-auth.mjs", "../../../../../node_modules/@firebase/firestore-compat/dist/index.esm2017.js", "../../../../../node_modules/@angular/fire/fesm2022/angular-fire-compat-firestore.mjs"],
  "sourcesContent": ["import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Deferred, ErrorFactory, isIndexedDBAvailable, uuidv4, getGlobal, base64, issuedAtTime, calculateBackoffMillis, getModularInstance } from '@firebase/util';\nimport { Logger } from '@firebase/logger';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst APP_CHECK_STATES = new Map();\nconst DEFAULT_STATE = {\n  activated: false,\n  tokenObservers: []\n};\nconst DEBUG_STATE = {\n  initialized: false,\n  enabled: false\n};\n/**\r\n * Gets a reference to the state object.\r\n */\nfunction getStateReference(app) {\n  return APP_CHECK_STATES.get(app) || Object.assign({}, DEFAULT_STATE);\n}\n/**\r\n * Set once on initialization. The map should hold the same reference to the\r\n * same object until this entry is deleted.\r\n */\nfunction setInitialState(app, state) {\n  APP_CHECK_STATES.set(app, state);\n  return APP_CHECK_STATES.get(app);\n}\nfunction getDebugState() {\n  return DEBUG_STATE;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst BASE_ENDPOINT = 'https://content-firebaseappcheck.googleapis.com/v1';\nconst EXCHANGE_RECAPTCHA_TOKEN_METHOD = 'exchangeRecaptchaV3Token';\nconst EXCHANGE_RECAPTCHA_ENTERPRISE_TOKEN_METHOD = 'exchangeRecaptchaEnterpriseToken';\nconst EXCHANGE_DEBUG_TOKEN_METHOD = 'exchangeDebugToken';\nconst TOKEN_REFRESH_TIME = {\n  /**\r\n   * The offset time before token natural expiration to run the refresh.\r\n   * This is currently 5 minutes.\r\n   */\n  OFFSET_DURATION: 5 * 60 * 1000,\n  /**\r\n   * This is the first retrial wait after an error. This is currently\r\n   * 30 seconds.\r\n   */\n  RETRIAL_MIN_WAIT: 30 * 1000,\n  /**\r\n   * This is the maximum retrial wait, currently 16 minutes.\r\n   */\n  RETRIAL_MAX_WAIT: 16 * 60 * 1000\n};\n/**\r\n * One day in millis, for certain error code backoffs.\r\n */\nconst ONE_DAY = 24 * 60 * 60 * 1000;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Port from auth proactiverefresh.js\r\n *\r\n */\n// TODO: move it to @firebase/util?\n// TODO: allow to config whether refresh should happen in the background\nclass Refresher {\n  constructor(operation, retryPolicy, getWaitDuration, lowerBound, upperBound) {\n    this.operation = operation;\n    this.retryPolicy = retryPolicy;\n    this.getWaitDuration = getWaitDuration;\n    this.lowerBound = lowerBound;\n    this.upperBound = upperBound;\n    this.pending = null;\n    this.nextErrorWaitInterval = lowerBound;\n    if (lowerBound > upperBound) {\n      throw new Error('Proactive refresh lower bound greater than upper bound!');\n    }\n  }\n  start() {\n    this.nextErrorWaitInterval = this.lowerBound;\n    this.process(true).catch(() => {\n      /* we don't care about the result */\n    });\n  }\n  stop() {\n    if (this.pending) {\n      this.pending.reject('cancelled');\n      this.pending = null;\n    }\n  }\n  isRunning() {\n    return !!this.pending;\n  }\n  async process(hasSucceeded) {\n    this.stop();\n    try {\n      this.pending = new Deferred();\n      this.pending.promise.catch(_e => {\n        /* ignore */\n      });\n      await sleep(this.getNextRun(hasSucceeded));\n      // Why do we resolve a promise, then immediate wait for it?\n      // We do it to make the promise chain cancellable.\n      // We can call stop() which rejects the promise before the following line execute, which makes\n      // the code jump to the catch block.\n      // TODO: unit test this\n      this.pending.resolve();\n      await this.pending.promise;\n      this.pending = new Deferred();\n      this.pending.promise.catch(_e => {\n        /* ignore */\n      });\n      await this.operation();\n      this.pending.resolve();\n      await this.pending.promise;\n      this.process(true).catch(() => {\n        /* we don't care about the result */\n      });\n    } catch (error) {\n      if (this.retryPolicy(error)) {\n        this.process(false).catch(() => {\n          /* we don't care about the result */\n        });\n      } else {\n        this.stop();\n      }\n    }\n  }\n  getNextRun(hasSucceeded) {\n    if (hasSucceeded) {\n      // If last operation succeeded, reset next error wait interval and return\n      // the default wait duration.\n      this.nextErrorWaitInterval = this.lowerBound;\n      // Return typical wait duration interval after a successful operation.\n      return this.getWaitDuration();\n    } else {\n      // Get next error wait interval.\n      const currentErrorWaitInterval = this.nextErrorWaitInterval;\n      // Double interval for next consecutive error.\n      this.nextErrorWaitInterval *= 2;\n      // Make sure next wait interval does not exceed the maximum upper bound.\n      if (this.nextErrorWaitInterval > this.upperBound) {\n        this.nextErrorWaitInterval = this.upperBound;\n      }\n      return currentErrorWaitInterval;\n    }\n  }\n}\nfunction sleep(ms) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst ERRORS = {\n  [\"already-initialized\" /* AppCheckError.ALREADY_INITIALIZED */]: 'You have already called initializeAppCheck() for FirebaseApp {$appName} with ' + 'different options. To avoid this error, call initializeAppCheck() with the ' + 'same options as when it was originally called. This will return the ' + 'already initialized instance.',\n  [\"use-before-activation\" /* AppCheckError.USE_BEFORE_ACTIVATION */]: 'App Check is being used before initializeAppCheck() is called for FirebaseApp {$appName}. ' + 'Call initializeAppCheck() before instantiating other Firebase services.',\n  [\"fetch-network-error\" /* AppCheckError.FETCH_NETWORK_ERROR */]: 'Fetch failed to connect to a network. Check Internet connection. ' + 'Original error: {$originalErrorMessage}.',\n  [\"fetch-parse-error\" /* AppCheckError.FETCH_PARSE_ERROR */]: 'Fetch client could not parse response.' + ' Original error: {$originalErrorMessage}.',\n  [\"fetch-status-error\" /* AppCheckError.FETCH_STATUS_ERROR */]: 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\n  [\"storage-open\" /* AppCheckError.STORAGE_OPEN */]: 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [\"storage-get\" /* AppCheckError.STORAGE_GET */]: 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [\"storage-set\" /* AppCheckError.STORAGE_WRITE */]: 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [\"recaptcha-error\" /* AppCheckError.RECAPTCHA_ERROR */]: 'ReCAPTCHA error.',\n  [\"throttled\" /* AppCheckError.THROTTLED */]: `Requests throttled due to {$httpStatus} error. Attempts allowed again after {$time}`\n};\nconst ERROR_FACTORY = new ErrorFactory('appCheck', 'AppCheck', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getRecaptcha(isEnterprise = false) {\n  var _a;\n  if (isEnterprise) {\n    return (_a = self.grecaptcha) === null || _a === void 0 ? void 0 : _a.enterprise;\n  }\n  return self.grecaptcha;\n}\nfunction ensureActivated(app) {\n  if (!getStateReference(app).activated) {\n    throw ERROR_FACTORY.create(\"use-before-activation\" /* AppCheckError.USE_BEFORE_ACTIVATION */, {\n      appName: app.name\n    });\n  }\n}\nfunction getDurationString(durationInMillis) {\n  const totalSeconds = Math.round(durationInMillis / 1000);\n  const days = Math.floor(totalSeconds / (3600 * 24));\n  const hours = Math.floor((totalSeconds - days * 3600 * 24) / 3600);\n  const minutes = Math.floor((totalSeconds - days * 3600 * 24 - hours * 3600) / 60);\n  const seconds = totalSeconds - days * 3600 * 24 - hours * 3600 - minutes * 60;\n  let result = '';\n  if (days) {\n    result += pad(days) + 'd:';\n  }\n  if (hours) {\n    result += pad(hours) + 'h:';\n  }\n  result += pad(minutes) + 'm:' + pad(seconds) + 's';\n  return result;\n}\nfunction pad(value) {\n  if (value === 0) {\n    return '00';\n  }\n  return value >= 10 ? value.toString() : '0' + value;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function exchangeToken({\n  url,\n  body\n}, heartbeatServiceProvider) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  // If heartbeat service exists, add heartbeat header string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers['X-Firebase-Client'] = heartbeatsHeader;\n    }\n  }\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers\n  };\n  let response;\n  try {\n    response = await fetch(url, options);\n  } catch (originalError) {\n    throw ERROR_FACTORY.create(\"fetch-network-error\" /* AppCheckError.FETCH_NETWORK_ERROR */, {\n      originalErrorMessage: originalError === null || originalError === void 0 ? void 0 : originalError.message\n    });\n  }\n  if (response.status !== 200) {\n    throw ERROR_FACTORY.create(\"fetch-status-error\" /* AppCheckError.FETCH_STATUS_ERROR */, {\n      httpStatus: response.status\n    });\n  }\n  let responseBody;\n  try {\n    // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n    responseBody = await response.json();\n  } catch (originalError) {\n    throw ERROR_FACTORY.create(\"fetch-parse-error\" /* AppCheckError.FETCH_PARSE_ERROR */, {\n      originalErrorMessage: originalError === null || originalError === void 0 ? void 0 : originalError.message\n    });\n  }\n  // Protobuf duration format.\n  // https://developers.google.com/protocol-buffers/docs/reference/java/com/google/protobuf/Duration\n  const match = responseBody.ttl.match(/^([\\d.]+)(s)$/);\n  if (!match || !match[2] || isNaN(Number(match[1]))) {\n    throw ERROR_FACTORY.create(\"fetch-parse-error\" /* AppCheckError.FETCH_PARSE_ERROR */, {\n      originalErrorMessage: `ttl field (timeToLive) is not in standard Protobuf Duration ` + `format: ${responseBody.ttl}`\n    });\n  }\n  const timeToLiveAsNumber = Number(match[1]) * 1000;\n  const now = Date.now();\n  return {\n    token: responseBody.token,\n    expireTimeMillis: now + timeToLiveAsNumber,\n    issuedAtTimeMillis: now\n  };\n}\nfunction getExchangeRecaptchaV3TokenRequest(app, reCAPTCHAToken) {\n  const {\n    projectId,\n    appId,\n    apiKey\n  } = app.options;\n  return {\n    url: `${BASE_ENDPOINT}/projects/${projectId}/apps/${appId}:${EXCHANGE_RECAPTCHA_TOKEN_METHOD}?key=${apiKey}`,\n    body: {\n      'recaptcha_v3_token': reCAPTCHAToken\n    }\n  };\n}\nfunction getExchangeRecaptchaEnterpriseTokenRequest(app, reCAPTCHAToken) {\n  const {\n    projectId,\n    appId,\n    apiKey\n  } = app.options;\n  return {\n    url: `${BASE_ENDPOINT}/projects/${projectId}/apps/${appId}:${EXCHANGE_RECAPTCHA_ENTERPRISE_TOKEN_METHOD}?key=${apiKey}`,\n    body: {\n      'recaptcha_enterprise_token': reCAPTCHAToken\n    }\n  };\n}\nfunction getExchangeDebugTokenRequest(app, debugToken) {\n  const {\n    projectId,\n    appId,\n    apiKey\n  } = app.options;\n  return {\n    url: `${BASE_ENDPOINT}/projects/${projectId}/apps/${appId}:${EXCHANGE_DEBUG_TOKEN_METHOD}?key=${apiKey}`,\n    body: {\n      // eslint-disable-next-line\n      debug_token: debugToken\n    }\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst DB_NAME = 'firebase-app-check-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-app-check-store';\nconst DEBUG_TOKEN_KEY = 'debug-token';\nlet dbPromise = null;\nfunction getDBPromise() {\n  if (dbPromise) {\n    return dbPromise;\n  }\n  dbPromise = new Promise((resolve, reject) => {\n    try {\n      const request = indexedDB.open(DB_NAME, DB_VERSION);\n      request.onsuccess = event => {\n        resolve(event.target.result);\n      };\n      request.onerror = event => {\n        var _a;\n        reject(ERROR_FACTORY.create(\"storage-open\" /* AppCheckError.STORAGE_OPEN */, {\n          originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n        }));\n      };\n      request.onupgradeneeded = event => {\n        const db = event.target.result;\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (event.oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME, {\n              keyPath: 'compositeKey'\n            });\n        }\n      };\n    } catch (e) {\n      reject(ERROR_FACTORY.create(\"storage-open\" /* AppCheckError.STORAGE_OPEN */, {\n        originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n      }));\n    }\n  });\n  return dbPromise;\n}\nfunction readTokenFromIndexedDB(app) {\n  return read(computeKey(app));\n}\nfunction writeTokenToIndexedDB(app, token) {\n  return write(computeKey(app), token);\n}\nfunction writeDebugTokenToIndexedDB(token) {\n  return write(DEBUG_TOKEN_KEY, token);\n}\nfunction readDebugTokenFromIndexedDB() {\n  return read(DEBUG_TOKEN_KEY);\n}\nasync function write(key, value) {\n  const db = await getDBPromise();\n  const transaction = db.transaction(STORE_NAME, 'readwrite');\n  const store = transaction.objectStore(STORE_NAME);\n  const request = store.put({\n    compositeKey: key,\n    value\n  });\n  return new Promise((resolve, reject) => {\n    request.onsuccess = _event => {\n      resolve();\n    };\n    transaction.onerror = event => {\n      var _a;\n      reject(ERROR_FACTORY.create(\"storage-set\" /* AppCheckError.STORAGE_WRITE */, {\n        originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n      }));\n    };\n  });\n}\nasync function read(key) {\n  const db = await getDBPromise();\n  const transaction = db.transaction(STORE_NAME, 'readonly');\n  const store = transaction.objectStore(STORE_NAME);\n  const request = store.get(key);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = event => {\n      const result = event.target.result;\n      if (result) {\n        resolve(result.value);\n      } else {\n        resolve(undefined);\n      }\n    };\n    transaction.onerror = event => {\n      var _a;\n      reject(ERROR_FACTORY.create(\"storage-get\" /* AppCheckError.STORAGE_GET */, {\n        originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n      }));\n    };\n  });\n}\nfunction computeKey(app) {\n  return `${app.options.appId}-${app.name}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst logger = new Logger('@firebase/app-check');\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Always resolves. In case of an error reading from indexeddb, resolve with undefined\r\n */\nasync function readTokenFromStorage(app) {\n  if (isIndexedDBAvailable()) {\n    let token = undefined;\n    try {\n      token = await readTokenFromIndexedDB(app);\n    } catch (e) {\n      // swallow the error and return undefined\n      logger.warn(`Failed to read token from IndexedDB. Error: ${e}`);\n    }\n    return token;\n  }\n  return undefined;\n}\n/**\r\n * Always resolves. In case of an error writing to indexeddb, print a warning and resolve the promise\r\n */\nfunction writeTokenToStorage(app, token) {\n  if (isIndexedDBAvailable()) {\n    return writeTokenToIndexedDB(app, token).catch(e => {\n      // swallow the error and resolve the promise\n      logger.warn(`Failed to write token to IndexedDB. Error: ${e}`);\n    });\n  }\n  return Promise.resolve();\n}\nasync function readOrCreateDebugTokenFromStorage() {\n  /**\r\n   * Theoretically race condition can happen if we read, then write in 2 separate transactions.\r\n   * But it won't happen here, because this function will be called exactly once.\r\n   */\n  let existingDebugToken = undefined;\n  try {\n    existingDebugToken = await readDebugTokenFromIndexedDB();\n  } catch (_e) {\n    // failed to read from indexeddb. We assume there is no existing debug token, and generate a new one.\n  }\n  if (!existingDebugToken) {\n    // create a new debug token\n    const newToken = uuidv4();\n    // We don't need to block on writing to indexeddb\n    // In case persistence failed, a new debug token will be generated every time the page is refreshed.\n    // It renders the debug token useless because you have to manually register(whitelist) the new token in the firebase console again and again.\n    // If you see this error trying to use debug token, it probably means you are using a browser that doesn't support indexeddb.\n    // You should switch to a different browser that supports indexeddb\n    writeDebugTokenToIndexedDB(newToken).catch(e => logger.warn(`Failed to persist debug token to IndexedDB. Error: ${e}`));\n    return newToken;\n  } else {\n    return existingDebugToken;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction isDebugMode() {\n  const debugState = getDebugState();\n  return debugState.enabled;\n}\nasync function getDebugToken() {\n  const state = getDebugState();\n  if (state.enabled && state.token) {\n    return state.token.promise;\n  } else {\n    // should not happen!\n    throw Error(`\n            Can't get debug token in production mode.\n        `);\n  }\n}\nfunction initializeDebugMode() {\n  const globals = getGlobal();\n  const debugState = getDebugState();\n  // Set to true if this function has been called, whether or not\n  // it enabled debug mode.\n  debugState.initialized = true;\n  if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== 'string' && globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== true) {\n    return;\n  }\n  debugState.enabled = true;\n  const deferredToken = new Deferred();\n  debugState.token = deferredToken;\n  if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN === 'string') {\n    deferredToken.resolve(globals.FIREBASE_APPCHECK_DEBUG_TOKEN);\n  } else {\n    deferredToken.resolve(readOrCreateDebugTokenFromStorage());\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Initial hardcoded value agreed upon across platforms for initial launch.\n// Format left open for possible dynamic error values and other fields in the future.\nconst defaultTokenErrorData = {\n  error: 'UNKNOWN_ERROR'\n};\n/**\r\n * Stringify and base64 encode token error data.\r\n *\r\n * @param tokenError Error data, currently hardcoded.\r\n */\nfunction formatDummyToken(tokenErrorData) {\n  return base64.encodeString(JSON.stringify(tokenErrorData), /* webSafe= */false);\n}\n/**\r\n * This function always resolves.\r\n * The result will contain an error field if there is any error.\r\n * In case there is an error, the token field in the result will be populated with a dummy value\r\n */\nasync function getToken$2(appCheck, forceRefresh = false) {\n  const app = appCheck.app;\n  ensureActivated(app);\n  const state = getStateReference(app);\n  /**\r\n   * First check if there is a token in memory from a previous `getToken()` call.\r\n   */\n  let token = state.token;\n  let error = undefined;\n  /**\r\n   * If an invalid token was found in memory, clear token from\r\n   * memory and unset the local variable `token`.\r\n   */\n  if (token && !isValid(token)) {\n    state.token = undefined;\n    token = undefined;\n  }\n  /**\r\n   * If there is no valid token in memory, try to load token from indexedDB.\r\n   */\n  if (!token) {\n    // cachedTokenPromise contains the token found in IndexedDB or undefined if not found.\n    const cachedToken = await state.cachedTokenPromise;\n    if (cachedToken) {\n      if (isValid(cachedToken)) {\n        token = cachedToken;\n      } else {\n        // If there was an invalid token in the indexedDB cache, clear it.\n        await writeTokenToStorage(app, undefined);\n      }\n    }\n  }\n  // Return the cached token (from either memory or indexedDB) if it's valid\n  if (!forceRefresh && token && isValid(token)) {\n    return {\n      token: token.token\n    };\n  }\n  // Only set to true if this `getToken()` call is making the actual\n  // REST call to the exchange endpoint, versus waiting for an already\n  // in-flight call (see debug and regular exchange endpoint paths below)\n  let shouldCallListeners = false;\n  /**\r\n   * DEBUG MODE\r\n   * If debug mode is set, and there is no cached token, fetch a new App\r\n   * Check token using the debug token, and return it directly.\r\n   */\n  if (isDebugMode()) {\n    // Avoid making another call to the exchange endpoint if one is in flight.\n    if (!state.exchangeTokenPromise) {\n      state.exchangeTokenPromise = exchangeToken(getExchangeDebugTokenRequest(app, await getDebugToken()), appCheck.heartbeatServiceProvider).finally(() => {\n        // Clear promise when settled - either resolved or rejected.\n        state.exchangeTokenPromise = undefined;\n      });\n      shouldCallListeners = true;\n    }\n    const tokenFromDebugExchange = await state.exchangeTokenPromise;\n    // Write debug token to indexedDB.\n    await writeTokenToStorage(app, tokenFromDebugExchange);\n    // Write debug token to state.\n    state.token = tokenFromDebugExchange;\n    return {\n      token: tokenFromDebugExchange.token\n    };\n  }\n  /**\r\n   * There are no valid tokens in memory or indexedDB and we are not in\r\n   * debug mode.\r\n   * Request a new token from the exchange endpoint.\r\n   */\n  try {\n    // Avoid making another call to the exchange endpoint if one is in flight.\n    if (!state.exchangeTokenPromise) {\n      // state.provider is populated in initializeAppCheck()\n      // ensureActivated() at the top of this function checks that\n      // initializeAppCheck() has been called.\n      state.exchangeTokenPromise = state.provider.getToken().finally(() => {\n        // Clear promise when settled - either resolved or rejected.\n        state.exchangeTokenPromise = undefined;\n      });\n      shouldCallListeners = true;\n    }\n    token = await getStateReference(app).exchangeTokenPromise;\n  } catch (e) {\n    if (e.code === `appCheck/${\"throttled\" /* AppCheckError.THROTTLED */}`) {\n      // Warn if throttled, but do not treat it as an error.\n      logger.warn(e.message);\n    } else {\n      // `getToken()` should never throw, but logging error text to console will aid debugging.\n      logger.error(e);\n    }\n    // Always save error to be added to dummy token.\n    error = e;\n  }\n  let interopTokenResult;\n  if (!token) {\n    // If token is undefined, there must be an error.\n    // Return a dummy token along with the error.\n    interopTokenResult = makeDummyTokenResult(error);\n  } else if (error) {\n    if (isValid(token)) {\n      // It's also possible a valid token exists, but there's also an error.\n      // (Such as if the token is almost expired, tries to refresh, and\n      // the exchange request fails.)\n      // We add a special error property here so that the refresher will\n      // count this as a failed attempt and use the backoff instead of\n      // retrying repeatedly with no delay, but any 3P listeners will not\n      // be hindered in getting the still-valid token.\n      interopTokenResult = {\n        token: token.token,\n        internalError: error\n      };\n    } else {\n      // No invalid tokens should make it to this step. Memory and cached tokens\n      // are checked. Other tokens are from fresh exchanges. But just in case.\n      interopTokenResult = makeDummyTokenResult(error);\n    }\n  } else {\n    interopTokenResult = {\n      token: token.token\n    };\n    // write the new token to the memory state as well as the persistent storage.\n    // Only do it if we got a valid new token\n    state.token = token;\n    await writeTokenToStorage(app, token);\n  }\n  if (shouldCallListeners) {\n    notifyTokenListeners(app, interopTokenResult);\n  }\n  return interopTokenResult;\n}\n/**\r\n * Internal API for limited use tokens. Skips all FAC state and simply calls\r\n * the underlying provider.\r\n */\nasync function getLimitedUseToken$1(appCheck) {\n  const app = appCheck.app;\n  ensureActivated(app);\n  const {\n    provider\n  } = getStateReference(app);\n  if (isDebugMode()) {\n    const debugToken = await getDebugToken();\n    const {\n      token\n    } = await exchangeToken(getExchangeDebugTokenRequest(app, debugToken), appCheck.heartbeatServiceProvider);\n    return {\n      token\n    };\n  } else {\n    // provider is definitely valid since we ensure AppCheck was activated\n    const {\n      token\n    } = await provider.getToken();\n    return {\n      token\n    };\n  }\n}\nfunction addTokenListener(appCheck, type, listener, onError) {\n  const {\n    app\n  } = appCheck;\n  const state = getStateReference(app);\n  const tokenObserver = {\n    next: listener,\n    error: onError,\n    type\n  };\n  state.tokenObservers = [...state.tokenObservers, tokenObserver];\n  // Invoke the listener async immediately if there is a valid token\n  // in memory.\n  if (state.token && isValid(state.token)) {\n    const validToken = state.token;\n    Promise.resolve().then(() => {\n      listener({\n        token: validToken.token\n      });\n      initTokenRefresher(appCheck);\n    }).catch(() => {\n      /* we don't care about exceptions thrown in listeners */\n    });\n  }\n  /**\r\n   * Wait for any cached token promise to resolve before starting the token\r\n   * refresher. The refresher checks to see if there is an existing token\r\n   * in state and calls the exchange endpoint if not. We should first let the\r\n   * IndexedDB check have a chance to populate state if it can.\r\n   *\r\n   * Listener call isn't needed here because cachedTokenPromise will call any\r\n   * listeners that exist when it resolves.\r\n   */\n  // state.cachedTokenPromise is always populated in `activate()`.\n  void state.cachedTokenPromise.then(() => initTokenRefresher(appCheck));\n}\nfunction removeTokenListener(app, listener) {\n  const state = getStateReference(app);\n  const newObservers = state.tokenObservers.filter(tokenObserver => tokenObserver.next !== listener);\n  if (newObservers.length === 0 && state.tokenRefresher && state.tokenRefresher.isRunning()) {\n    state.tokenRefresher.stop();\n  }\n  state.tokenObservers = newObservers;\n}\n/**\r\n * Logic to create and start refresher as needed.\r\n */\nfunction initTokenRefresher(appCheck) {\n  const {\n    app\n  } = appCheck;\n  const state = getStateReference(app);\n  // Create the refresher but don't start it if `isTokenAutoRefreshEnabled`\n  // is not true.\n  let refresher = state.tokenRefresher;\n  if (!refresher) {\n    refresher = createTokenRefresher(appCheck);\n    state.tokenRefresher = refresher;\n  }\n  if (!refresher.isRunning() && state.isTokenAutoRefreshEnabled) {\n    refresher.start();\n  }\n}\nfunction createTokenRefresher(appCheck) {\n  const {\n    app\n  } = appCheck;\n  return new Refresher(\n  // Keep in mind when this fails for any reason other than the ones\n  // for which we should retry, it will effectively stop the proactive refresh.\n  async () => {\n    const state = getStateReference(app);\n    // If there is no token, we will try to load it from storage and use it\n    // If there is a token, we force refresh it because we know it's going to expire soon\n    let result;\n    if (!state.token) {\n      result = await getToken$2(appCheck);\n    } else {\n      result = await getToken$2(appCheck, true);\n    }\n    /**\r\n     * getToken() always resolves. In case the result has an error field defined, it means\r\n     * the operation failed, and we should retry.\r\n     */\n    if (result.error) {\n      throw result.error;\n    }\n    /**\r\n     * A special `internalError` field reflects that there was an error\r\n     * getting a new token from the exchange endpoint, but there's still a\r\n     * previous token that's valid for now and this should be passed to 2P/3P\r\n     * requests for a token. But we want this callback (`this.operation` in\r\n     * `Refresher`) to throw in order to kick off the Refresher's retry\r\n     * backoff. (Setting `hasSucceeded` to false.)\r\n     */\n    if (result.internalError) {\n      throw result.internalError;\n    }\n  }, () => {\n    return true;\n  }, () => {\n    const state = getStateReference(app);\n    if (state.token) {\n      // issuedAtTime + (50% * total TTL) + 5 minutes\n      let nextRefreshTimeMillis = state.token.issuedAtTimeMillis + (state.token.expireTimeMillis - state.token.issuedAtTimeMillis) * 0.5 + 5 * 60 * 1000;\n      // Do not allow refresh time to be past (expireTime - 5 minutes)\n      const latestAllowableRefresh = state.token.expireTimeMillis - 5 * 60 * 1000;\n      nextRefreshTimeMillis = Math.min(nextRefreshTimeMillis, latestAllowableRefresh);\n      return Math.max(0, nextRefreshTimeMillis - Date.now());\n    } else {\n      return 0;\n    }\n  }, TOKEN_REFRESH_TIME.RETRIAL_MIN_WAIT, TOKEN_REFRESH_TIME.RETRIAL_MAX_WAIT);\n}\nfunction notifyTokenListeners(app, token) {\n  const observers = getStateReference(app).tokenObservers;\n  for (const observer of observers) {\n    try {\n      if (observer.type === \"EXTERNAL\" /* ListenerType.EXTERNAL */ && token.error != null) {\n        // If this listener was added by a 3P call, send any token error to\n        // the supplied error handler. A 3P observer always has an error\n        // handler.\n        observer.error(token.error);\n      } else {\n        // If the token has no error field, always return the token.\n        // If this is a 2P listener, return the token, whether or not it\n        // has an error field.\n        observer.next(token);\n      }\n    } catch (e) {\n      // Errors in the listener function itself are always ignored.\n    }\n  }\n}\nfunction isValid(token) {\n  return token.expireTimeMillis - Date.now() > 0;\n}\nfunction makeDummyTokenResult(error) {\n  return {\n    token: formatDummyToken(defaultTokenErrorData),\n    error\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * AppCheck Service class.\r\n */\nclass AppCheckService {\n  constructor(app, heartbeatServiceProvider) {\n    this.app = app;\n    this.heartbeatServiceProvider = heartbeatServiceProvider;\n  }\n  _delete() {\n    const {\n      tokenObservers\n    } = getStateReference(this.app);\n    for (const tokenObserver of tokenObservers) {\n      removeTokenListener(this.app, tokenObserver.next);\n    }\n    return Promise.resolve();\n  }\n}\nfunction factory(app, heartbeatServiceProvider) {\n  return new AppCheckService(app, heartbeatServiceProvider);\n}\nfunction internalFactory(appCheck) {\n  return {\n    getToken: forceRefresh => getToken$2(appCheck, forceRefresh),\n    getLimitedUseToken: () => getLimitedUseToken$1(appCheck),\n    addTokenListener: listener => addTokenListener(appCheck, \"INTERNAL\" /* ListenerType.INTERNAL */, listener),\n    removeTokenListener: listener => removeTokenListener(appCheck.app, listener)\n  };\n}\nconst name = \"@firebase/app-check\";\nconst version = \"0.8.7\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst RECAPTCHA_URL = 'https://www.google.com/recaptcha/api.js';\nconst RECAPTCHA_ENTERPRISE_URL = 'https://www.google.com/recaptcha/enterprise.js';\nfunction initializeV3(app, siteKey) {\n  const initialized = new Deferred();\n  const state = getStateReference(app);\n  state.reCAPTCHAState = {\n    initialized\n  };\n  const divId = makeDiv(app);\n  const grecaptcha = getRecaptcha(false);\n  if (!grecaptcha) {\n    loadReCAPTCHAV3Script(() => {\n      const grecaptcha = getRecaptcha(false);\n      if (!grecaptcha) {\n        // it shouldn't happen.\n        throw new Error('no recaptcha');\n      }\n      queueWidgetRender(app, siteKey, grecaptcha, divId, initialized);\n    });\n  } else {\n    queueWidgetRender(app, siteKey, grecaptcha, divId, initialized);\n  }\n  return initialized.promise;\n}\nfunction initializeEnterprise(app, siteKey) {\n  const initialized = new Deferred();\n  const state = getStateReference(app);\n  state.reCAPTCHAState = {\n    initialized\n  };\n  const divId = makeDiv(app);\n  const grecaptcha = getRecaptcha(true);\n  if (!grecaptcha) {\n    loadReCAPTCHAEnterpriseScript(() => {\n      const grecaptcha = getRecaptcha(true);\n      if (!grecaptcha) {\n        // it shouldn't happen.\n        throw new Error('no recaptcha');\n      }\n      queueWidgetRender(app, siteKey, grecaptcha, divId, initialized);\n    });\n  } else {\n    queueWidgetRender(app, siteKey, grecaptcha, divId, initialized);\n  }\n  return initialized.promise;\n}\n/**\r\n * Add listener to render the widget and resolve the promise when\r\n * the grecaptcha.ready() event fires.\r\n */\nfunction queueWidgetRender(app, siteKey, grecaptcha, container, initialized) {\n  grecaptcha.ready(() => {\n    // Invisible widgets allow us to set a different siteKey for each widget,\n    // so we use them to support multiple apps\n    renderInvisibleWidget(app, siteKey, grecaptcha, container);\n    initialized.resolve(grecaptcha);\n  });\n}\n/**\r\n * Add invisible div to page.\r\n */\nfunction makeDiv(app) {\n  const divId = `fire_app_check_${app.name}`;\n  const invisibleDiv = document.createElement('div');\n  invisibleDiv.id = divId;\n  invisibleDiv.style.display = 'none';\n  document.body.appendChild(invisibleDiv);\n  return divId;\n}\nasync function getToken$1(app) {\n  ensureActivated(app);\n  // ensureActivated() guarantees that reCAPTCHAState is set\n  const reCAPTCHAState = getStateReference(app).reCAPTCHAState;\n  const recaptcha = await reCAPTCHAState.initialized.promise;\n  return new Promise((resolve, _reject) => {\n    // Updated after initialization is complete.\n    const reCAPTCHAState = getStateReference(app).reCAPTCHAState;\n    recaptcha.ready(() => {\n      resolve(\n      // widgetId is guaranteed to be available if reCAPTCHAState.initialized.promise resolved.\n      recaptcha.execute(reCAPTCHAState.widgetId, {\n        action: 'fire_app_check'\n      }));\n    });\n  });\n}\n/**\r\n *\r\n * @param app\r\n * @param container - Id of a HTML element.\r\n */\nfunction renderInvisibleWidget(app, siteKey, grecaptcha, container) {\n  const widgetId = grecaptcha.render(container, {\n    sitekey: siteKey,\n    size: 'invisible',\n    // Success callback - set state\n    callback: () => {\n      getStateReference(app).reCAPTCHAState.succeeded = true;\n    },\n    // Failure callback - set state\n    'error-callback': () => {\n      getStateReference(app).reCAPTCHAState.succeeded = false;\n    }\n  });\n  const state = getStateReference(app);\n  state.reCAPTCHAState = Object.assign(Object.assign({}, state.reCAPTCHAState), {\n    // state.reCAPTCHAState is set in the initialize()\n    widgetId\n  });\n}\nfunction loadReCAPTCHAV3Script(onload) {\n  const script = document.createElement('script');\n  script.src = RECAPTCHA_URL;\n  script.onload = onload;\n  document.head.appendChild(script);\n}\nfunction loadReCAPTCHAEnterpriseScript(onload) {\n  const script = document.createElement('script');\n  script.src = RECAPTCHA_ENTERPRISE_URL;\n  script.onload = onload;\n  document.head.appendChild(script);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * App Check provider that can obtain a reCAPTCHA V3 token and exchange it\r\n * for an App Check token.\r\n *\r\n * @public\r\n */\nclass ReCaptchaV3Provider {\n  /**\r\n   * Create a ReCaptchaV3Provider instance.\r\n   * @param siteKey - ReCAPTCHA V3 siteKey.\r\n   */\n  constructor(_siteKey) {\n    this._siteKey = _siteKey;\n    /**\r\n     * Throttle requests on certain error codes to prevent too many retries\r\n     * in a short time.\r\n     */\n    this._throttleData = null;\n  }\n  /**\r\n   * Returns an App Check token.\r\n   * @internal\r\n   */\n  async getToken() {\n    var _a, _b, _c;\n    throwIfThrottled(this._throttleData);\n    // Top-level `getToken()` has already checked that App Check is initialized\n    // and therefore this._app and this._heartbeatServiceProvider are available.\n    const attestedClaimsToken = await getToken$1(this._app).catch(_e => {\n      // reCaptcha.execute() throws null which is not very descriptive.\n      throw ERROR_FACTORY.create(\"recaptcha-error\" /* AppCheckError.RECAPTCHA_ERROR */);\n    });\n    // Check if a failure state was set by the recaptcha \"error-callback\".\n    if (!((_a = getStateReference(this._app).reCAPTCHAState) === null || _a === void 0 ? void 0 : _a.succeeded)) {\n      throw ERROR_FACTORY.create(\"recaptcha-error\" /* AppCheckError.RECAPTCHA_ERROR */);\n    }\n    let result;\n    try {\n      result = await exchangeToken(getExchangeRecaptchaV3TokenRequest(this._app, attestedClaimsToken), this._heartbeatServiceProvider);\n    } catch (e) {\n      if ((_b = e.code) === null || _b === void 0 ? void 0 : _b.includes(\"fetch-status-error\" /* AppCheckError.FETCH_STATUS_ERROR */)) {\n        this._throttleData = setBackoff(Number((_c = e.customData) === null || _c === void 0 ? void 0 : _c.httpStatus), this._throttleData);\n        throw ERROR_FACTORY.create(\"throttled\" /* AppCheckError.THROTTLED */, {\n          time: getDurationString(this._throttleData.allowRequestsAfter - Date.now()),\n          httpStatus: this._throttleData.httpStatus\n        });\n      } else {\n        throw e;\n      }\n    }\n    // If successful, clear throttle data.\n    this._throttleData = null;\n    return result;\n  }\n  /**\r\n   * @internal\r\n   */\n  initialize(app) {\n    this._app = app;\n    this._heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n    initializeV3(app, this._siteKey).catch(() => {\n      /* we don't care about the initialization result */\n    });\n  }\n  /**\r\n   * @internal\r\n   */\n  isEqual(otherProvider) {\n    if (otherProvider instanceof ReCaptchaV3Provider) {\n      return this._siteKey === otherProvider._siteKey;\n    } else {\n      return false;\n    }\n  }\n}\n/**\r\n * App Check provider that can obtain a reCAPTCHA Enterprise token and exchange it\r\n * for an App Check token.\r\n *\r\n * @public\r\n */\nclass ReCaptchaEnterpriseProvider {\n  /**\r\n   * Create a ReCaptchaEnterpriseProvider instance.\r\n   * @param siteKey - reCAPTCHA Enterprise score-based site key.\r\n   */\n  constructor(_siteKey) {\n    this._siteKey = _siteKey;\n    /**\r\n     * Throttle requests on certain error codes to prevent too many retries\r\n     * in a short time.\r\n     */\n    this._throttleData = null;\n  }\n  /**\r\n   * Returns an App Check token.\r\n   * @internal\r\n   */\n  async getToken() {\n    var _a, _b, _c;\n    throwIfThrottled(this._throttleData);\n    // Top-level `getToken()` has already checked that App Check is initialized\n    // and therefore this._app and this._heartbeatServiceProvider are available.\n    const attestedClaimsToken = await getToken$1(this._app).catch(_e => {\n      // reCaptcha.execute() throws null which is not very descriptive.\n      throw ERROR_FACTORY.create(\"recaptcha-error\" /* AppCheckError.RECAPTCHA_ERROR */);\n    });\n    // Check if a failure state was set by the recaptcha \"error-callback\".\n    if (!((_a = getStateReference(this._app).reCAPTCHAState) === null || _a === void 0 ? void 0 : _a.succeeded)) {\n      throw ERROR_FACTORY.create(\"recaptcha-error\" /* AppCheckError.RECAPTCHA_ERROR */);\n    }\n    let result;\n    try {\n      result = await exchangeToken(getExchangeRecaptchaEnterpriseTokenRequest(this._app, attestedClaimsToken), this._heartbeatServiceProvider);\n    } catch (e) {\n      if ((_b = e.code) === null || _b === void 0 ? void 0 : _b.includes(\"fetch-status-error\" /* AppCheckError.FETCH_STATUS_ERROR */)) {\n        this._throttleData = setBackoff(Number((_c = e.customData) === null || _c === void 0 ? void 0 : _c.httpStatus), this._throttleData);\n        throw ERROR_FACTORY.create(\"throttled\" /* AppCheckError.THROTTLED */, {\n          time: getDurationString(this._throttleData.allowRequestsAfter - Date.now()),\n          httpStatus: this._throttleData.httpStatus\n        });\n      } else {\n        throw e;\n      }\n    }\n    // If successful, clear throttle data.\n    this._throttleData = null;\n    return result;\n  }\n  /**\r\n   * @internal\r\n   */\n  initialize(app) {\n    this._app = app;\n    this._heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n    initializeEnterprise(app, this._siteKey).catch(() => {\n      /* we don't care about the initialization result */\n    });\n  }\n  /**\r\n   * @internal\r\n   */\n  isEqual(otherProvider) {\n    if (otherProvider instanceof ReCaptchaEnterpriseProvider) {\n      return this._siteKey === otherProvider._siteKey;\n    } else {\n      return false;\n    }\n  }\n}\n/**\r\n * Custom provider class.\r\n * @public\r\n */\nclass CustomProvider {\n  constructor(_customProviderOptions) {\n    this._customProviderOptions = _customProviderOptions;\n  }\n  /**\r\n   * @internal\r\n   */\n  async getToken() {\n    // custom provider\n    const customToken = await this._customProviderOptions.getToken();\n    // Try to extract IAT from custom token, in case this token is not\n    // being newly issued. JWT timestamps are in seconds since epoch.\n    const issuedAtTimeSeconds = issuedAtTime(customToken.token);\n    // Very basic validation, use current timestamp as IAT if JWT\n    // has no `iat` field or value is out of bounds.\n    const issuedAtTimeMillis = issuedAtTimeSeconds !== null && issuedAtTimeSeconds < Date.now() && issuedAtTimeSeconds > 0 ? issuedAtTimeSeconds * 1000 : Date.now();\n    return Object.assign(Object.assign({}, customToken), {\n      issuedAtTimeMillis\n    });\n  }\n  /**\r\n   * @internal\r\n   */\n  initialize(app) {\n    this._app = app;\n  }\n  /**\r\n   * @internal\r\n   */\n  isEqual(otherProvider) {\n    if (otherProvider instanceof CustomProvider) {\n      return this._customProviderOptions.getToken.toString() === otherProvider._customProviderOptions.getToken.toString();\n    } else {\n      return false;\n    }\n  }\n}\n/**\r\n * Set throttle data to block requests until after a certain time\r\n * depending on the failed request's status code.\r\n * @param httpStatus - Status code of failed request.\r\n * @param throttleData - `ThrottleData` object containing previous throttle\r\n * data state.\r\n * @returns Data about current throttle state and expiration time.\r\n */\nfunction setBackoff(httpStatus, throttleData) {\n  /**\r\n   * Block retries for 1 day for the following error codes:\r\n   *\r\n   * 404: Likely malformed URL.\r\n   *\r\n   * 403:\r\n   * - Attestation failed\r\n   * - Wrong API key\r\n   * - Project deleted\r\n   */\n  if (httpStatus === 404 || httpStatus === 403) {\n    return {\n      backoffCount: 1,\n      allowRequestsAfter: Date.now() + ONE_DAY,\n      httpStatus\n    };\n  } else {\n    /**\r\n     * For all other error codes, the time when it is ok to retry again\r\n     * is based on exponential backoff.\r\n     */\n    const backoffCount = throttleData ? throttleData.backoffCount : 0;\n    const backoffMillis = calculateBackoffMillis(backoffCount, 1000, 2);\n    return {\n      backoffCount: backoffCount + 1,\n      allowRequestsAfter: Date.now() + backoffMillis,\n      httpStatus\n    };\n  }\n}\nfunction throwIfThrottled(throttleData) {\n  if (throttleData) {\n    if (Date.now() - throttleData.allowRequestsAfter <= 0) {\n      // If before, throw.\n      throw ERROR_FACTORY.create(\"throttled\" /* AppCheckError.THROTTLED */, {\n        time: getDurationString(throttleData.allowRequestsAfter - Date.now()),\n        httpStatus: throttleData.httpStatus\n      });\n    }\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Activate App Check for the given app. Can be called only once per app.\r\n * @param app - the {@link @firebase/app#FirebaseApp} to activate App Check for\r\n * @param options - App Check initialization options\r\n * @public\r\n */\nfunction initializeAppCheck(app = getApp(), options) {\n  app = getModularInstance(app);\n  const provider = _getProvider(app, 'app-check');\n  // Ensure initializeDebugMode() is only called once.\n  if (!getDebugState().initialized) {\n    initializeDebugMode();\n  }\n  // Log a message containing the debug token when `initializeAppCheck()`\n  // is called in debug mode.\n  if (isDebugMode()) {\n    // Do not block initialization to get the token for the message.\n    void getDebugToken().then(token =>\n    // Not using logger because I don't think we ever want this accidentally hidden.\n    console.log(`App Check debug token: ${token}. You will need to add it to your app's App Check settings in the Firebase console for it to work.`));\n  }\n  if (provider.isInitialized()) {\n    const existingInstance = provider.getImmediate();\n    const initialOptions = provider.getOptions();\n    if (initialOptions.isTokenAutoRefreshEnabled === options.isTokenAutoRefreshEnabled && initialOptions.provider.isEqual(options.provider)) {\n      return existingInstance;\n    } else {\n      throw ERROR_FACTORY.create(\"already-initialized\" /* AppCheckError.ALREADY_INITIALIZED */, {\n        appName: app.name\n      });\n    }\n  }\n  const appCheck = provider.initialize({\n    options\n  });\n  _activate(app, options.provider, options.isTokenAutoRefreshEnabled);\n  // If isTokenAutoRefreshEnabled is false, do not send any requests to the\n  // exchange endpoint without an explicit call from the user either directly\n  // or through another Firebase library (storage, functions, etc.)\n  if (getStateReference(app).isTokenAutoRefreshEnabled) {\n    // Adding a listener will start the refresher and fetch a token if needed.\n    // This gets a token ready and prevents a delay when an internal library\n    // requests the token.\n    // Listener function does not need to do anything, its base functionality\n    // of calling getToken() already fetches token and writes it to memory/storage.\n    addTokenListener(appCheck, \"INTERNAL\" /* ListenerType.INTERNAL */, () => {});\n  }\n  return appCheck;\n}\n/**\r\n * Activate App Check\r\n * @param app - Firebase app to activate App Check for.\r\n * @param provider - reCAPTCHA v3 provider or\r\n * custom token provider.\r\n * @param isTokenAutoRefreshEnabled - If true, the SDK automatically\r\n * refreshes App Check tokens as needed. If undefined, defaults to the\r\n * value of `app.automaticDataCollectionEnabled`, which defaults to\r\n * false and can be set in the app config.\r\n */\nfunction _activate(app, provider, isTokenAutoRefreshEnabled) {\n  // Create an entry in the APP_CHECK_STATES map. Further changes should\n  // directly mutate this object.\n  const state = setInitialState(app, Object.assign({}, DEFAULT_STATE));\n  state.activated = true;\n  state.provider = provider; // Read cached token from storage if it exists and store it in memory.\n  state.cachedTokenPromise = readTokenFromStorage(app).then(cachedToken => {\n    if (cachedToken && isValid(cachedToken)) {\n      state.token = cachedToken;\n      // notify all listeners with the cached token\n      notifyTokenListeners(app, {\n        token: cachedToken.token\n      });\n    }\n    return cachedToken;\n  });\n  // Use value of global `automaticDataCollectionEnabled` (which\n  // itself defaults to false if not specified in config) if\n  // `isTokenAutoRefreshEnabled` param was not provided by user.\n  state.isTokenAutoRefreshEnabled = isTokenAutoRefreshEnabled === undefined ? app.automaticDataCollectionEnabled : isTokenAutoRefreshEnabled;\n  state.provider.initialize(app);\n}\n/**\r\n * Set whether App Check will automatically refresh tokens as needed.\r\n *\r\n * @param appCheckInstance - The App Check service instance.\r\n * @param isTokenAutoRefreshEnabled - If true, the SDK automatically\r\n * refreshes App Check tokens as needed. This overrides any value set\r\n * during `initializeAppCheck()`.\r\n * @public\r\n */\nfunction setTokenAutoRefreshEnabled(appCheckInstance, isTokenAutoRefreshEnabled) {\n  const app = appCheckInstance.app;\n  const state = getStateReference(app);\n  // This will exist if any product libraries have called\n  // `addTokenListener()`\n  if (state.tokenRefresher) {\n    if (isTokenAutoRefreshEnabled === true) {\n      state.tokenRefresher.start();\n    } else {\n      state.tokenRefresher.stop();\n    }\n  }\n  state.isTokenAutoRefreshEnabled = isTokenAutoRefreshEnabled;\n}\n/**\r\n * Get the current App Check token. Attaches to the most recent\r\n * in-flight request if one is present. Returns null if no token\r\n * is present and no token requests are in-flight.\r\n *\r\n * @param appCheckInstance - The App Check service instance.\r\n * @param forceRefresh - If true, will always try to fetch a fresh token.\r\n * If false, will use a cached token if found in storage.\r\n * @public\r\n */\nasync function getToken(appCheckInstance, forceRefresh) {\n  const result = await getToken$2(appCheckInstance, forceRefresh);\n  if (result.error) {\n    throw result.error;\n  }\n  return {\n    token: result.token\n  };\n}\n/**\r\n * Requests a Firebase App Check token. This method should be used\r\n * only if you need to authorize requests to a non-Firebase backend.\r\n *\r\n * Returns limited-use tokens that are intended for use with your\r\n * non-Firebase backend endpoints that are protected with\r\n * <a href=\"https://firebase.google.com/docs/app-check/custom-resource-backend#replay-protection\">\r\n * Replay Protection</a>. This method\r\n * does not affect the token generation behavior of the\r\n * #getAppCheckToken() method.\r\n *\r\n * @param appCheckInstance - The App Check service instance.\r\n * @returns The limited use token.\r\n * @public\r\n */\nfunction getLimitedUseToken(appCheckInstance) {\n  return getLimitedUseToken$1(appCheckInstance);\n}\n/**\r\n * Wraps `addTokenListener`/`removeTokenListener` methods in an `Observer`\r\n * pattern for public use.\r\n */\nfunction onTokenChanged(appCheckInstance, onNextOrObserver, onError,\n/**\r\n * NOTE: Although an `onCompletion` callback can be provided, it will\r\n * never be called because the token stream is never-ending.\r\n * It is added only for API consistency with the observer pattern, which\r\n * we follow in JS APIs.\r\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nonCompletion) {\n  let nextFn = () => {};\n  let errorFn = () => {};\n  if (onNextOrObserver.next != null) {\n    nextFn = onNextOrObserver.next.bind(onNextOrObserver);\n  } else {\n    nextFn = onNextOrObserver;\n  }\n  if (onNextOrObserver.error != null) {\n    errorFn = onNextOrObserver.error.bind(onNextOrObserver);\n  } else if (onError) {\n    errorFn = onError;\n  }\n  addTokenListener(appCheckInstance, \"EXTERNAL\" /* ListenerType.EXTERNAL */, nextFn, errorFn);\n  return () => removeTokenListener(appCheckInstance.app, nextFn);\n}\n\n/**\r\n * The Firebase App Check Web SDK.\r\n *\r\n * @remarks\r\n * Firebase App Check does not work in a Node.js environment using `ReCaptchaV3Provider` or\r\n * `ReCaptchaEnterpriseProvider`, but can be used in Node.js if you use\r\n * `CustomProvider` and write your own attestation method.\r\n *\r\n * @packageDocumentation\r\n */\nconst APP_CHECK_NAME = 'app-check';\nconst APP_CHECK_NAME_INTERNAL = 'app-check-internal';\nfunction registerAppCheck() {\n  // The public interface\n  _registerComponent(new Component(APP_CHECK_NAME, container => {\n    // getImmediate for FirebaseApp will always succeed\n    const app = container.getProvider('app').getImmediate();\n    const heartbeatServiceProvider = container.getProvider('heartbeat');\n    return factory(app, heartbeatServiceProvider);\n  }, \"PUBLIC\" /* ComponentType.PUBLIC */).setInstantiationMode(\"EXPLICIT\" /* InstantiationMode.EXPLICIT */)\n  /**\r\n   * Initialize app-check-internal after app-check is initialized to make AppCheck available to\r\n   * other Firebase SDKs\r\n   */.setInstanceCreatedCallback((container, _identifier, _appcheckService) => {\n    container.getProvider(APP_CHECK_NAME_INTERNAL).initialize();\n  }));\n  // The internal interface used by other Firebase products\n  _registerComponent(new Component(APP_CHECK_NAME_INTERNAL, container => {\n    const appCheck = container.getProvider('app-check').getImmediate();\n    return internalFactory(appCheck);\n  }, \"PUBLIC\" /* ComponentType.PUBLIC */).setInstantiationMode(\"EXPLICIT\" /* InstantiationMode.EXPLICIT */));\n  registerVersion(name, version);\n}\nregisterAppCheck();\nexport { CustomProvider, ReCaptchaEnterpriseProvider, ReCaptchaV3Provider, getLimitedUseToken, getToken, initializeAppCheck, onTokenChanged, setTokenAutoRefreshEnabled };\n", "import { ɵgetAllInstancesOf as _getAllInstancesOf, ɵAPP_CHECK_PROVIDER_NAME as _APP_CHECK_PROVIDER_NAME, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, ɵAppCheckInstances as _AppCheckInstances, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nexport { ɵAppCheckInstances as AppCheckInstances } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Optional, PLATFORM_ID, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { getLimitedUseToken as getLimitedUseToken$1, getToken as getToken$1, initializeAppCheck as initializeAppCheck$1, onTokenChanged as onTokenChanged$1, setTokenAutoRefreshEnabled as setTokenAutoRefreshEnabled$1 } from 'firebase/app-check';\nexport * from 'firebase/app-check';\nclass AppCheck {\n  constructor(appCheck) {\n    return appCheck;\n  }\n}\nconst appCheckInstance$ = timer(0, 300).pipe(concatMap(() => from(_getAllInstancesOf(_APP_CHECK_PROVIDER_NAME))), distinct());\nconst PROVIDED_APP_CHECK_INSTANCES = new InjectionToken('angularfire2.app-check-instances');\nfunction defaultAppCheckInstanceFactory(provided, defaultApp) {\n  const defaultAppCheck = _getDefaultInstanceOf(_APP_CHECK_PROVIDER_NAME, provided, defaultApp);\n  return defaultAppCheck && new AppCheck(defaultAppCheck);\n}\nconst LOCALHOSTS = ['localhost', '0.0.0.0', '127.0.0.1'];\nconst isLocalhost = typeof window !== 'undefined' && LOCALHOSTS.includes(window.location.hostname);\nfunction appCheckInstanceFactory(fn) {\n  return (zone, injector, platformId) => {\n    // Node should use admin token provider, browser devmode and localhost should use debug token\n    if (!isPlatformServer(platformId) && (isDevMode() || isLocalhost)) {\n      globalThis.FIREBASE_APPCHECK_DEBUG_TOKEN ??= true;\n    }\n    const appCheck = zone.runOutsideAngular(() => fn(injector));\n    return new AppCheck(appCheck);\n  };\n}\nconst APP_CHECK_INSTANCES_PROVIDER = {\n  provide: _AppCheckInstances,\n  deps: [[new Optional(), PROVIDED_APP_CHECK_INSTANCES]]\n};\nconst DEFAULT_APP_CHECK_INSTANCE_PROVIDER = {\n  provide: AppCheck,\n  useFactory: defaultAppCheckInstanceFactory,\n  deps: [[new Optional(), PROVIDED_APP_CHECK_INSTANCES], FirebaseApp, PLATFORM_ID]\n};\nclass AppCheckModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'app-check');\n  }\n  static ɵfac = function AppCheckModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AppCheckModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AppCheckModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AppCheckModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER]\n    }]\n  }], () => [], null);\n})();\nfunction provideAppCheck(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'app-check');\n  return makeEnvironmentProviders([DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER, {\n    provide: PROVIDED_APP_CHECK_INSTANCES,\n    useFactory: appCheckInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, PLATFORM_ID, _AngularFireSchedulers, FirebaseApps, ...deps]\n  }]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getLimitedUseToken = _zoneWrap(getLimitedUseToken$1, true);\nconst getToken = _zoneWrap(getToken$1, true);\nconst initializeAppCheck = _zoneWrap(initializeAppCheck$1, true);\nconst onTokenChanged = _zoneWrap(onTokenChanged$1, true);\nconst setTokenAutoRefreshEnabled = _zoneWrap(setTokenAutoRefreshEnabled$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AppCheck, AppCheckModule, appCheckInstance$, getLimitedUseToken, getToken, initializeAppCheck, onTokenChanged, provideAppCheck, setTokenAutoRefreshEnabled };\n", "import firebase from '@firebase/app-compat';\nexport { default } from '@firebase/app-compat';\nvar name = \"firebase\";\nvar version = \"10.13.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfirebase.registerVersion(name, version, 'app-compat');\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, NgZone, Optional, VERSION as VERSION$1, PLATFORM_ID, NgModule, Inject } from '@angular/core';\nimport { VERSION } from '@angular/fire';\nimport firebase from 'firebase/compat/app';\n\n// DEBUG quick debugger function for inline logging that typescript doesn't complain about\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\n//       usage: () => log('something') || returnValue\n// const log = (...args: any[]): false => { console.log(...args); return false }\n// The problem here are things like ngOnDestroy are missing, then triggering the service\n// rather than dig too far; I'm capturing these as I go.\nconst noopFunctions = ['ngOnDestroy'];\n// INVESTIGATE should we make the Proxy revokable and do some cleanup?\n//             right now it's fairly simple but I'm sure this will grow in complexity\nconst ɵlazySDKProxy = (klass, observable, zone, options = {}) => {\n  return new Proxy(klass, {\n    get: (_, name) => zone.runOutsideAngular(() => {\n      if (klass[name]) {\n        if (options?.spy?.get) {\n          options.spy.get(name, klass[name]);\n        }\n        return klass[name];\n      }\n      if (noopFunctions.indexOf(name) > -1) {\n        return () => undefined;\n      }\n      const promise = observable.toPromise().then(mod => {\n        const ret = mod?.[name];\n        // TODO move to proper type guards\n        if (typeof ret === 'function') {\n          return ret.bind(mod);\n        } else if (ret?.then) {\n          return ret.then(res => zone.run(() => res));\n        } else {\n          return zone.run(() => ret);\n        }\n      });\n      // recurse the proxy\n      return new Proxy(() => undefined, {\n        get: (_, name) => promise[name],\n        // TODO handle callbacks as transparently as I can\n        apply: (self, _, args) => promise.then(it => {\n          const res = it?.(...args);\n          if (options?.spy?.apply) {\n            options.spy.apply(name, args, res);\n          }\n          return res;\n        })\n      });\n    })\n  });\n};\nconst ɵapplyMixins = (derivedCtor, constructors) => {\n  constructors.forEach(baseCtor => {\n    Object.getOwnPropertyNames(baseCtor.prototype || baseCtor).forEach(name => {\n      Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype || baseCtor, name));\n    });\n  });\n};\nclass FirebaseApp {\n  constructor(app) {\n    return app;\n  }\n}\nconst FIREBASE_OPTIONS = new InjectionToken('angularfire2.app.options');\nconst FIREBASE_APP_NAME = new InjectionToken('angularfire2.app.name');\nfunction ɵfirebaseAppFactory(options, zone, nameOrConfig) {\n  const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n  const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n  config.name = config.name || name;\n  // Added any due to some inconsistency between @firebase/app and firebase types\n  const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0];\n  // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n  // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n  const app = existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config));\n  try {\n    if (JSON.stringify(options) !== JSON.stringify(app.options)) {\n      const hmr = !!module.hot;\n      log$1('error', `${app.name} Firebase App already initialized with different options${hmr ? ', you may need to reload as Firebase is not HMR aware.' : '.'}`);\n    }\n  } catch (e) {/* empty */}\n  return new FirebaseApp(app);\n}\nconst log$1 = (level, ...args) => {\n  if (isDevMode() && typeof console !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console[level](...args);\n  }\n};\nconst FIREBASE_APP_PROVIDER = {\n  provide: FirebaseApp,\n  useFactory: ɵfirebaseAppFactory,\n  deps: [FIREBASE_OPTIONS, NgZone, [new Optional(), FIREBASE_APP_NAME]]\n};\nclass AngularFireModule {\n  static initializeApp(options, nameOrConfig) {\n    return {\n      ngModule: AngularFireModule,\n      providers: [{\n        provide: FIREBASE_OPTIONS,\n        useValue: options\n      }, {\n        provide: FIREBASE_APP_NAME,\n        useValue: nameOrConfig\n      }]\n    };\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  constructor(platformId) {\n    firebase.registerVersion('angularfire', VERSION.full, 'core');\n    firebase.registerVersion('angularfire', VERSION.full, 'app-compat');\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    firebase.registerVersion('angular', VERSION$1.full, platformId.toString());\n  }\n  static ɵfac = function AngularFireModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularFireModule)(i0.ɵɵinject(PLATFORM_ID));\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AngularFireModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [FIREBASE_APP_PROVIDER]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireModule, [{\n    type: NgModule,\n    args: [{\n      providers: [FIREBASE_APP_PROVIDER]\n    }]\n  }], () => [{\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], null);\n})();\nfunction ɵcacheInstance(cacheKey, moduleName, appName, fn, deps) {\n  const [, instance, cachedDeps] = globalThis.ɵAngularfireInstanceCache.find(it => it[0] === cacheKey) || [];\n  if (instance) {\n    if (!matchDep(deps, cachedDeps)) {\n      log('error', `${moduleName} was already initialized on the ${appName} Firebase App with different settings.${IS_HMR ? ' You may need to reload as Firebase is not HMR aware.' : ''}`);\n      log('warn', {\n        is: deps,\n        was: cachedDeps\n      });\n    }\n    return instance;\n  } else {\n    const newInstance = fn();\n    globalThis.ɵAngularfireInstanceCache.push([cacheKey, newInstance, deps]);\n    return newInstance;\n  }\n}\nfunction matchDep(a, b) {\n  try {\n    return a.toString() === b.toString();\n  } catch (_) {\n    return a === b;\n  }\n}\nconst IS_HMR = typeof module !== 'undefined' && !!module.hot;\nconst log = (level, ...args) => {\n  if (isDevMode() && typeof console !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console[level](...args);\n  }\n};\nglobalThis.ɵAngularfireInstanceCache ||= [];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireModule, FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseApp, ɵapplyMixins, ɵcacheInstance, ɵfirebaseAppFactory, ɵlazySDKProxy };\n", "import 'firebase/compat/auth';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i2 from '@angular/fire/app-check';\nimport { ɵcacheInstance as _cacheInstance, ɵfirebaseAppFactory as _firebaseAppFactory, ɵlazySDKProxy as _lazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵapplyMixins as _applyMixins } from '@angular/fire/compat';\nimport { Subject, of, Observable, from, merge } from 'rxjs';\nimport { observeOn, switchMap, map, shareReplay, first, switchMapTo, subscribeOn, filter } from 'rxjs/operators';\nimport firebase from 'firebase/compat/app';\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\n// Export a null object with the same keys as firebase/compat/auth, so Proxy can work with proxy-polyfill in Internet Explorer\nconst proxyPolyfillCompat = {\n  name: null,\n  config: null,\n  emulatorConfig: null,\n  app: null,\n  applyActionCode: null,\n  checkActionCode: null,\n  confirmPasswordReset: null,\n  createUserWithEmailAndPassword: null,\n  currentUser: null,\n  fetchSignInMethodsForEmail: null,\n  isSignInWithEmailLink: null,\n  getRedirectResult: null,\n  languageCode: null,\n  settings: null,\n  onAuthStateChanged: null,\n  onIdTokenChanged: null,\n  sendSignInLinkToEmail: null,\n  sendPasswordResetEmail: null,\n  setPersistence: null,\n  signInAndRetrieveDataWithCredential: null,\n  signInAnonymously: null,\n  signInWithCredential: null,\n  signInWithCustomToken: null,\n  signInWithEmailAndPassword: null,\n  signInWithPhoneNumber: null,\n  signInWithEmailLink: null,\n  signInWithPopup: null,\n  signInWithRedirect: null,\n  signOut: null,\n  tenantId: null,\n  updateCurrentUser: null,\n  useDeviceLanguage: null,\n  useEmulator: null,\n  verifyPasswordResetCode: null\n};\nconst USE_EMULATOR = new InjectionToken('angularfire2.auth.use-emulator');\nconst SETTINGS = new InjectionToken('angularfire2.auth.settings');\nconst TENANT_ID = new InjectionToken('angularfire2.auth.tenant-id');\nconst LANGUAGE_CODE = new InjectionToken('angularfire2.auth.langugage-code');\nconst USE_DEVICE_LANGUAGE = new InjectionToken('angularfire2.auth.use-device-language');\nconst PERSISTENCE = new InjectionToken('angularfire.auth.persistence');\nconst ɵauthFactory = (app, zone, useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence) => _cacheInstance(`${app.name}.auth`, 'AngularFireAuth', app.name, () => {\n  const auth = zone.runOutsideAngular(() => app.auth());\n  if (useEmulator) {\n    auth.useEmulator(...useEmulator);\n  }\n  if (tenantId) {\n    auth.tenantId = tenantId;\n  }\n  auth.languageCode = languageCode;\n  if (useDeviceLanguage) {\n    auth.useDeviceLanguage();\n  }\n  if (settings) {\n    for (const [k, v] of Object.entries(settings)) {\n      auth.settings[k] = v;\n    }\n  }\n  if (persistence) {\n    auth.setPersistence(persistence);\n  }\n  return auth;\n}, [useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence]);\nclass AngularFireAuth {\n  /**\n   * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\n   */\n  authState;\n  /**\n   * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\n   */\n  idToken;\n  /**\n   * Observable of the currently signed-in user (or null).\n   */\n  user;\n  /**\n   * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\n   * helper properties for getting different data associated with the token as well as all the decoded payload claims\n   * (or null).\n   */\n  idTokenResult;\n  /**\n   * Observable of the currently signed-in user's credential, or null\n   */\n  credential;\n  constructor(options, name,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  platformId, zone, schedulers, useEmulator,\n  // can't use the tuple here\n  settings,\n  // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n    const logins = new Subject();\n    const auth = of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap(() => zone.runOutsideAngular(() => import('firebase/compat/auth'))), map(() => _firebaseAppFactory(options, zone, name)), map(app => ɵauthFactory(app, zone, useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence)), shareReplay({\n      bufferSize: 1,\n      refCount: false\n    }));\n    if (isPlatformServer(platformId)) {\n      this.authState = this.user = this.idToken = this.idTokenResult = this.credential = of(null);\n    } else {\n      // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\n      //       (e.g, `import { auth } from 'firebase/compat/app'`) are getting an undefined auth object unexpectedly\n      //       as we're completely lazy. Let's eagerly load the Auth SDK here.\n      //       There could potentially be race conditions still... but this greatly decreases the odds while\n      //       we reevaluate the API.\n      auth.pipe(first()).subscribe();\n      const redirectResult = auth.pipe(switchMap(auth => auth.getRedirectResult().then(it => it, () => null)), keepUnstableUntilFirst, shareReplay({\n        bufferSize: 1,\n        refCount: false\n      }));\n      const authStateChanged = auth.pipe(switchMap(auth => new Observable(sub => ({\n        unsubscribe: zone.runOutsideAngular(() => auth.onAuthStateChanged(next => sub.next(next), err => sub.error(err), () => sub.complete()))\n      }))));\n      const idTokenChanged = auth.pipe(switchMap(auth => new Observable(sub => ({\n        unsubscribe: zone.runOutsideAngular(() => auth.onIdTokenChanged(next => sub.next(next), err => sub.error(err), () => sub.complete()))\n      }))));\n      this.authState = redirectResult.pipe(switchMapTo(authStateChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n      this.user = redirectResult.pipe(switchMapTo(idTokenChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n      this.idToken = this.user.pipe(switchMap(user => user ? from(user.getIdToken()) : of(null)));\n      this.idTokenResult = this.user.pipe(switchMap(user => user ? from(user.getIdTokenResult()) : of(null)));\n      this.credential = merge(redirectResult, logins,\n      // pipe in null authState to make credential zipable, just a weird devexp if\n      // authState and user go null to still have a credential\n      this.authState.pipe(filter(it => !it))).pipe(\n      // handle the { user: { } } when a user is already logged in, rather have null\n      // TODO handle the type corcersion better\n      map(credential => credential?.user ? credential : null), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n    }\n    return _lazySDKProxy(this, auth, zone, {\n      spy: {\n        apply: (name, _, val) => {\n          // If they call a signIn or createUser function listen into the promise\n          // this will give us the user credential, push onto the logins Subject\n          // to be consumed in .credential\n          if (name.startsWith('signIn') || name.startsWith('createUser')) {\n            // TODO fix the types, the trouble is UserCredential has everything optional\n            val.then(user => logins.next(user));\n          }\n        }\n      }\n    });\n  }\n  static ɵfac = function AngularFireAuth_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularFireAuth)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8), i0.ɵɵinject(i2.AppCheckInstances, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AngularFireAuth,\n    factory: AngularFireAuth.ɵfac,\n    providedIn: 'any'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireAuth, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [FIREBASE_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FIREBASE_APP_NAME]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.ɵAngularFireSchedulers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [SETTINGS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TENANT_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LANGUAGE_CODE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_DEVICE_LANGUAGE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PERSISTENCE]\n    }]\n  }, {\n    type: i2.AppCheckInstances,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\n_applyMixins(AngularFireAuth, [proxyPolyfillCompat]);\nclass AngularFireAuthModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'auth-compat');\n  }\n  static ɵfac = function AngularFireAuthModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularFireAuthModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AngularFireAuthModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [AngularFireAuth]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireAuthModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireAuth]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireAuth, AngularFireAuthModule, LANGUAGE_CODE, PERSISTENCE, SETTINGS, TENANT_ID, USE_DEVICE_LANGUAGE, USE_EMULATOR, ɵauthFactory };\n", "import firebase from '@firebase/app-compat';\nimport { FirestoreError, Bytes, _isBase64Available, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, clearIndexedDbPersistence, _DatabaseId, _logWarn, connectFirestoreEmulator, enableNetwork, disableNetwork, _validateIsNotUsedTogether, waitForPendingWrites, onSnapshotsInSync, collection, doc, collectionGroup, runTransaction, ensureFirestoreConfigured, WriteBatch as WriteBatch$1, executeWrite, loadBundle, namedQuery, DocumentSnapshot as DocumentSnapshot$1, DocumentReference as DocumentReference$1, _DocumentKey, refEqual, setDoc, updateDoc, deleteDoc, onSnapshot, getDocFromCache, getDocFromServer, getDoc, snapshotEqual, query, where, orderBy, limit, limitToLast, startAt, startAfter, endBefore, endAt, queryEqual, getDocsFromCache, getDocsFromServer, getDocs, QuerySnapshot as QuerySnapshot$1, addDoc, _cast, AbstractUserDataWriter, setLogLevel as setLogLevel$1, QueryDocumentSnapshot as QueryDocumentSnapshot$1, _debugAssert, FieldPath as FieldPath$1, _FieldPath, serverTimestamp, deleteField, arrayUnion, arrayRemove, increment, GeoPoint, Timestamp, CACHE_SIZE_UNLIMITED } from '@firebase/firestore';\nimport { getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\nconst name = \"@firebase/firestore-compat\";\nconst version = \"0.3.36\";\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction validateSetOptions(methodName, options) {\n  if (options === undefined) {\n    return {\n      merge: false\n    };\n  }\n  if (options.mergeFields !== undefined && options.merge !== undefined) {\n    throw new FirestoreError('invalid-argument', `Invalid options passed to function ${methodName}(): You cannot ` + 'specify both \"merge\" and \"mergeFields\".');\n  }\n  return options;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Helper function to assert Uint8Array is available at runtime. */\nfunction assertUint8ArrayAvailable() {\n  if (typeof Uint8Array === 'undefined') {\n    throw new FirestoreError('unimplemented', 'Uint8Arrays are not available in this environment.');\n  }\n}\n/** Helper function to assert Base64 functions are available at runtime. */\nfunction assertBase64Available() {\n  if (!_isBase64Available()) {\n    throw new FirestoreError('unimplemented', 'Blobs are unavailable in Firestore in this environment.');\n  }\n}\n/** Immutable class holding a blob (binary data) */\nclass Blob {\n  constructor(_delegate) {\n    this._delegate = _delegate;\n  }\n  static fromBase64String(base64) {\n    assertBase64Available();\n    return new Blob(Bytes.fromBase64String(base64));\n  }\n  static fromUint8Array(array) {\n    assertUint8ArrayAvailable();\n    return new Blob(Bytes.fromUint8Array(array));\n  }\n  toBase64() {\n    assertBase64Available();\n    return this._delegate.toBase64();\n  }\n  toUint8Array() {\n    assertUint8ArrayAvailable();\n    return this._delegate.toUint8Array();\n  }\n  isEqual(other) {\n    return this._delegate.isEqual(other._delegate);\n  }\n  toString() {\n    return 'Blob(base64: ' + this.toBase64() + ')';\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction isPartialObserver(obj) {\n  return implementsAnyMethods(obj, ['next', 'error', 'complete']);\n}\n/**\r\n * Returns true if obj is an object and contains at least one of the specified\r\n * methods.\r\n */\nfunction implementsAnyMethods(obj, methods) {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n  const object = obj;\n  for (const method of methods) {\n    if (method in object && typeof object[method] === 'function') {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The persistence provider included with the full Firestore SDK.\r\n */\nclass IndexedDbPersistenceProvider {\n  enableIndexedDbPersistence(firestore, forceOwnership) {\n    return enableIndexedDbPersistence(firestore._delegate, {\n      forceOwnership\n    });\n  }\n  enableMultiTabIndexedDbPersistence(firestore) {\n    return enableMultiTabIndexedDbPersistence(firestore._delegate);\n  }\n  clearIndexedDbPersistence(firestore) {\n    return clearIndexedDbPersistence(firestore._delegate);\n  }\n}\n/**\r\n * Compat class for Firestore. Exposes Firestore Legacy API, but delegates\r\n * to the functional API of firestore-exp.\r\n */\nclass Firestore {\n  constructor(databaseIdOrApp, _delegate, _persistenceProvider) {\n    this._delegate = _delegate;\n    this._persistenceProvider = _persistenceProvider;\n    this.INTERNAL = {\n      delete: () => this.terminate()\n    };\n    if (!(databaseIdOrApp instanceof _DatabaseId)) {\n      this._appCompat = databaseIdOrApp;\n    }\n  }\n  get _databaseId() {\n    return this._delegate._databaseId;\n  }\n  settings(settingsLiteral) {\n    const currentSettings = this._delegate._getSettings();\n    if (!settingsLiteral.merge && currentSettings.host !== settingsLiteral.host) {\n      _logWarn('You are overriding the original host. If you did not intend ' + 'to override your settings, use {merge: true}.');\n    }\n    if (settingsLiteral.merge) {\n      settingsLiteral = Object.assign(Object.assign({}, currentSettings), settingsLiteral);\n      // Remove the property from the settings once the merge is completed\n      delete settingsLiteral.merge;\n    }\n    this._delegate._setSettings(settingsLiteral);\n  }\n  useEmulator(host, port, options = {}) {\n    connectFirestoreEmulator(this._delegate, host, port, options);\n  }\n  enableNetwork() {\n    return enableNetwork(this._delegate);\n  }\n  disableNetwork() {\n    return disableNetwork(this._delegate);\n  }\n  enablePersistence(settings) {\n    let synchronizeTabs = false;\n    let experimentalForceOwningTab = false;\n    if (settings) {\n      synchronizeTabs = !!settings.synchronizeTabs;\n      experimentalForceOwningTab = !!settings.experimentalForceOwningTab;\n      _validateIsNotUsedTogether('synchronizeTabs', synchronizeTabs, 'experimentalForceOwningTab', experimentalForceOwningTab);\n    }\n    return synchronizeTabs ? this._persistenceProvider.enableMultiTabIndexedDbPersistence(this) : this._persistenceProvider.enableIndexedDbPersistence(this, experimentalForceOwningTab);\n  }\n  clearPersistence() {\n    return this._persistenceProvider.clearIndexedDbPersistence(this);\n  }\n  terminate() {\n    if (this._appCompat) {\n      this._appCompat._removeServiceInstance('firestore-compat');\n      this._appCompat._removeServiceInstance('firestore');\n    }\n    return this._delegate._delete();\n  }\n  waitForPendingWrites() {\n    return waitForPendingWrites(this._delegate);\n  }\n  onSnapshotsInSync(arg) {\n    return onSnapshotsInSync(this._delegate, arg);\n  }\n  get app() {\n    if (!this._appCompat) {\n      throw new FirestoreError('failed-precondition', \"Firestore was not initialized using the Firebase SDK. 'app' is \" + 'not available');\n    }\n    return this._appCompat;\n  }\n  collection(pathString) {\n    try {\n      return new CollectionReference(this, collection(this._delegate, pathString));\n    } catch (e) {\n      throw replaceFunctionName(e, 'collection()', 'Firestore.collection()');\n    }\n  }\n  doc(pathString) {\n    try {\n      return new DocumentReference(this, doc(this._delegate, pathString));\n    } catch (e) {\n      throw replaceFunctionName(e, 'doc()', 'Firestore.doc()');\n    }\n  }\n  collectionGroup(collectionId) {\n    try {\n      return new Query(this, collectionGroup(this._delegate, collectionId));\n    } catch (e) {\n      throw replaceFunctionName(e, 'collectionGroup()', 'Firestore.collectionGroup()');\n    }\n  }\n  runTransaction(updateFunction) {\n    return runTransaction(this._delegate, transaction => updateFunction(new Transaction(this, transaction)));\n  }\n  batch() {\n    ensureFirestoreConfigured(this._delegate);\n    return new WriteBatch(new WriteBatch$1(this._delegate, mutations => executeWrite(this._delegate, mutations)));\n  }\n  loadBundle(bundleData) {\n    return loadBundle(this._delegate, bundleData);\n  }\n  namedQuery(name) {\n    return namedQuery(this._delegate, name).then(expQuery => {\n      if (!expQuery) {\n        return null;\n      }\n      return new Query(this,\n      // We can pass `expQuery` here directly since named queries don't have a UserDataConverter.\n      // Otherwise, we would have to create a new ExpQuery and pass the old UserDataConverter.\n      expQuery);\n    });\n  }\n}\nclass UserDataWriter extends AbstractUserDataWriter {\n  constructor(firestore) {\n    super();\n    this.firestore = firestore;\n  }\n  convertBytes(bytes) {\n    return new Blob(new Bytes(bytes));\n  }\n  convertReference(name) {\n    const key = this.convertDocumentKey(name, this.firestore._databaseId);\n    return DocumentReference.forKey(key, this.firestore, /* converter= */null);\n  }\n}\nfunction setLogLevel(level) {\n  setLogLevel$1(level);\n}\n/**\r\n * A reference to a transaction.\r\n */\nclass Transaction {\n  constructor(_firestore, _delegate) {\n    this._firestore = _firestore;\n    this._delegate = _delegate;\n    this._userDataWriter = new UserDataWriter(_firestore);\n  }\n  get(documentRef) {\n    const ref = castReference(documentRef);\n    return this._delegate.get(ref).then(result => new DocumentSnapshot(this._firestore, new DocumentSnapshot$1(this._firestore._delegate, this._userDataWriter, result._key, result._document, result.metadata, ref.converter)));\n  }\n  set(documentRef, data, options) {\n    const ref = castReference(documentRef);\n    if (options) {\n      validateSetOptions('Transaction.set', options);\n      this._delegate.set(ref, data, options);\n    } else {\n      this._delegate.set(ref, data);\n    }\n    return this;\n  }\n  update(documentRef, dataOrField, value, ...moreFieldsAndValues) {\n    const ref = castReference(documentRef);\n    if (arguments.length === 2) {\n      this._delegate.update(ref, dataOrField);\n    } else {\n      this._delegate.update(ref, dataOrField, value, ...moreFieldsAndValues);\n    }\n    return this;\n  }\n  delete(documentRef) {\n    const ref = castReference(documentRef);\n    this._delegate.delete(ref);\n    return this;\n  }\n}\nclass WriteBatch {\n  constructor(_delegate) {\n    this._delegate = _delegate;\n  }\n  set(documentRef, data, options) {\n    const ref = castReference(documentRef);\n    if (options) {\n      validateSetOptions('WriteBatch.set', options);\n      this._delegate.set(ref, data, options);\n    } else {\n      this._delegate.set(ref, data);\n    }\n    return this;\n  }\n  update(documentRef, dataOrField, value, ...moreFieldsAndValues) {\n    const ref = castReference(documentRef);\n    if (arguments.length === 2) {\n      this._delegate.update(ref, dataOrField);\n    } else {\n      this._delegate.update(ref, dataOrField, value, ...moreFieldsAndValues);\n    }\n    return this;\n  }\n  delete(documentRef) {\n    const ref = castReference(documentRef);\n    this._delegate.delete(ref);\n    return this;\n  }\n  commit() {\n    return this._delegate.commit();\n  }\n}\n/**\r\n * Wraps a `PublicFirestoreDataConverter` translating the types from the\r\n * experimental SDK into corresponding types from the Classic SDK before passing\r\n * them to the wrapped converter.\r\n */\nclass FirestoreDataConverter {\n  constructor(_firestore, _userDataWriter, _delegate) {\n    this._firestore = _firestore;\n    this._userDataWriter = _userDataWriter;\n    this._delegate = _delegate;\n  }\n  fromFirestore(snapshot, options) {\n    const expSnapshot = new QueryDocumentSnapshot$1(this._firestore._delegate, this._userDataWriter, snapshot._key, snapshot._document, snapshot.metadata, /* converter= */null);\n    return this._delegate.fromFirestore(new QueryDocumentSnapshot(this._firestore, expSnapshot), options !== null && options !== void 0 ? options : {});\n  }\n  toFirestore(modelObject, options) {\n    if (!options) {\n      return this._delegate.toFirestore(modelObject);\n    } else {\n      return this._delegate.toFirestore(modelObject, options);\n    }\n  }\n  // Use the same instance of `FirestoreDataConverter` for the given instances\n  // of `Firestore` and `PublicFirestoreDataConverter` so that isEqual() will\n  // compare equal for two objects created with the same converter instance.\n  static getInstance(firestore, converter) {\n    const converterMapByFirestore = FirestoreDataConverter.INSTANCES;\n    let untypedConverterByConverter = converterMapByFirestore.get(firestore);\n    if (!untypedConverterByConverter) {\n      untypedConverterByConverter = new WeakMap();\n      converterMapByFirestore.set(firestore, untypedConverterByConverter);\n    }\n    let instance = untypedConverterByConverter.get(converter);\n    if (!instance) {\n      instance = new FirestoreDataConverter(firestore, new UserDataWriter(firestore), converter);\n      untypedConverterByConverter.set(converter, instance);\n    }\n    return instance;\n  }\n}\nFirestoreDataConverter.INSTANCES = new WeakMap();\n/**\r\n * A reference to a particular document in a collection in the database.\r\n */\nclass DocumentReference {\n  constructor(firestore, _delegate) {\n    this.firestore = firestore;\n    this._delegate = _delegate;\n    this._userDataWriter = new UserDataWriter(firestore);\n  }\n  static forPath(path, firestore, converter) {\n    if (path.length % 2 !== 0) {\n      throw new FirestoreError('invalid-argument', 'Invalid document reference. Document ' + 'references must have an even number of segments, but ' + `${path.canonicalString()} has ${path.length}`);\n    }\n    return new DocumentReference(firestore, new DocumentReference$1(firestore._delegate, converter, new _DocumentKey(path)));\n  }\n  static forKey(key, firestore, converter) {\n    return new DocumentReference(firestore, new DocumentReference$1(firestore._delegate, converter, key));\n  }\n  get id() {\n    return this._delegate.id;\n  }\n  get parent() {\n    return new CollectionReference(this.firestore, this._delegate.parent);\n  }\n  get path() {\n    return this._delegate.path;\n  }\n  collection(pathString) {\n    try {\n      return new CollectionReference(this.firestore, collection(this._delegate, pathString));\n    } catch (e) {\n      throw replaceFunctionName(e, 'collection()', 'DocumentReference.collection()');\n    }\n  }\n  isEqual(other) {\n    other = getModularInstance(other);\n    if (!(other instanceof DocumentReference$1)) {\n      return false;\n    }\n    return refEqual(this._delegate, other);\n  }\n  set(value, options) {\n    options = validateSetOptions('DocumentReference.set', options);\n    try {\n      if (options) {\n        return setDoc(this._delegate, value, options);\n      } else {\n        return setDoc(this._delegate, value);\n      }\n    } catch (e) {\n      throw replaceFunctionName(e, 'setDoc()', 'DocumentReference.set()');\n    }\n  }\n  update(fieldOrUpdateData, value, ...moreFieldsAndValues) {\n    try {\n      if (arguments.length === 1) {\n        return updateDoc(this._delegate, fieldOrUpdateData);\n      } else {\n        return updateDoc(this._delegate, fieldOrUpdateData, value, ...moreFieldsAndValues);\n      }\n    } catch (e) {\n      throw replaceFunctionName(e, 'updateDoc()', 'DocumentReference.update()');\n    }\n  }\n  delete() {\n    return deleteDoc(this._delegate);\n  }\n  onSnapshot(...args) {\n    const options = extractSnapshotOptions(args);\n    const observer = wrapObserver(args, result => new DocumentSnapshot(this.firestore, new DocumentSnapshot$1(this.firestore._delegate, this._userDataWriter, result._key, result._document, result.metadata, this._delegate.converter)));\n    return onSnapshot(this._delegate, options, observer);\n  }\n  get(options) {\n    let snap;\n    if ((options === null || options === void 0 ? void 0 : options.source) === 'cache') {\n      snap = getDocFromCache(this._delegate);\n    } else if ((options === null || options === void 0 ? void 0 : options.source) === 'server') {\n      snap = getDocFromServer(this._delegate);\n    } else {\n      snap = getDoc(this._delegate);\n    }\n    return snap.then(result => new DocumentSnapshot(this.firestore, new DocumentSnapshot$1(this.firestore._delegate, this._userDataWriter, result._key, result._document, result.metadata, this._delegate.converter)));\n  }\n  withConverter(converter) {\n    return new DocumentReference(this.firestore, converter ? this._delegate.withConverter(FirestoreDataConverter.getInstance(this.firestore, converter)) : this._delegate.withConverter(null));\n  }\n}\n/**\r\n * Replaces the function name in an error thrown by the firestore-exp API\r\n * with the function names used in the classic API.\r\n */\nfunction replaceFunctionName(e, original, updated) {\n  e.message = e.message.replace(original, updated);\n  return e;\n}\n/**\r\n * Iterates the list of arguments from an `onSnapshot` call and returns the\r\n * first argument that may be an `SnapshotListenOptions` object. Returns an\r\n * empty object if none is found.\r\n */\nfunction extractSnapshotOptions(args) {\n  for (const arg of args) {\n    if (typeof arg === 'object' && !isPartialObserver(arg)) {\n      return arg;\n    }\n  }\n  return {};\n}\n/**\r\n * Creates an observer that can be passed to the firestore-exp SDK. The\r\n * observer converts all observed values into the format expected by the classic\r\n * SDK.\r\n *\r\n * @param args - The list of arguments from an `onSnapshot` call.\r\n * @param wrapper - The function that converts the firestore-exp type into the\r\n * type used by this shim.\r\n */\nfunction wrapObserver(args, wrapper) {\n  var _a, _b;\n  let userObserver;\n  if (isPartialObserver(args[0])) {\n    userObserver = args[0];\n  } else if (isPartialObserver(args[1])) {\n    userObserver = args[1];\n  } else if (typeof args[0] === 'function') {\n    userObserver = {\n      next: args[0],\n      error: args[1],\n      complete: args[2]\n    };\n  } else {\n    userObserver = {\n      next: args[1],\n      error: args[2],\n      complete: args[3]\n    };\n  }\n  return {\n    next: val => {\n      if (userObserver.next) {\n        userObserver.next(wrapper(val));\n      }\n    },\n    error: (_a = userObserver.error) === null || _a === void 0 ? void 0 : _a.bind(userObserver),\n    complete: (_b = userObserver.complete) === null || _b === void 0 ? void 0 : _b.bind(userObserver)\n  };\n}\nclass DocumentSnapshot {\n  constructor(_firestore, _delegate) {\n    this._firestore = _firestore;\n    this._delegate = _delegate;\n  }\n  get ref() {\n    return new DocumentReference(this._firestore, this._delegate.ref);\n  }\n  get id() {\n    return this._delegate.id;\n  }\n  get metadata() {\n    return this._delegate.metadata;\n  }\n  get exists() {\n    return this._delegate.exists();\n  }\n  data(options) {\n    return this._delegate.data(options);\n  }\n  get(fieldPath, options\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) {\n    return this._delegate.get(fieldPath, options);\n  }\n  isEqual(other) {\n    return snapshotEqual(this._delegate, other._delegate);\n  }\n}\nclass QueryDocumentSnapshot extends DocumentSnapshot {\n  data(options) {\n    const data = this._delegate.data(options);\n    if (this._delegate._converter) {\n      // Undefined is a possible valid value from converter.\n      return data;\n    } else {\n      _debugAssert(data !== undefined, 'Document in a QueryDocumentSnapshot should exist');\n      return data;\n    }\n  }\n}\nclass Query {\n  constructor(firestore, _delegate) {\n    this.firestore = firestore;\n    this._delegate = _delegate;\n    this._userDataWriter = new UserDataWriter(firestore);\n  }\n  where(fieldPath, opStr, value) {\n    try {\n      // The \"as string\" cast is a little bit of a hack. `where` accepts the\n      // FieldPath Compat type as input, but is not typed as such in order to\n      // not expose this via our public typings file.\n      return new Query(this.firestore, query(this._delegate, where(fieldPath, opStr, value)));\n    } catch (e) {\n      throw replaceFunctionName(e, /(orderBy|where)\\(\\)/, 'Query.$1()');\n    }\n  }\n  orderBy(fieldPath, directionStr) {\n    try {\n      // The \"as string\" cast is a little bit of a hack. `orderBy` accepts the\n      // FieldPath Compat type as input, but is not typed as such in order to\n      // not expose this via our public typings file.\n      return new Query(this.firestore, query(this._delegate, orderBy(fieldPath, directionStr)));\n    } catch (e) {\n      throw replaceFunctionName(e, /(orderBy|where)\\(\\)/, 'Query.$1()');\n    }\n  }\n  limit(n) {\n    try {\n      return new Query(this.firestore, query(this._delegate, limit(n)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'limit()', 'Query.limit()');\n    }\n  }\n  limitToLast(n) {\n    try {\n      return new Query(this.firestore, query(this._delegate, limitToLast(n)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'limitToLast()', 'Query.limitToLast()');\n    }\n  }\n  startAt(...args) {\n    try {\n      return new Query(this.firestore, query(this._delegate, startAt(...args)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'startAt()', 'Query.startAt()');\n    }\n  }\n  startAfter(...args) {\n    try {\n      return new Query(this.firestore, query(this._delegate, startAfter(...args)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'startAfter()', 'Query.startAfter()');\n    }\n  }\n  endBefore(...args) {\n    try {\n      return new Query(this.firestore, query(this._delegate, endBefore(...args)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'endBefore()', 'Query.endBefore()');\n    }\n  }\n  endAt(...args) {\n    try {\n      return new Query(this.firestore, query(this._delegate, endAt(...args)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'endAt()', 'Query.endAt()');\n    }\n  }\n  isEqual(other) {\n    return queryEqual(this._delegate, other._delegate);\n  }\n  get(options) {\n    let query;\n    if ((options === null || options === void 0 ? void 0 : options.source) === 'cache') {\n      query = getDocsFromCache(this._delegate);\n    } else if ((options === null || options === void 0 ? void 0 : options.source) === 'server') {\n      query = getDocsFromServer(this._delegate);\n    } else {\n      query = getDocs(this._delegate);\n    }\n    return query.then(result => new QuerySnapshot(this.firestore, new QuerySnapshot$1(this.firestore._delegate, this._userDataWriter, this._delegate, result._snapshot)));\n  }\n  onSnapshot(...args) {\n    const options = extractSnapshotOptions(args);\n    const observer = wrapObserver(args, snap => new QuerySnapshot(this.firestore, new QuerySnapshot$1(this.firestore._delegate, this._userDataWriter, this._delegate, snap._snapshot)));\n    return onSnapshot(this._delegate, options, observer);\n  }\n  withConverter(converter) {\n    return new Query(this.firestore, converter ? this._delegate.withConverter(FirestoreDataConverter.getInstance(this.firestore, converter)) : this._delegate.withConverter(null));\n  }\n}\nclass DocumentChange {\n  constructor(_firestore, _delegate) {\n    this._firestore = _firestore;\n    this._delegate = _delegate;\n  }\n  get type() {\n    return this._delegate.type;\n  }\n  get doc() {\n    return new QueryDocumentSnapshot(this._firestore, this._delegate.doc);\n  }\n  get oldIndex() {\n    return this._delegate.oldIndex;\n  }\n  get newIndex() {\n    return this._delegate.newIndex;\n  }\n}\nclass QuerySnapshot {\n  constructor(_firestore, _delegate) {\n    this._firestore = _firestore;\n    this._delegate = _delegate;\n  }\n  get query() {\n    return new Query(this._firestore, this._delegate.query);\n  }\n  get metadata() {\n    return this._delegate.metadata;\n  }\n  get size() {\n    return this._delegate.size;\n  }\n  get empty() {\n    return this._delegate.empty;\n  }\n  get docs() {\n    return this._delegate.docs.map(doc => new QueryDocumentSnapshot(this._firestore, doc));\n  }\n  docChanges(options) {\n    return this._delegate.docChanges(options).map(docChange => new DocumentChange(this._firestore, docChange));\n  }\n  forEach(callback, thisArg) {\n    this._delegate.forEach(snapshot => {\n      callback.call(thisArg, new QueryDocumentSnapshot(this._firestore, snapshot));\n    });\n  }\n  isEqual(other) {\n    return snapshotEqual(this._delegate, other._delegate);\n  }\n}\nclass CollectionReference extends Query {\n  constructor(firestore, _delegate) {\n    super(firestore, _delegate);\n    this.firestore = firestore;\n    this._delegate = _delegate;\n  }\n  get id() {\n    return this._delegate.id;\n  }\n  get path() {\n    return this._delegate.path;\n  }\n  get parent() {\n    const docRef = this._delegate.parent;\n    return docRef ? new DocumentReference(this.firestore, docRef) : null;\n  }\n  doc(documentPath) {\n    try {\n      if (documentPath === undefined) {\n        // Call `doc` without `documentPath` if `documentPath` is `undefined`\n        // as `doc` validates the number of arguments to prevent users from\n        // accidentally passing `undefined`.\n        return new DocumentReference(this.firestore, doc(this._delegate));\n      } else {\n        return new DocumentReference(this.firestore, doc(this._delegate, documentPath));\n      }\n    } catch (e) {\n      throw replaceFunctionName(e, 'doc()', 'CollectionReference.doc()');\n    }\n  }\n  add(data) {\n    return addDoc(this._delegate, data).then(docRef => new DocumentReference(this.firestore, docRef));\n  }\n  isEqual(other) {\n    return refEqual(this._delegate, other._delegate);\n  }\n  withConverter(converter) {\n    return new CollectionReference(this.firestore, converter ? this._delegate.withConverter(FirestoreDataConverter.getInstance(this.firestore, converter)) : this._delegate.withConverter(null));\n  }\n}\nfunction castReference(documentRef) {\n  return _cast(documentRef, DocumentReference$1);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// The objects that are a part of this API are exposed to third-parties as\n// compiled javascript so we want to flag our private members with a leading\n// underscore to discourage their use.\n/**\r\n * A `FieldPath` refers to a field in a document. The path may consist of a\r\n * single field name (referring to a top-level field in the document), or a list\r\n * of field names (referring to a nested field in the document).\r\n */\nclass FieldPath {\n  /**\r\n   * Creates a FieldPath from the provided field names. If more than one field\r\n   * name is provided, the path will point to a nested field in a document.\r\n   *\r\n   * @param fieldNames - A list of field names.\r\n   */\n  constructor(...fieldNames) {\n    this._delegate = new FieldPath$1(...fieldNames);\n  }\n  static documentId() {\n    /**\r\n     * Internal Note: The backend doesn't technically support querying by\r\n     * document ID. Instead it queries by the entire document name (full path\r\n     * included), but in the cases we currently support documentId(), the net\r\n     * effect is the same.\r\n     */\n    return new FieldPath(_FieldPath.keyField().canonicalString());\n  }\n  isEqual(other) {\n    other = getModularInstance(other);\n    if (!(other instanceof FieldPath$1)) {\n      return false;\n    }\n    return this._delegate._internalPath.isEqual(other._internalPath);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass FieldValue {\n  constructor(_delegate) {\n    this._delegate = _delegate;\n  }\n  static serverTimestamp() {\n    const delegate = serverTimestamp();\n    delegate._methodName = 'FieldValue.serverTimestamp';\n    return new FieldValue(delegate);\n  }\n  static delete() {\n    const delegate = deleteField();\n    delegate._methodName = 'FieldValue.delete';\n    return new FieldValue(delegate);\n  }\n  static arrayUnion(...elements) {\n    const delegate = arrayUnion(...elements);\n    delegate._methodName = 'FieldValue.arrayUnion';\n    return new FieldValue(delegate);\n  }\n  static arrayRemove(...elements) {\n    const delegate = arrayRemove(...elements);\n    delegate._methodName = 'FieldValue.arrayRemove';\n    return new FieldValue(delegate);\n  }\n  static increment(n) {\n    const delegate = increment(n);\n    delegate._methodName = 'FieldValue.increment';\n    return new FieldValue(delegate);\n  }\n  isEqual(other) {\n    return this._delegate.isEqual(other._delegate);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst firestoreNamespace = {\n  Firestore,\n  GeoPoint,\n  Timestamp,\n  Blob,\n  Transaction,\n  WriteBatch,\n  DocumentReference,\n  DocumentSnapshot,\n  Query,\n  QueryDocumentSnapshot,\n  QuerySnapshot,\n  CollectionReference,\n  FieldPath,\n  FieldValue,\n  setLogLevel,\n  CACHE_SIZE_UNLIMITED\n};\n/**\r\n * Configures Firestore as part of the Firebase SDK by calling registerComponent.\r\n *\r\n * @param firebase - The FirebaseNamespace to register Firestore with\r\n * @param firestoreFactory - A factory function that returns a new Firestore\r\n *    instance.\r\n */\nfunction configureForFirebase(firebase, firestoreFactory) {\n  firebase.INTERNAL.registerComponent(new Component('firestore-compat', container => {\n    const app = container.getProvider('app-compat').getImmediate();\n    const firestoreExp = container.getProvider('firestore').getImmediate();\n    return firestoreFactory(app, firestoreExp);\n  }, 'PUBLIC').setServiceProps(Object.assign({}, firestoreNamespace)));\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Registers the main Firestore build with the components framework.\r\n * Persistence can be enabled via `firebase.firestore().enablePersistence()`.\r\n */\nfunction registerFirestore(instance) {\n  configureForFirebase(instance, (app, firestoreExp) => new Firestore(app, firestoreExp, new IndexedDbPersistenceProvider()));\n  instance.registerVersion(name, version);\n}\nregisterFirestore(firebase);\nexport { registerFirestore };\n", "import { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i3 from '@angular/fire/app-check';\nimport { ɵfirebaseAppFactory as _firebaseAppFactory, ɵcacheInstance as _cacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory as _authFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS as SETTINGS$1, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport { Observable, asyncScheduler, from, of } from 'rxjs';\nimport { startWith, pairwise, map, scan, distinctUntilChanged, filter } from 'rxjs/operators';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport firebase from 'firebase/compat/app';\nfunction _fromRef(ref, scheduler = asyncScheduler) {\n  return new Observable(subscriber => {\n    let unsubscribe;\n    if (scheduler != null) {\n      scheduler.schedule(() => {\n        unsubscribe = ref.onSnapshot({\n          includeMetadataChanges: true\n        }, subscriber);\n      });\n    } else {\n      unsubscribe = ref.onSnapshot({\n        includeMetadataChanges: true\n      }, subscriber);\n    }\n    return () => {\n      if (unsubscribe != null) {\n        unsubscribe();\n      }\n    };\n  });\n}\nfunction fromRef(ref, scheduler) {\n  return _fromRef(ref, scheduler);\n}\nfunction fromDocRef(ref, scheduler) {\n  return fromRef(ref, scheduler).pipe(startWith(undefined), pairwise(), map(snapshots => {\n    const [priorPayload, payload] = snapshots;\n    if (!payload.exists) {\n      return {\n        payload,\n        type: 'removed'\n      };\n    }\n    if (!priorPayload?.exists) {\n      return {\n        payload,\n        type: 'added'\n      };\n    }\n    return {\n      payload,\n      type: 'modified'\n    };\n  }));\n}\nfunction fromCollectionRef(ref, scheduler) {\n  return fromRef(ref, scheduler).pipe(map(payload => ({\n    payload,\n    type: 'query'\n  })));\n}\n\n/**\n * AngularFirestoreDocument service\n *\n * This class creates a reference to a Firestore Document. A reference is provided in\n * in the constructor. The class is generic which gives you type safety for data update\n * methods and data streaming.\n *\n * This class uses Symbol.observable to transform into Observable using Observable.from().\n *\n * This class is rarely used directly and should be created from the AngularFirestore service.\n *\n * Example:\n *\n * const fakeStock = new AngularFirestoreDocument<Stock>(doc('stocks/FAKE'));\n * await fakeStock.set({ name: 'FAKE', price: 0.01 });\n * fakeStock.valueChanges().map(snap => {\n *   if(snap.exists) return snap.data();\n *   return null;\n * }).subscribe(value => console.log(value));\n * // OR! Transform using Observable.from() and the data is unwrapped for you\n * Observable.from(fakeStock).subscribe(value => console.log(value));\n */\nclass AngularFirestoreDocument {\n  ref;\n  afs;\n  /**\n   * The constructor takes in a DocumentReference to provide wrapper methods\n   * for data operations, data streaming, and Symbol.observable.\n   */\n  constructor(ref, afs) {\n    this.ref = ref;\n    this.afs = afs;\n  }\n  /**\n   * Create or overwrite a single document.\n   */\n  set(data, options) {\n    return this.ref.set(data, options);\n  }\n  /**\n   * Update some fields of a document without overwriting the entire document.\n   */\n  update(data) {\n    return this.ref.update(data);\n  }\n  /**\n   * Delete a document.\n   */\n  delete() {\n    return this.ref.delete();\n  }\n  /**\n   * Create a reference to a sub-collection given a path and an optional query\n   * function.\n   */\n  collection(path, queryFn) {\n    const collectionRef = this.ref.collection(path);\n    const {\n      ref,\n      query\n    } = associateQuery(collectionRef, queryFn);\n    return new AngularFirestoreCollection(ref, query, this.afs);\n  }\n  /**\n   * Listen to snapshot updates from the document.\n   */\n  snapshotChanges() {\n    const scheduledFromDocRef$ = fromDocRef(this.ref, this.afs.schedulers.outsideAngular);\n    return scheduledFromDocRef$.pipe(keepUnstableUntilFirst);\n  }\n  valueChanges(options = {}) {\n    return this.snapshotChanges().pipe(map(({\n      payload\n    }) => options.idField ? {\n      ...payload.data(),\n      ...{\n        [options.idField]: payload.id\n      }\n    } : payload.data()));\n  }\n  /**\n   * Retrieve the document once.\n   */\n  get(options) {\n    return from(this.ref.get(options)).pipe(keepUnstableUntilFirst);\n  }\n}\n\n/**\n * Return a stream of document changes on a query. These results are not in sort order but in\n * order of occurence.\n */\nfunction docChanges(query, scheduler) {\n  return fromCollectionRef(query, scheduler).pipe(startWith(undefined), pairwise(), map(actionTuple => {\n    const [priorAction, action] = actionTuple;\n    const docChanges = action.payload.docChanges();\n    const actions = docChanges.map(change => ({\n      type: change.type,\n      payload: change\n    }));\n    // the metadata has changed from the prior emission\n    if (priorAction && JSON.stringify(priorAction.payload.metadata) !== JSON.stringify(action.payload.metadata)) {\n      // go through all the docs in payload and figure out which ones changed\n      action.payload.docs.forEach((currentDoc, currentIndex) => {\n        const docChange = docChanges.find(d => d.doc.ref.isEqual(currentDoc.ref));\n        const priorDoc = priorAction?.payload.docs.find(d => d.ref.isEqual(currentDoc.ref));\n        if (docChange && JSON.stringify(docChange.doc.metadata) === JSON.stringify(currentDoc.metadata) || !docChange && priorDoc && JSON.stringify(priorDoc.metadata) === JSON.stringify(currentDoc.metadata)) {\n          // document doesn't appear to have changed, don't log another action\n        } else {\n          // since the actions are processed in order just push onto the array\n          actions.push({\n            type: 'modified',\n            payload: {\n              oldIndex: currentIndex,\n              newIndex: currentIndex,\n              type: 'modified',\n              doc: currentDoc\n            }\n          });\n        }\n      });\n    }\n    return actions;\n  }));\n}\n/**\n * Return a stream of document changes on a query. These results are in sort order.\n */\nfunction sortedChanges(query, events, scheduler) {\n  return docChanges(query, scheduler).pipe(scan((current, changes) => combineChanges(current, changes.map(it => it.payload), events), []), distinctUntilChanged(),\n  // cut down on unneed change cycles\n  map(changes => changes.map(c => ({\n    type: c.type,\n    payload: c\n  }))));\n}\n/**\n * Combines the total result set from the current set of changes from an incoming set\n * of changes.\n */\nfunction combineChanges(current, changes, events) {\n  changes.forEach(change => {\n    // skip unwanted change types\n    if (events.indexOf(change.type) > -1) {\n      current = combineChange(current, change);\n    }\n  });\n  return current;\n}\n/**\n * Splice arguments on top of a sliced array, to break top-level ===\n * this is useful for change-detection\n */\nfunction sliceAndSplice(original, start, deleteCount, ...args) {\n  const returnArray = original.slice();\n  returnArray.splice(start, deleteCount, ...args);\n  return returnArray;\n}\n/**\n * Creates a new sorted array from a new change.\n * Build our own because we allow filtering of action types ('added', 'removed', 'modified') before scanning\n * and so we have greater control over change detection (by breaking ===)\n */\nfunction combineChange(combined, change) {\n  switch (change.type) {\n    case 'added':\n      if (combined[change.newIndex] && combined[change.newIndex].doc.ref.isEqual(change.doc.ref)) {\n        // Not sure why the duplicates are getting fired\n      } else {\n        return sliceAndSplice(combined, change.newIndex, 0, change);\n      }\n      break;\n    case 'modified':\n      if (combined[change.oldIndex] == null || combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\n        // When an item changes position we first remove it\n        // and then add it's new position\n        if (change.oldIndex !== change.newIndex) {\n          const copiedArray = combined.slice();\n          copiedArray.splice(change.oldIndex, 1);\n          copiedArray.splice(change.newIndex, 0, change);\n          return copiedArray;\n        } else {\n          return sliceAndSplice(combined, change.newIndex, 1, change);\n        }\n      }\n      break;\n    case 'removed':\n      if (combined[change.oldIndex] && combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\n        return sliceAndSplice(combined, change.oldIndex, 1);\n      }\n      break;\n  }\n  return combined;\n}\nfunction validateEventsArray(events) {\n  if (!events || events.length === 0) {\n    events = ['added', 'removed', 'modified'];\n  }\n  return events;\n}\n/**\n * AngularFirestoreCollection service\n *\n * This class creates a reference to a Firestore Collection. A reference and a query are provided in\n * in the constructor. The query can be the unqueried reference if no query is desired.The class\n * is generic which gives you type safety for data update methods and data streaming.\n *\n * This class uses Symbol.observable to transform into Observable using Observable.from().\n *\n * This class is rarely used directly and should be created from the AngularFirestore service.\n *\n * Example:\n *\n * const collectionRef = firebase.firestore.collection('stocks');\n * const query = collectionRef.where('price', '>', '0.01');\n * const fakeStock = new AngularFirestoreCollection<Stock>(collectionRef, query);\n *\n * // NOTE!: the updates are performed on the reference not the query\n * await fakeStock.add({ name: 'FAKE', price: 0.01 });\n *\n * // Subscribe to changes as snapshots. This provides you data updates as well as delta updates.\n * fakeStock.valueChanges().subscribe(value => console.log(value));\n */\nclass AngularFirestoreCollection {\n  ref;\n  query;\n  afs;\n  /**\n   * The constructor takes in a CollectionReference and Query to provide wrapper methods\n   * for data operations and data streaming.\n   *\n   * Note: Data operation methods are done on the reference not the query. This means\n   * when you update data it is not updating data to the window of your query unless\n   * the data fits the criteria of the query. See the AssociatedRefence type for details\n   * on this implication.\n   */\n  constructor(ref, query, afs) {\n    this.ref = ref;\n    this.query = query;\n    this.afs = afs;\n  }\n  /**\n   * Listen to the latest change in the stream. This method returns changes\n   * as they occur and they are not sorted by query order. This allows you to construct\n   * your own data structure.\n   */\n  stateChanges(events) {\n    let source = docChanges(this.query, this.afs.schedulers.outsideAngular);\n    if (events && events.length > 0) {\n      source = source.pipe(map(actions => actions.filter(change => events.indexOf(change.type) > -1)));\n    }\n    return source.pipe(\n    // We want to filter out empty arrays, but always emit at first, so the developer knows\n    // that the collection has been resolve; even if it's empty\n    startWith(undefined), pairwise(), filter(([prior, current]) => current.length > 0 || !prior), map(([, current]) => current), keepUnstableUntilFirst);\n  }\n  /**\n   * Create a stream of changes as they occur it time. This method is similar to stateChanges()\n   * but it collects each event in an array over time.\n   */\n  auditTrail(events) {\n    return this.stateChanges(events).pipe(scan((current, action) => [...current, ...action], []));\n  }\n  /**\n   * Create a stream of synchronized changes. This method keeps the local array in sorted\n   * query order.\n   */\n  snapshotChanges(events) {\n    const validatedEvents = validateEventsArray(events);\n    const scheduledSortedChanges$ = sortedChanges(this.query, validatedEvents, this.afs.schedulers.outsideAngular);\n    return scheduledSortedChanges$.pipe(keepUnstableUntilFirst);\n  }\n  valueChanges(options = {}) {\n    return fromCollectionRef(this.query, this.afs.schedulers.outsideAngular).pipe(map(actions => actions.payload.docs.map(a => {\n      if (options.idField) {\n        return {\n          ...a.data(),\n          ...{\n            [options.idField]: a.id\n          }\n        };\n      } else {\n        return a.data();\n      }\n    })), keepUnstableUntilFirst);\n  }\n  /**\n   * Retrieve the results of the query once.\n   */\n  get(options) {\n    return from(this.query.get(options)).pipe(keepUnstableUntilFirst);\n  }\n  /**\n   * Add data to a collection reference.\n   *\n   * Note: Data operation methods are done on the reference not the query. This means\n   * when you update data it is not updating data to the window of your query unless\n   * the data fits the criteria of the query.\n   */\n  add(data) {\n    return this.ref.add(data);\n  }\n  /**\n   * Create a reference to a single document in a collection.\n   */\n  doc(path) {\n    // TODO is there a better way to solve this type issue\n    return new AngularFirestoreDocument(this.ref.doc(path), this.afs);\n  }\n}\n\n/**\n * AngularFirestoreCollectionGroup service\n *\n * This class holds a reference to a Firestore Collection Group Query.\n *\n * This class uses Symbol.observable to transform into Observable using Observable.from().\n *\n * This class is rarely used directly and should be created from the AngularFirestore service.\n *\n * Example:\n *\n * const collectionGroup = firebase.firestore.collectionGroup('stocks');\n * const query = collectionRef.where('price', '>', '0.01');\n * const fakeStock = new AngularFirestoreCollectionGroup<Stock>(query, afs);\n *\n * // Subscribe to changes as snapshots. This provides you data updates as well as delta updates.\n * fakeStock.valueChanges().subscribe(value => console.log(value));\n */\nclass AngularFirestoreCollectionGroup {\n  query;\n  afs;\n  /**\n   * The constructor takes in a CollectionGroupQuery to provide wrapper methods\n   * for data operations and data streaming.\n   */\n  constructor(query, afs) {\n    this.query = query;\n    this.afs = afs;\n  }\n  /**\n   * Listen to the latest change in the stream. This method returns changes\n   * as they occur and they are not sorted by query order. This allows you to construct\n   * your own data structure.\n   */\n  stateChanges(events) {\n    if (!events || events.length === 0) {\n      return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(keepUnstableUntilFirst);\n    }\n    return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(map(actions => actions.filter(change => events.indexOf(change.type) > -1)), filter(changes => changes.length > 0), keepUnstableUntilFirst);\n  }\n  /**\n   * Create a stream of changes as they occur it time. This method is similar to stateChanges()\n   * but it collects each event in an array over time.\n   */\n  auditTrail(events) {\n    return this.stateChanges(events).pipe(scan((current, action) => [...current, ...action], []));\n  }\n  /**\n   * Create a stream of synchronized changes. This method keeps the local array in sorted\n   * query order.\n   */\n  snapshotChanges(events) {\n    const validatedEvents = validateEventsArray(events);\n    const scheduledSortedChanges$ = sortedChanges(this.query, validatedEvents, this.afs.schedulers.outsideAngular);\n    return scheduledSortedChanges$.pipe(keepUnstableUntilFirst);\n  }\n  valueChanges(options = {}) {\n    const fromCollectionRefScheduled$ = fromCollectionRef(this.query, this.afs.schedulers.outsideAngular);\n    return fromCollectionRefScheduled$.pipe(map(actions => actions.payload.docs.map(a => {\n      if (options.idField) {\n        return {\n          [options.idField]: a.id,\n          ...a.data()\n        };\n      } else {\n        return a.data();\n      }\n    })), keepUnstableUntilFirst);\n  }\n  /**\n   * Retrieve the results of the query once.\n   */\n  get(options) {\n    return from(this.query.get(options)).pipe(keepUnstableUntilFirst);\n  }\n}\n\n/**\n * The value of this token determines whether or not the firestore will have persistance enabled\n */\nconst ENABLE_PERSISTENCE = new InjectionToken('angularfire2.enableFirestorePersistence');\nconst PERSISTENCE_SETTINGS = new InjectionToken('angularfire2.firestore.persistenceSettings');\nconst SETTINGS = new InjectionToken('angularfire2.firestore.settings');\nconst USE_EMULATOR = new InjectionToken('angularfire2.firestore.use-emulator');\n/**\n * A utility methods for associating a collection reference with\n * a query.\n *\n * @param collectionRef - A collection reference to query\n * @param queryFn - The callback to create a query\n *\n * Example:\n * const { query, ref } = associateQuery(docRef.collection('items'), ref => {\n *  return ref.where('age', '<', 200);\n * });\n */\nfunction associateQuery(collectionRef, queryFn = ref => ref) {\n  const query = queryFn(collectionRef);\n  const ref = collectionRef;\n  return {\n    query,\n    ref\n  };\n}\n/**\n * AngularFirestore Service\n *\n * This service is the main entry point for this feature module. It provides\n * an API for creating Collection and Reference services. These services can\n * then be used to do data updates and observable streams of the data.\n *\n * Example:\n *\n * import { Component } from '@angular/core';\n * import { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\n * import { Observable } from 'rxjs/Observable';\n * import { from } from 'rxjs/observable';\n *\n * @Component({\n *   selector: 'app-my-component',\n *   template: `\n *    <h2>Items for {{ (profile | async)?.name }}\n *    <ul>\n *       <li *ngFor=\"let item of items | async\">{{ item.name }}</li>\n *    </ul>\n *    <div class=\"control-input\">\n *       <input type=\"text\" #itemname />\n *       <button (click)=\"addItem(itemname.value)\">Add Item</button>\n *    </div>\n *   `\n * })\n * export class MyComponent implements OnInit {\n *\n *   // services for data operations and data streaming\n *   private readonly itemsRef: AngularFirestoreCollection<Item>;\n *   private readonly profileRef: AngularFirestoreDocument<Profile>;\n *\n *   // observables for template\n *   items: Observable<Item[]>;\n *   profile: Observable<Profile>;\n *\n *   // inject main service\n *   constructor(private readonly afs: AngularFirestore) {}\n *\n *   ngOnInit() {\n *     this.itemsRef = afs.collection('items', ref => ref.where('user', '==', 'davideast').limit(10));\n *     this.items = this.itemsRef.valueChanges().map(snap => snap.docs.map(data => doc.data()));\n *     // this.items = from(this.itemsRef); // you can also do this with no mapping\n *\n *     this.profileRef = afs.doc('users/davideast');\n *     this.profile = this.profileRef.valueChanges();\n *   }\n *\n *   addItem(name: string) {\n *     const user = 'davideast';\n *     this.itemsRef.add({ name, user });\n *   }\n * }\n */\nclass AngularFirestore {\n  schedulers;\n  firestore;\n  persistenceEnabled$;\n  /**\n   * Each Feature of AngularFire has a FirebaseApp injected. This way we\n   * don't rely on the main Firebase App instance and we can create named\n   * apps and use multiple apps.\n   */\n  constructor(options, name, shouldEnablePersistence, settings,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  platformId, zone, schedulers, persistenceSettings, _useEmulator, auth, useAuthEmulator, authSettings,\n  // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n    this.schedulers = schedulers;\n    const app = _firebaseAppFactory(options, zone, name);\n    const useEmulator = _useEmulator;\n    if (auth) {\n      _authFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n    }\n    [this.firestore, this.persistenceEnabled$] = _cacheInstance(`${app.name}.firestore`, 'AngularFirestore', app.name, () => {\n      const firestore = zone.runOutsideAngular(() => app.firestore());\n      if (settings) {\n        firestore.settings(settings);\n      }\n      if (useEmulator) {\n        firestore.useEmulator(...useEmulator);\n      }\n      if (shouldEnablePersistence && !isPlatformServer(platformId)) {\n        // We need to try/catch here because not all enablePersistence() failures are caught\n        // https://github.com/firebase/firebase-js-sdk/issues/608\n        const enablePersistence = () => {\n          try {\n            return from(firestore.enablePersistence(persistenceSettings || undefined).then(() => true, () => false));\n          } catch (e) {\n            if (typeof console !== 'undefined') {\n              console.warn(e);\n            }\n            return of(false);\n          }\n        };\n        return [firestore, zone.runOutsideAngular(enablePersistence)];\n      } else {\n        return [firestore, of(false)];\n      }\n    }, [settings, useEmulator, shouldEnablePersistence]);\n  }\n  collection(pathOrRef, queryFn) {\n    let collectionRef;\n    if (typeof pathOrRef === 'string') {\n      collectionRef = this.firestore.collection(pathOrRef);\n    } else {\n      collectionRef = pathOrRef;\n    }\n    const {\n      ref,\n      query\n    } = associateQuery(collectionRef, queryFn);\n    const refInZone = this.schedulers.ngZone.run(() => ref);\n    return new AngularFirestoreCollection(refInZone, query, this);\n  }\n  /**\n   * Create a reference to a Firestore Collection Group based on a collectionId\n   * and an optional query function to narrow the result\n   * set.\n   */\n  collectionGroup(collectionId, queryGroupFn) {\n    const queryFn = queryGroupFn || (ref => ref);\n    const collectionGroup = this.firestore.collectionGroup(collectionId);\n    return new AngularFirestoreCollectionGroup(queryFn(collectionGroup), this);\n  }\n  doc(pathOrRef) {\n    let ref;\n    if (typeof pathOrRef === 'string') {\n      ref = this.firestore.doc(pathOrRef);\n    } else {\n      ref = pathOrRef;\n    }\n    const refInZone = this.schedulers.ngZone.run(() => ref);\n    return new AngularFirestoreDocument(refInZone, this);\n  }\n  /**\n   * Returns a generated Firestore Document Id.\n   */\n  createId() {\n    return this.firestore.collection('_').doc().id;\n  }\n  static ɵfac = function AngularFirestore_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularFirestore)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(ENABLE_PERSISTENCE, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(PERSISTENCE_SETTINGS, 8), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(i2.AngularFireAuth, 8), i0.ɵɵinject(USE_EMULATOR$1, 8), i0.ɵɵinject(SETTINGS$1, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8), i0.ɵɵinject(i3.AppCheckInstances, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AngularFirestore,\n    factory: AngularFirestore.ɵfac,\n    providedIn: 'any'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFirestore, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [FIREBASE_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FIREBASE_APP_NAME]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ENABLE_PERSISTENCE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [SETTINGS]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.ɵAngularFireSchedulers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PERSISTENCE_SETTINGS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR]\n    }]\n  }, {\n    type: i2.AngularFireAuth,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR$1]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [SETTINGS$1]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TENANT_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LANGUAGE_CODE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_DEVICE_LANGUAGE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PERSISTENCE]\n    }]\n  }, {\n    type: i3.AppCheckInstances,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\nclass AngularFirestoreModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'fst-compat');\n  }\n  /**\n   * Attempt to enable persistent storage, if possible\n   */\n  static enablePersistence(persistenceSettings) {\n    return {\n      ngModule: AngularFirestoreModule,\n      providers: [{\n        provide: ENABLE_PERSISTENCE,\n        useValue: true\n      }, {\n        provide: PERSISTENCE_SETTINGS,\n        useValue: persistenceSettings\n      }]\n    };\n  }\n  static ɵfac = function AngularFirestoreModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularFirestoreModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AngularFirestoreModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [AngularFirestore]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFirestoreModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFirestore]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreCollectionGroup, AngularFirestoreDocument, AngularFirestoreModule, ENABLE_PERSISTENCE, PERSISTENCE_SETTINGS, SETTINGS, USE_EMULATOR, associateQuery, combineChange, combineChanges, docChanges, fromCollectionRef, fromDocRef, fromRef, sortedChanges, validateEventsArray };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAM,mBAAmB,oBAAI,IAAI;AACjC,IAAM,gBAAgB;AAAA,EACpB,WAAW;AAAA,EACX,gBAAgB,CAAC;AACnB;AACA,IAAM,cAAc;AAAA,EAClB,aAAa;AAAA,EACb,SAAS;AACX;AAIA,SAAS,kBAAkB,KAAK;AAC9B,SAAO,iBAAiB,IAAI,GAAG,KAAK,OAAO,OAAO,CAAC,GAAG,aAAa;AACrE;AAKA,SAAS,gBAAgB,KAAK,OAAO;AACnC,mBAAiB,IAAI,KAAK,KAAK;AAC/B,SAAO,iBAAiB,IAAI,GAAG;AACjC;AACA,SAAS,gBAAgB;AACvB,SAAO;AACT;AAkBA,IAAM,gBAAgB;AAGtB,IAAM,8BAA8B;AACpC,IAAM,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKzB,iBAAiB,IAAI,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAK1B,kBAAkB,KAAK;AAAA;AAAA;AAAA;AAAA,EAIvB,kBAAkB,KAAK,KAAK;AAC9B;AAIA,IAAM,UAAU,KAAK,KAAK,KAAK;AAwB/B,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY,WAAW,aAAa,iBAAiB,YAAY,YAAY;AAC3E,SAAK,YAAY;AACjB,SAAK,cAAc;AACnB,SAAK,kBAAkB;AACvB,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,UAAU;AACf,SAAK,wBAAwB;AAC7B,QAAI,aAAa,YAAY;AAC3B,YAAM,IAAI,MAAM,yDAAyD;AAAA,IAC3E;AAAA,EACF;AAAA,EACA,QAAQ;AACN,SAAK,wBAAwB,KAAK;AAClC,SAAK,QAAQ,IAAI,EAAE,MAAM,MAAM;AAAA,IAE/B,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,OAAO,WAAW;AAC/B,WAAK,UAAU;AAAA,IACjB;AAAA,EACF;AAAA,EACA,YAAY;AACV,WAAO,CAAC,CAAC,KAAK;AAAA,EAChB;AAAA,EACM,QAAQ,cAAc;AAAA;AAC1B,WAAK,KAAK;AACV,UAAI;AACF,aAAK,UAAU,IAAI,SAAS;AAC5B,aAAK,QAAQ,QAAQ,MAAM,QAAM;AAAA,QAEjC,CAAC;AACD,cAAM,MAAM,KAAK,WAAW,YAAY,CAAC;AAMzC,aAAK,QAAQ,QAAQ;AACrB,cAAM,KAAK,QAAQ;AACnB,aAAK,UAAU,IAAI,SAAS;AAC5B,aAAK,QAAQ,QAAQ,MAAM,QAAM;AAAA,QAEjC,CAAC;AACD,cAAM,KAAK,UAAU;AACrB,aAAK,QAAQ,QAAQ;AACrB,cAAM,KAAK,QAAQ;AACnB,aAAK,QAAQ,IAAI,EAAE,MAAM,MAAM;AAAA,QAE/B,CAAC;AAAA,MACH,SAAS,OAAO;AACd,YAAI,KAAK,YAAY,KAAK,GAAG;AAC3B,eAAK,QAAQ,KAAK,EAAE,MAAM,MAAM;AAAA,UAEhC,CAAC;AAAA,QACH,OAAO;AACL,eAAK,KAAK;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA;AAAA,EACA,WAAW,cAAc;AACvB,QAAI,cAAc;AAGhB,WAAK,wBAAwB,KAAK;AAElC,aAAO,KAAK,gBAAgB;AAAA,IAC9B,OAAO;AAEL,YAAM,2BAA2B,KAAK;AAEtC,WAAK,yBAAyB;AAE9B,UAAI,KAAK,wBAAwB,KAAK,YAAY;AAChD,aAAK,wBAAwB,KAAK;AAAA,MACpC;AACA,aAAO;AAAA,IACT;AAAA,EACF;AACF;AACA,SAAS,MAAM,IAAI;AACjB,SAAO,IAAI,QAAQ,aAAW;AAC5B,eAAW,SAAS,EAAE;AAAA,EACxB,CAAC;AACH;AAkBA,IAAM,SAAS;AAAA,EACb;AAAA,IAAC;AAAA;AAAA,EAA6D,GAAG;AAAA,EACjE;AAAA,IAAC;AAAA;AAAA,EAAiE,GAAG;AAAA,EACrE;AAAA,IAAC;AAAA;AAAA,EAA6D,GAAG;AAAA,EACjE;AAAA,IAAC;AAAA;AAAA,EAAyD,GAAG;AAAA,EAC7D;AAAA,IAAC;AAAA;AAAA,EAA2D,GAAG;AAAA,EAC/D;AAAA,IAAC;AAAA;AAAA,EAA+C,GAAG;AAAA,EACnD;AAAA,IAAC;AAAA;AAAA,EAA6C,GAAG;AAAA,EACjD;AAAA,IAAC;AAAA;AAAA,EAA+C,GAAG;AAAA,EACnD;AAAA,IAAC;AAAA;AAAA,EAAqD,GAAG;AAAA,EACzD;AAAA,IAAC;AAAA;AAAA,EAAyC,GAAG;AAC/C;AACA,IAAM,gBAAgB,IAAI,aAAa,YAAY,YAAY,MAAM;AAyBrE,SAAS,gBAAgB,KAAK;AAC5B,MAAI,CAAC,kBAAkB,GAAG,EAAE,WAAW;AACrC,UAAM,cAAc,OAAO,yBAAmE;AAAA,MAC5F,SAAS,IAAI;AAAA,IACf,CAAC;AAAA,EACH;AACF;AAwCA,SAAe,cAAc,IAG1B,IAA0B;AAAA,6CAHA;AAAA,IAC3B;AAAA,IACA;AAAA,EACF,GAAG,0BAA0B;AAC3B,UAAM,UAAU;AAAA,MACd,gBAAgB;AAAA,IAClB;AAEA,UAAM,mBAAmB,yBAAyB,aAAa;AAAA,MAC7D,UAAU;AAAA,IACZ,CAAC;AACD,QAAI,kBAAkB;AACpB,YAAM,mBAAmB,MAAM,iBAAiB,oBAAoB;AACpE,UAAI,kBAAkB;AACpB,gBAAQ,mBAAmB,IAAI;AAAA,MACjC;AAAA,IACF;AACA,UAAM,UAAU;AAAA,MACd,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB;AAAA,IACF;AACA,QAAI;AACJ,QAAI;AACF,iBAAW,MAAM,MAAM,KAAK,OAAO;AAAA,IACrC,SAAS,eAAe;AACtB,YAAM,cAAc,OAAO,uBAA+D;AAAA,QACxF,sBAAsB,kBAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc;AAAA,MACpG,CAAC;AAAA,IACH;AACA,QAAI,SAAS,WAAW,KAAK;AAC3B,YAAM,cAAc,OAAO,sBAA6D;AAAA,QACtF,YAAY,SAAS;AAAA,MACvB,CAAC;AAAA,IACH;AACA,QAAI;AACJ,QAAI;AAEF,qBAAe,MAAM,SAAS,KAAK;AAAA,IACrC,SAAS,eAAe;AACtB,YAAM,cAAc,OAAO,qBAA2D;AAAA,QACpF,sBAAsB,kBAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc;AAAA,MACpG,CAAC;AAAA,IACH;AAGA,UAAM,QAAQ,aAAa,IAAI,MAAM,eAAe;AACpD,QAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,MAAM,OAAO,MAAM,CAAC,CAAC,CAAC,GAAG;AAClD,YAAM,cAAc,OAAO,qBAA2D;AAAA,QACpF,sBAAsB,uEAA4E,aAAa,GAAG;AAAA,MACpH,CAAC;AAAA,IACH;AACA,UAAM,qBAAqB,OAAO,MAAM,CAAC,CAAC,IAAI;AAC9C,UAAM,MAAM,KAAK,IAAI;AACrB,WAAO;AAAA,MACL,OAAO,aAAa;AAAA,MACpB,kBAAkB,MAAM;AAAA,MACxB,oBAAoB;AAAA,IACtB;AAAA,EACF;AAAA;AA2BA,SAAS,6BAA6B,KAAK,YAAY;AACrD,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,IAAI;AACR,SAAO;AAAA,IACL,KAAK,GAAG,aAAa,aAAa,SAAS,SAAS,KAAK,IAAI,2BAA2B,QAAQ,MAAM;AAAA,IACtG,MAAM;AAAA;AAAA,MAEJ,aAAa;AAAA,IACf;AAAA,EACF;AACF;AAkBA,IAAM,UAAU;AAChB,IAAM,aAAa;AACnB,IAAM,aAAa;AACnB,IAAM,kBAAkB;AACxB,IAAI,YAAY;AAChB,SAAS,eAAe;AACtB,MAAI,WAAW;AACb,WAAO;AAAA,EACT;AACA,cAAY,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC3C,QAAI;AACF,YAAM,UAAU,UAAU,KAAK,SAAS,UAAU;AAClD,cAAQ,YAAY,WAAS;AAC3B,gBAAQ,MAAM,OAAO,MAAM;AAAA,MAC7B;AACA,cAAQ,UAAU,WAAS;AACzB,YAAI;AACJ,eAAO,cAAc,OAAO,gBAAiD;AAAA,UAC3E,uBAAuB,KAAK,MAAM,OAAO,WAAW,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,QAC1F,CAAC,CAAC;AAAA,MACJ;AACA,cAAQ,kBAAkB,WAAS;AACjC,cAAM,KAAK,MAAM,OAAO;AAMxB,gBAAQ,MAAM,YAAY;AAAA,UACxB,KAAK;AACH,eAAG,kBAAkB,YAAY;AAAA,cAC/B,SAAS;AAAA,YACX,CAAC;AAAA,QACL;AAAA,MACF;AAAA,IACF,SAAS,GAAG;AACV,aAAO,cAAc,OAAO,gBAAiD;AAAA,QAC3E,sBAAsB,MAAM,QAAQ,MAAM,SAAS,SAAS,EAAE;AAAA,MAChE,CAAC,CAAC;AAAA,IACJ;AAAA,EACF,CAAC;AACD,SAAO;AACT;AACA,SAAS,uBAAuB,KAAK;AACnC,SAAO,KAAK,WAAW,GAAG,CAAC;AAC7B;AACA,SAAS,sBAAsB,KAAK,OAAO;AACzC,SAAO,MAAM,WAAW,GAAG,GAAG,KAAK;AACrC;AACA,SAAS,2BAA2B,OAAO;AACzC,SAAO,MAAM,iBAAiB,KAAK;AACrC;AACA,SAAS,8BAA8B;AACrC,SAAO,KAAK,eAAe;AAC7B;AACA,SAAe,MAAM,KAAK,OAAO;AAAA;AAC/B,UAAM,KAAK,MAAM,aAAa;AAC9B,UAAM,cAAc,GAAG,YAAY,YAAY,WAAW;AAC1D,UAAM,QAAQ,YAAY,YAAY,UAAU;AAChD,UAAM,UAAU,MAAM,IAAI;AAAA,MACxB,cAAc;AAAA,MACd;AAAA,IACF,CAAC;AACD,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,cAAQ,YAAY,YAAU;AAC5B,gBAAQ;AAAA,MACV;AACA,kBAAY,UAAU,WAAS;AAC7B,YAAI;AACJ,eAAO,cAAc,OAAO,eAAiD;AAAA,UAC3E,uBAAuB,KAAK,MAAM,OAAO,WAAW,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,QAC1F,CAAC,CAAC;AAAA,MACJ;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AACA,SAAe,KAAK,KAAK;AAAA;AACvB,UAAM,KAAK,MAAM,aAAa;AAC9B,UAAM,cAAc,GAAG,YAAY,YAAY,UAAU;AACzD,UAAM,QAAQ,YAAY,YAAY,UAAU;AAChD,UAAM,UAAU,MAAM,IAAI,GAAG;AAC7B,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,cAAQ,YAAY,WAAS;AAC3B,cAAM,SAAS,MAAM,OAAO;AAC5B,YAAI,QAAQ;AACV,kBAAQ,OAAO,KAAK;AAAA,QACtB,OAAO;AACL,kBAAQ,MAAS;AAAA,QACnB;AAAA,MACF;AACA,kBAAY,UAAU,WAAS;AAC7B,YAAI;AACJ,eAAO,cAAc,OAAO,eAA+C;AAAA,UACzE,uBAAuB,KAAK,MAAM,OAAO,WAAW,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,QAC1F,CAAC,CAAC;AAAA,MACJ;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AACA,SAAS,WAAW,KAAK;AACvB,SAAO,GAAG,IAAI,QAAQ,KAAK,IAAI,IAAI,IAAI;AACzC;AAkBA,IAAM,SAAS,IAAI,OAAO,qBAAqB;AAqB/C,SAAe,qBAAqB,KAAK;AAAA;AACvC,QAAI,qBAAqB,GAAG;AAC1B,UAAI,QAAQ;AACZ,UAAI;AACF,gBAAQ,MAAM,uBAAuB,GAAG;AAAA,MAC1C,SAAS,GAAG;AAEV,eAAO,KAAK,+CAA+C,CAAC,EAAE;AAAA,MAChE;AACA,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA;AAIA,SAAS,oBAAoB,KAAK,OAAO;AACvC,MAAI,qBAAqB,GAAG;AAC1B,WAAO,sBAAsB,KAAK,KAAK,EAAE,MAAM,OAAK;AAElD,aAAO,KAAK,8CAA8C,CAAC,EAAE;AAAA,IAC/D,CAAC;AAAA,EACH;AACA,SAAO,QAAQ,QAAQ;AACzB;AACA,SAAe,oCAAoC;AAAA;AAKjD,QAAI,qBAAqB;AACzB,QAAI;AACF,2BAAqB,MAAM,4BAA4B;AAAA,IACzD,SAAS,IAAI;AAAA,IAEb;AACA,QAAI,CAAC,oBAAoB;AAEvB,YAAM,WAAW,OAAO;AAMxB,iCAA2B,QAAQ,EAAE,MAAM,OAAK,OAAO,KAAK,sDAAsD,CAAC,EAAE,CAAC;AACtH,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAkBA,SAAS,cAAc;AACrB,QAAM,aAAa,cAAc;AACjC,SAAO,WAAW;AACpB;AACA,SAAe,gBAAgB;AAAA;AAC7B,UAAM,QAAQ,cAAc;AAC5B,QAAI,MAAM,WAAW,MAAM,OAAO;AAChC,aAAO,MAAM,MAAM;AAAA,IACrB,OAAO;AAEL,YAAM,MAAM;AAAA;AAAA,SAEP;AAAA,IACP;AAAA,EACF;AAAA;AACA,SAAS,sBAAsB;AAC7B,QAAM,UAAU,UAAU;AAC1B,QAAM,aAAa,cAAc;AAGjC,aAAW,cAAc;AACzB,MAAI,OAAO,QAAQ,kCAAkC,YAAY,QAAQ,kCAAkC,MAAM;AAC/G;AAAA,EACF;AACA,aAAW,UAAU;AACrB,QAAM,gBAAgB,IAAI,SAAS;AACnC,aAAW,QAAQ;AACnB,MAAI,OAAO,QAAQ,kCAAkC,UAAU;AAC7D,kBAAc,QAAQ,QAAQ,6BAA6B;AAAA,EAC7D,OAAO;AACL,kBAAc,QAAQ,kCAAkC,CAAC;AAAA,EAC3D;AACF;AAoBA,IAAM,wBAAwB;AAAA,EAC5B,OAAO;AACT;AAMA,SAAS,iBAAiB,gBAAgB;AACxC,SAAO,OAAO;AAAA,IAAa,KAAK,UAAU,cAAc;AAAA;AAAA,IAAiB;AAAA,EAAK;AAChF;AAMA,SAAe,WAAW,UAAU,eAAe,OAAO;AAAA;AACxD,UAAM,MAAM,SAAS;AACrB,oBAAgB,GAAG;AACnB,UAAM,QAAQ,kBAAkB,GAAG;AAInC,QAAI,QAAQ,MAAM;AAClB,QAAI,QAAQ;AAKZ,QAAI,SAAS,CAAC,QAAQ,KAAK,GAAG;AAC5B,YAAM,QAAQ;AACd,cAAQ;AAAA,IACV;AAIA,QAAI,CAAC,OAAO;AAEV,YAAM,cAAc,MAAM,MAAM;AAChC,UAAI,aAAa;AACf,YAAI,QAAQ,WAAW,GAAG;AACxB,kBAAQ;AAAA,QACV,OAAO;AAEL,gBAAM,oBAAoB,KAAK,MAAS;AAAA,QAC1C;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAAC,gBAAgB,SAAS,QAAQ,KAAK,GAAG;AAC5C,aAAO;AAAA,QACL,OAAO,MAAM;AAAA,MACf;AAAA,IACF;AAIA,QAAI,sBAAsB;AAM1B,QAAI,YAAY,GAAG;AAEjB,UAAI,CAAC,MAAM,sBAAsB;AAC/B,cAAM,uBAAuB,cAAc,6BAA6B,KAAK,MAAM,cAAc,CAAC,GAAG,SAAS,wBAAwB,EAAE,QAAQ,MAAM;AAEpJ,gBAAM,uBAAuB;AAAA,QAC/B,CAAC;AACD,8BAAsB;AAAA,MACxB;AACA,YAAM,yBAAyB,MAAM,MAAM;AAE3C,YAAM,oBAAoB,KAAK,sBAAsB;AAErD,YAAM,QAAQ;AACd,aAAO;AAAA,QACL,OAAO,uBAAuB;AAAA,MAChC;AAAA,IACF;AAMA,QAAI;AAEF,UAAI,CAAC,MAAM,sBAAsB;AAI/B,cAAM,uBAAuB,MAAM,SAAS,SAAS,EAAE,QAAQ,MAAM;AAEnE,gBAAM,uBAAuB;AAAA,QAC/B,CAAC;AACD,8BAAsB;AAAA,MACxB;AACA,cAAQ,MAAM,kBAAkB,GAAG,EAAE;AAAA,IACvC,SAAS,GAAG;AACV,UAAI,EAAE,SAAS,YAAY,WAAyC,IAAI;AAEtE,eAAO,KAAK,EAAE,OAAO;AAAA,MACvB,OAAO;AAEL,eAAO,MAAM,CAAC;AAAA,MAChB;AAEA,cAAQ;AAAA,IACV;AACA,QAAI;AACJ,QAAI,CAAC,OAAO;AAGV,2BAAqB,qBAAqB,KAAK;AAAA,IACjD,WAAW,OAAO;AAChB,UAAI,QAAQ,KAAK,GAAG;AAQlB,6BAAqB;AAAA,UACnB,OAAO,MAAM;AAAA,UACb,eAAe;AAAA,QACjB;AAAA,MACF,OAAO;AAGL,6BAAqB,qBAAqB,KAAK;AAAA,MACjD;AAAA,IACF,OAAO;AACL,2BAAqB;AAAA,QACnB,OAAO,MAAM;AAAA,MACf;AAGA,YAAM,QAAQ;AACd,YAAM,oBAAoB,KAAK,KAAK;AAAA,IACtC;AACA,QAAI,qBAAqB;AACvB,2BAAqB,KAAK,kBAAkB;AAAA,IAC9C;AACA,WAAO;AAAA,EACT;AAAA;AAKA,SAAe,qBAAqB,UAAU;AAAA;AAC5C,UAAM,MAAM,SAAS;AACrB,oBAAgB,GAAG;AACnB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI,kBAAkB,GAAG;AACzB,QAAI,YAAY,GAAG;AACjB,YAAM,aAAa,MAAM,cAAc;AACvC,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,MAAM,cAAc,6BAA6B,KAAK,UAAU,GAAG,SAAS,wBAAwB;AACxG,aAAO;AAAA,QACL;AAAA,MACF;AAAA,IACF,OAAO;AAEL,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,MAAM,SAAS,SAAS;AAC5B,aAAO;AAAA,QACL;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AACA,SAAS,iBAAiB,UAAU,MAAM,UAAU,SAAS;AAC3D,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,QAAM,QAAQ,kBAAkB,GAAG;AACnC,QAAM,gBAAgB;AAAA,IACpB,MAAM;AAAA,IACN,OAAO;AAAA,IACP;AAAA,EACF;AACA,QAAM,iBAAiB,CAAC,GAAG,MAAM,gBAAgB,aAAa;AAG9D,MAAI,MAAM,SAAS,QAAQ,MAAM,KAAK,GAAG;AACvC,UAAM,aAAa,MAAM;AACzB,YAAQ,QAAQ,EAAE,KAAK,MAAM;AAC3B,eAAS;AAAA,QACP,OAAO,WAAW;AAAA,MACpB,CAAC;AACD,yBAAmB,QAAQ;AAAA,IAC7B,CAAC,EAAE,MAAM,MAAM;AAAA,IAEf,CAAC;AAAA,EACH;AAWA,OAAK,MAAM,mBAAmB,KAAK,MAAM,mBAAmB,QAAQ,CAAC;AACvE;AACA,SAAS,oBAAoB,KAAK,UAAU;AAC1C,QAAM,QAAQ,kBAAkB,GAAG;AACnC,QAAM,eAAe,MAAM,eAAe,OAAO,mBAAiB,cAAc,SAAS,QAAQ;AACjG,MAAI,aAAa,WAAW,KAAK,MAAM,kBAAkB,MAAM,eAAe,UAAU,GAAG;AACzF,UAAM,eAAe,KAAK;AAAA,EAC5B;AACA,QAAM,iBAAiB;AACzB;AAIA,SAAS,mBAAmB,UAAU;AACpC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,QAAM,QAAQ,kBAAkB,GAAG;AAGnC,MAAI,YAAY,MAAM;AACtB,MAAI,CAAC,WAAW;AACd,gBAAY,qBAAqB,QAAQ;AACzC,UAAM,iBAAiB;AAAA,EACzB;AACA,MAAI,CAAC,UAAU,UAAU,KAAK,MAAM,2BAA2B;AAC7D,cAAU,MAAM;AAAA,EAClB;AACF;AACA,SAAS,qBAAqB,UAAU;AACtC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,SAAO,IAAI;AAAA;AAAA;AAAA,IAGX,MAAY;AACV,YAAM,QAAQ,kBAAkB,GAAG;AAGnC,UAAI;AACJ,UAAI,CAAC,MAAM,OAAO;AAChB,iBAAS,MAAM,WAAW,QAAQ;AAAA,MACpC,OAAO;AACL,iBAAS,MAAM,WAAW,UAAU,IAAI;AAAA,MAC1C;AAKA,UAAI,OAAO,OAAO;AAChB,cAAM,OAAO;AAAA,MACf;AASA,UAAI,OAAO,eAAe;AACxB,cAAM,OAAO;AAAA,MACf;AAAA,IACF;AAAA,IAAG,MAAM;AACP,aAAO;AAAA,IACT;AAAA,IAAG,MAAM;AACP,YAAM,QAAQ,kBAAkB,GAAG;AACnC,UAAI,MAAM,OAAO;AAEf,YAAI,wBAAwB,MAAM,MAAM,sBAAsB,MAAM,MAAM,mBAAmB,MAAM,MAAM,sBAAsB,MAAM,IAAI,KAAK;AAE9I,cAAM,yBAAyB,MAAM,MAAM,mBAAmB,IAAI,KAAK;AACvE,gCAAwB,KAAK,IAAI,uBAAuB,sBAAsB;AAC9E,eAAO,KAAK,IAAI,GAAG,wBAAwB,KAAK,IAAI,CAAC;AAAA,MACvD,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IAAG,mBAAmB;AAAA,IAAkB,mBAAmB;AAAA,EAAgB;AAC7E;AACA,SAAS,qBAAqB,KAAK,OAAO;AACxC,QAAM,YAAY,kBAAkB,GAAG,EAAE;AACzC,aAAW,YAAY,WAAW;AAChC,QAAI;AACF,UAAI,SAAS,SAAS,cAA0C,MAAM,SAAS,MAAM;AAInF,iBAAS,MAAM,MAAM,KAAK;AAAA,MAC5B,OAAO;AAIL,iBAAS,KAAK,KAAK;AAAA,MACrB;AAAA,IACF,SAAS,GAAG;AAAA,IAEZ;AAAA,EACF;AACF;AACA,SAAS,QAAQ,OAAO;AACtB,SAAO,MAAM,mBAAmB,KAAK,IAAI,IAAI;AAC/C;AACA,SAAS,qBAAqB,OAAO;AACnC,SAAO;AAAA,IACL,OAAO,iBAAiB,qBAAqB;AAAA,IAC7C;AAAA,EACF;AACF;AAqBA,IAAM,kBAAN,MAAsB;AAAA,EACpB,YAAY,KAAK,0BAA0B;AACzC,SAAK,MAAM;AACX,SAAK,2BAA2B;AAAA,EAClC;AAAA,EACA,UAAU;AACR,UAAM;AAAA,MACJ;AAAA,IACF,IAAI,kBAAkB,KAAK,GAAG;AAC9B,eAAW,iBAAiB,gBAAgB;AAC1C,0BAAoB,KAAK,KAAK,cAAc,IAAI;AAAA,IAClD;AACA,WAAO,QAAQ,QAAQ;AAAA,EACzB;AACF;AACA,SAAS,QAAQ,KAAK,0BAA0B;AAC9C,SAAO,IAAI,gBAAgB,KAAK,wBAAwB;AAC1D;AACA,SAAS,gBAAgB,UAAU;AACjC,SAAO;AAAA,IACL,UAAU,kBAAgB,WAAW,UAAU,YAAY;AAAA,IAC3D,oBAAoB,MAAM,qBAAqB,QAAQ;AAAA,IACvD,kBAAkB,cAAY,iBAAiB,UAAU,YAAwC,QAAQ;AAAA,IACzG,qBAAqB,cAAY,oBAAoB,SAAS,KAAK,QAAQ;AAAA,EAC7E;AACF;AACA,IAAM,OAAO;AACb,IAAM,UAAU;AAqahB,SAAS,mBAAmB,MAAM,OAAO,GAAG,SAAS;AACnD,QAAM,mBAAmB,GAAG;AAC5B,QAAM,WAAW,aAAa,KAAK,WAAW;AAE9C,MAAI,CAAC,cAAc,EAAE,aAAa;AAChC,wBAAoB;AAAA,EACtB;AAGA,MAAI,YAAY,GAAG;AAEjB,SAAK,cAAc,EAAE,KAAK;AAAA;AAAA,MAE1B,QAAQ,IAAI,0BAA0B,KAAK,oGAAoG;AAAA,KAAC;AAAA,EAClJ;AACA,MAAI,SAAS,cAAc,GAAG;AAC5B,UAAM,mBAAmB,SAAS,aAAa;AAC/C,UAAM,iBAAiB,SAAS,WAAW;AAC3C,QAAI,eAAe,8BAA8B,QAAQ,6BAA6B,eAAe,SAAS,QAAQ,QAAQ,QAAQ,GAAG;AACvI,aAAO;AAAA,IACT,OAAO;AACL,YAAM,cAAc,OAAO,uBAA+D;AAAA,QACxF,SAAS,IAAI;AAAA,MACf,CAAC;AAAA,IACH;AAAA,EACF;AACA,QAAM,WAAW,SAAS,WAAW;AAAA,IACnC;AAAA,EACF,CAAC;AACD,YAAU,KAAK,QAAQ,UAAU,QAAQ,yBAAyB;AAIlE,MAAI,kBAAkB,GAAG,EAAE,2BAA2B;AAMpD,qBAAiB,UAAU,YAAwC,MAAM;AAAA,IAAC,CAAC;AAAA,EAC7E;AACA,SAAO;AACT;AAWA,SAAS,UAAU,KAAK,UAAU,2BAA2B;AAG3D,QAAM,QAAQ,gBAAgB,KAAK,OAAO,OAAO,CAAC,GAAG,aAAa,CAAC;AACnE,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,QAAM,qBAAqB,qBAAqB,GAAG,EAAE,KAAK,iBAAe;AACvE,QAAI,eAAe,QAAQ,WAAW,GAAG;AACvC,YAAM,QAAQ;AAEd,2BAAqB,KAAK;AAAA,QACxB,OAAO,YAAY;AAAA,MACrB,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT,CAAC;AAID,QAAM,4BAA4B,8BAA8B,SAAY,IAAI,iCAAiC;AACjH,QAAM,SAAS,WAAW,GAAG;AAC/B;AAUA,SAAS,2BAA2B,kBAAkB,2BAA2B;AAC/E,QAAM,MAAM,iBAAiB;AAC7B,QAAM,QAAQ,kBAAkB,GAAG;AAGnC,MAAI,MAAM,gBAAgB;AACxB,QAAI,8BAA8B,MAAM;AACtC,YAAM,eAAe,MAAM;AAAA,IAC7B,OAAO;AACL,YAAM,eAAe,KAAK;AAAA,IAC5B;AAAA,EACF;AACA,QAAM,4BAA4B;AACpC;AAWA,SAAe,SAAS,kBAAkB,cAAc;AAAA;AACtD,UAAM,SAAS,MAAM,WAAW,kBAAkB,YAAY;AAC9D,QAAI,OAAO,OAAO;AAChB,YAAM,OAAO;AAAA,IACf;AACA,WAAO;AAAA,MACL,OAAO,OAAO;AAAA,IAChB;AAAA,EACF;AAAA;AAgBA,SAAS,mBAAmB,kBAAkB;AAC5C,SAAO,qBAAqB,gBAAgB;AAC9C;AAKA,SAAS,eAAe,kBAAkB,kBAAkB,SAQ5D,cAAc;AACZ,MAAI,SAAS,MAAM;AAAA,EAAC;AACpB,MAAI,UAAU,MAAM;AAAA,EAAC;AACrB,MAAI,iBAAiB,QAAQ,MAAM;AACjC,aAAS,iBAAiB,KAAK,KAAK,gBAAgB;AAAA,EACtD,OAAO;AACL,aAAS;AAAA,EACX;AACA,MAAI,iBAAiB,SAAS,MAAM;AAClC,cAAU,iBAAiB,MAAM,KAAK,gBAAgB;AAAA,EACxD,WAAW,SAAS;AAClB,cAAU;AAAA,EACZ;AACA,mBAAiB,kBAAkB,YAAwC,QAAQ,OAAO;AAC1F,SAAO,MAAM,oBAAoB,iBAAiB,KAAK,MAAM;AAC/D;AAYA,IAAM,iBAAiB;AACvB,IAAM,0BAA0B;AAChC,SAAS,mBAAmB;AAE1B,qBAAmB,IAAI;AAAA,IAAU;AAAA,IAAgB,eAAa;AAE5D,YAAM,MAAM,UAAU,YAAY,KAAK,EAAE,aAAa;AACtD,YAAM,2BAA2B,UAAU,YAAY,WAAW;AAClE,aAAO,QAAQ,KAAK,wBAAwB;AAAA,IAC9C;AAAA,IAAG;AAAA;AAAA,EAAmC,EAAE;AAAA,IAAqB;AAAA;AAAA,EAA2C,EAIpG,2BAA2B,CAAC,WAAW,aAAa,qBAAqB;AAC3E,cAAU,YAAY,uBAAuB,EAAE,WAAW;AAAA,EAC5D,CAAC,CAAC;AAEF,qBAAmB,IAAI;AAAA,IAAU;AAAA,IAAyB,eAAa;AACrE,YAAM,WAAW,UAAU,YAAY,WAAW,EAAE,aAAa;AACjE,aAAO,gBAAgB,QAAQ;AAAA,IACjC;AAAA,IAAG;AAAA;AAAA,EAAmC,EAAE;AAAA,IAAqB;AAAA;AAAA,EAA2C,CAAC;AACzG,kBAAgB,MAAM,OAAO;AAC/B;AACA,iBAAiB;;;AC7mDjB,IAAM,WAAN,MAAe;AAAA,EACb,YAAY,UAAU;AACpB,WAAO;AAAA,EACT;AACF;AACA,IAAM,oBAAoB,MAAM,GAAG,GAAG,EAAE,KAAK,UAAU,MAAM,KAAK,mBAAmB,wBAAwB,CAAC,CAAC,GAAG,SAAS,CAAC;AAC5H,IAAM,+BAA+B,IAAI,eAAe,kCAAkC;AAC1F,SAAS,+BAA+B,UAAU,YAAY;AAC5D,QAAM,kBAAkB,sBAAsB,0BAA0B,UAAU,UAAU;AAC5F,SAAO,mBAAmB,IAAI,SAAS,eAAe;AACxD;AACA,IAAM,aAAa,CAAC,aAAa,WAAW,WAAW;AACvD,IAAM,cAAc,OAAO,WAAW,eAAe,WAAW,SAAS,OAAO,SAAS,QAAQ;AAWjG,IAAM,+BAA+B;AAAA,EACnC,SAAS;AAAA,EACT,MAAM,CAAC,CAAC,IAAI,SAAS,GAAG,4BAA4B,CAAC;AACvD;AACA,IAAM,sCAAsC;AAAA,EAC1C,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,MAAM,CAAC,CAAC,IAAI,SAAS,GAAG,4BAA4B,GAAG,aAAa,WAAW;AACjF;AACA,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,cAAc;AACZ,oBAAgB,eAAeA,SAAQ,MAAM,WAAW;AAAA,EAC1D;AAAA,EACA,OAAO,OAAO,SAAS,uBAAuB,mBAAmB;AAC/D,WAAO,KAAK,qBAAqB,iBAAgB;AAAA,EACnD;AAAA,EACA,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,WAAW,CAAC,qCAAqC,4BAA4B;AAAA,EAC/E,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,WAAW,CAAC,qCAAqC,4BAA4B;AAAA,IAC/E,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AAYH,IAAMC,sBAAqB,UAAU,oBAAsB,IAAI;AAC/D,IAAMC,YAAW,UAAU,UAAY,IAAI;AAC3C,IAAMC,sBAAqB,UAAU,oBAAsB,IAAI;AAC/D,IAAMC,kBAAiB,UAAU,gBAAkB,IAAI;AACvD,IAAMC,8BAA6B,UAAU,4BAA8B,IAAI;;;AC9E/E,IAAIC,QAAO;AACX,IAAIC,WAAU;AAkBd,SAAS,gBAAgBD,OAAMC,UAAS,YAAY;;;ACTpD,IAAM,gBAAgB,CAAC,aAAa;AAGpC,IAAM,gBAAgB,CAAC,OAAO,YAAY,MAAM,UAAU,CAAC,MAAM;AAC/D,SAAO,IAAI,MAAM,OAAO;AAAA,IACtB,KAAK,CAAC,GAAGC,UAAS,KAAK,kBAAkB,MAAM;AAC7C,UAAI,MAAMA,KAAI,GAAG;AACf,YAAI,SAAS,KAAK,KAAK;AACrB,kBAAQ,IAAI,IAAIA,OAAM,MAAMA,KAAI,CAAC;AAAA,QACnC;AACA,eAAO,MAAMA,KAAI;AAAA,MACnB;AACA,UAAI,cAAc,QAAQA,KAAI,IAAI,IAAI;AACpC,eAAO,MAAM;AAAA,MACf;AACA,YAAM,UAAU,WAAW,UAAU,EAAE,KAAK,SAAO;AACjD,cAAM,MAAM,MAAMA,KAAI;AAEtB,YAAI,OAAO,QAAQ,YAAY;AAC7B,iBAAO,IAAI,KAAK,GAAG;AAAA,QACrB,WAAW,KAAK,MAAM;AACpB,iBAAO,IAAI,KAAK,SAAO,KAAK,IAAI,MAAM,GAAG,CAAC;AAAA,QAC5C,OAAO;AACL,iBAAO,KAAK,IAAI,MAAM,GAAG;AAAA,QAC3B;AAAA,MACF,CAAC;AAED,aAAO,IAAI,MAAM,MAAM,QAAW;AAAA,QAChC,KAAK,CAACC,IAAGD,UAAS,QAAQA,KAAI;AAAA;AAAA,QAE9B,OAAO,CAACE,OAAMD,IAAG,SAAS,QAAQ,KAAK,QAAM;AAC3C,gBAAM,MAAM,KAAK,GAAG,IAAI;AACxB,cAAI,SAAS,KAAK,OAAO;AACvB,oBAAQ,IAAI,MAAMD,OAAM,MAAM,GAAG;AAAA,UACnC;AACA,iBAAO;AAAA,QACT,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH;AACA,IAAM,eAAe,CAAC,aAAa,iBAAiB;AAClD,eAAa,QAAQ,cAAY;AAC/B,WAAO,oBAAoB,SAAS,aAAa,QAAQ,EAAE,QAAQ,CAAAA,UAAQ;AACzE,aAAO,eAAe,YAAY,WAAWA,OAAM,OAAO,yBAAyB,SAAS,aAAa,UAAUA,KAAI,CAAC;AAAA,IAC1H,CAAC;AAAA,EACH,CAAC;AACH;AACA,IAAMG,eAAN,MAAkB;AAAA,EAChB,YAAY,KAAK;AACf,WAAO;AAAA,EACT;AACF;AACA,IAAM,mBAAmB,IAAI,eAAe,0BAA0B;AACtE,IAAM,oBAAoB,IAAI,eAAe,uBAAuB;AACpE,SAAS,oBAAoB,SAAS,MAAM,cAAc;AACxD,QAAMH,QAAO,OAAO,iBAAiB,YAAY,gBAAgB;AACjE,QAAM,SAAS,OAAO,iBAAiB,YAAY,gBAAgB,CAAC;AACpE,SAAO,OAAO,OAAO,QAAQA;AAE7B,QAAM,cAAc,SAAS,KAAK,OAAO,CAAAI,SAAOA,QAAOA,KAAI,SAAS,OAAO,IAAI,EAAE,CAAC;AAGlF,QAAM,MAAM,eAAe,KAAK,kBAAkB,MAAM,SAAS,cAAc,SAAS,MAAM,CAAC;AAC/F,MAAI;AACF,QAAI,KAAK,UAAU,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,GAAG;AAC3D,YAAM,MAAM,CAAC,CAAC,OAAO;AACrB,YAAM,SAAS,GAAG,IAAI,IAAI,2DAA2D,MAAM,2DAA2D,GAAG,EAAE;AAAA,IAC7J;AAAA,EACF,SAAS,GAAG;AAAA,EAAY;AACxB,SAAO,IAAID,aAAY,GAAG;AAC5B;AACA,IAAM,QAAQ,CAAC,UAAU,SAAS;AAChC,MAAI,UAAU,KAAK,OAAO,YAAY,aAAa;AAEjD,YAAQ,KAAK,EAAE,GAAG,IAAI;AAAA,EACxB;AACF;AACA,IAAM,wBAAwB;AAAA,EAC5B,SAASA;AAAA,EACT,YAAY;AAAA,EACZ,MAAM,CAAC,kBAAkB,QAAQ,CAAC,IAAI,SAAS,GAAG,iBAAiB,CAAC;AACtE;AACA,IAAM,oBAAN,MAAM,mBAAkB;AAAA,EACtB,OAAO,cAAc,SAAS,cAAc;AAC1C,WAAO;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,UAAU;AAAA,MACZ,GAAG;AAAA,QACD,SAAS;AAAA,QACT,UAAU;AAAA,MACZ,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA,EAEA,YAAY,YAAY;AACtB,aAAS,gBAAgB,eAAeE,SAAQ,MAAM,MAAM;AAC5D,aAAS,gBAAgB,eAAeA,SAAQ,MAAM,YAAY;AAElE,aAAS,gBAAgB,WAAW,QAAU,MAAM,WAAW,SAAS,CAAC;AAAA,EAC3E;AAAA,EACA,OAAO,OAAO,SAAS,0BAA0B,mBAAmB;AAClE,WAAO,KAAK,qBAAqB,oBAAsB,SAAS,WAAW,CAAC;AAAA,EAC9E;AAAA,EACA,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,WAAW,CAAC,qBAAqB;AAAA,EACnC,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,mBAAmB,CAAC;AAAA,IAC1F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,WAAW,CAAC,qBAAqB;AAAA,IACnC,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,SAAS,eAAe,UAAU,YAAY,SAAS,IAAI,MAAM;AAC/D,QAAM,CAAC,EAAE,UAAU,UAAU,IAAI,WAAW,0BAA0B,KAAK,QAAM,GAAG,CAAC,MAAM,QAAQ,KAAK,CAAC;AACzG,MAAI,UAAU;AACZ,QAAI,CAAC,SAAS,MAAM,UAAU,GAAG;AAC/B,UAAI,SAAS,GAAG,UAAU,mCAAmC,OAAO,yCAAyC,SAAS,0DAA0D,EAAE,EAAE;AACpL,UAAI,QAAQ;AAAA,QACV,IAAI;AAAA,QACJ,KAAK;AAAA,MACP,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT,OAAO;AACL,UAAM,cAAc,GAAG;AACvB,eAAW,0BAA0B,KAAK,CAAC,UAAU,aAAa,IAAI,CAAC;AACvE,WAAO;AAAA,EACT;AACF;AACA,SAAS,SAAS,GAAG,GAAG;AACtB,MAAI;AACF,WAAO,EAAE,SAAS,MAAM,EAAE,SAAS;AAAA,EACrC,SAAS,GAAG;AACV,WAAO,MAAM;AAAA,EACf;AACF;AACA,IAAM,SAAS,OAAO,WAAW,eAAe,CAAC,CAAC,OAAO;AACzD,IAAM,MAAM,CAAC,UAAU,SAAS;AAC9B,MAAI,UAAU,KAAK,OAAO,YAAY,aAAa;AAEjD,YAAQ,KAAK,EAAE,GAAG,IAAI;AAAA,EACxB;AACF;AACA,WAAW,8BAA8B,CAAC;;;AC5J1C,IAAM,sBAAsB;AAAA,EAC1B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,gBAAgB;AAAA,EAChB,KAAK;AAAA,EACL,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,sBAAsB;AAAA,EACtB,gCAAgC;AAAA,EAChC,aAAa;AAAA,EACb,4BAA4B;AAAA,EAC5B,uBAAuB;AAAA,EACvB,mBAAmB;AAAA,EACnB,cAAc;AAAA,EACd,UAAU;AAAA,EACV,oBAAoB;AAAA,EACpB,kBAAkB;AAAA,EAClB,uBAAuB;AAAA,EACvB,wBAAwB;AAAA,EACxB,gBAAgB;AAAA,EAChB,qCAAqC;AAAA,EACrC,mBAAmB;AAAA,EACnB,sBAAsB;AAAA,EACtB,uBAAuB;AAAA,EACvB,4BAA4B;AAAA,EAC5B,uBAAuB;AAAA,EACvB,qBAAqB;AAAA,EACrB,iBAAiB;AAAA,EACjB,oBAAoB;AAAA,EACpB,SAAS;AAAA,EACT,UAAU;AAAA,EACV,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,aAAa;AAAA,EACb,yBAAyB;AAC3B;AACA,IAAM,eAAe,IAAI,eAAe,gCAAgC;AACxE,IAAM,WAAW,IAAI,eAAe,4BAA4B;AAChE,IAAM,YAAY,IAAI,eAAe,6BAA6B;AAClE,IAAM,gBAAgB,IAAI,eAAe,kCAAkC;AAC3E,IAAM,sBAAsB,IAAI,eAAe,uCAAuC;AACtF,IAAM,cAAc,IAAI,eAAe,8BAA8B;AACrE,IAAM,eAAe,CAAC,KAAK,MAAM,aAAa,UAAU,cAAc,mBAAmB,UAAU,gBAAgB,eAAe,GAAG,IAAI,IAAI,SAAS,mBAAmB,IAAI,MAAM,MAAM;AACvL,QAAM,OAAO,KAAK,kBAAkB,MAAM,IAAI,KAAK,CAAC;AACpD,MAAI,aAAa;AACf,SAAK,YAAY,GAAG,WAAW;AAAA,EACjC;AACA,MAAI,UAAU;AACZ,SAAK,WAAW;AAAA,EAClB;AACA,OAAK,eAAe;AACpB,MAAI,mBAAmB;AACrB,SAAK,kBAAkB;AAAA,EACzB;AACA,MAAI,UAAU;AACZ,eAAW,CAAC,GAAG,CAAC,KAAK,OAAO,QAAQ,QAAQ,GAAG;AAC7C,WAAK,SAAS,CAAC,IAAI;AAAA,IACrB;AAAA,EACF;AACA,MAAI,aAAa;AACf,SAAK,eAAe,WAAW;AAAA,EACjC;AACA,SAAO;AACT,GAAG,CAAC,aAAa,UAAU,cAAc,mBAAmB,UAAU,WAAW,CAAC;AAClF,IAAM,kBAAN,MAAM,iBAAgB;AAAA;AAAA;AAAA;AAAA,EAIpB;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA,YAAY,SAASC,OAErB,YAAY,MAAM,YAAY,aAE9B,UAEA,UAAU,cAAc,mBAAmB,aAAa,oBAAoB;AAC1E,UAAM,SAAS,IAAI,QAAQ;AAC3B,UAAM,OAAO,GAAG,MAAS,EAAE,KAAK,UAAU,WAAW,cAAc,GAAG,UAAU,MAAM,KAAK,kBAAkB,MAAM,OAAO,yBAAsB,CAAC,CAAC,GAAG,IAAI,MAAM,oBAAoB,SAAS,MAAMA,KAAI,CAAC,GAAG,IAAI,SAAO,aAAa,KAAK,MAAM,aAAa,UAAU,cAAc,mBAAmB,UAAU,WAAW,CAAC,GAAG,YAAY;AAAA,MACxU,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ,CAAC,CAAC;AACF,QAAI,iBAAiB,UAAU,GAAG;AAChC,WAAK,YAAY,KAAK,OAAO,KAAK,UAAU,KAAK,gBAAgB,KAAK,aAAa,GAAG,IAAI;AAAA,IAC5F,OAAO;AAML,WAAK,KAAK,MAAM,CAAC,EAAE,UAAU;AAC7B,YAAM,iBAAiB,KAAK,KAAK,UAAU,CAAAC,UAAQA,MAAK,kBAAkB,EAAE,KAAK,QAAM,IAAI,MAAM,IAAI,CAAC,GAAG,wBAAwB,YAAY;AAAA,QAC3I,YAAY;AAAA,QACZ,UAAU;AAAA,MACZ,CAAC,CAAC;AACF,YAAM,mBAAmB,KAAK,KAAK,UAAU,CAAAA,UAAQ,IAAI,WAAW,UAAQ;AAAA,QAC1E,aAAa,KAAK,kBAAkB,MAAMA,MAAK,mBAAmB,UAAQ,IAAI,KAAK,IAAI,GAAG,SAAO,IAAI,MAAM,GAAG,GAAG,MAAM,IAAI,SAAS,CAAC,CAAC;AAAA,MACxI,EAAE,CAAC,CAAC;AACJ,YAAM,iBAAiB,KAAK,KAAK,UAAU,CAAAA,UAAQ,IAAI,WAAW,UAAQ;AAAA,QACxE,aAAa,KAAK,kBAAkB,MAAMA,MAAK,iBAAiB,UAAQ,IAAI,KAAK,IAAI,GAAG,SAAO,IAAI,MAAM,GAAG,GAAG,MAAM,IAAI,SAAS,CAAC,CAAC;AAAA,MACtI,EAAE,CAAC,CAAC;AACJ,WAAK,YAAY,eAAe,KAAK,YAAY,gBAAgB,GAAG,YAAY,WAAW,cAAc,GAAG,UAAU,WAAW,aAAa,CAAC;AAC/I,WAAK,OAAO,eAAe,KAAK,YAAY,cAAc,GAAG,YAAY,WAAW,cAAc,GAAG,UAAU,WAAW,aAAa,CAAC;AACxI,WAAK,UAAU,KAAK,KAAK,KAAK,UAAU,UAAQ,OAAO,KAAK,KAAK,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AAC1F,WAAK,gBAAgB,KAAK,KAAK,KAAK,UAAU,UAAQ,OAAO,KAAK,KAAK,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AACtG,WAAK,aAAa;AAAA,QAAM;AAAA,QAAgB;AAAA;AAAA;AAAA,QAGxC,KAAK,UAAU,KAAK,OAAO,QAAM,CAAC,EAAE,CAAC;AAAA,MAAC,EAAE;AAAA;AAAA;AAAA,QAGxC,IAAI,gBAAc,YAAY,OAAO,aAAa,IAAI;AAAA,QAAG,YAAY,WAAW,cAAc;AAAA,QAAG,UAAU,WAAW,aAAa;AAAA,MAAC;AAAA,IACtI;AACA,WAAO,cAAc,MAAM,MAAM,MAAM;AAAA,MACrC,KAAK;AAAA,QACH,OAAO,CAACD,OAAM,GAAG,QAAQ;AAIvB,cAAIA,MAAK,WAAW,QAAQ,KAAKA,MAAK,WAAW,YAAY,GAAG;AAE9D,gBAAI,KAAK,UAAQ,OAAO,KAAK,IAAI,CAAC;AAAA,UACpC;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,OAAO,OAAO,SAAS,wBAAwB,mBAAmB;AAChE,WAAO,KAAK,qBAAqB,kBAAoB,SAAS,gBAAgB,GAAM,SAAS,mBAAmB,CAAC,GAAM,SAAS,WAAW,GAAM,SAAY,MAAM,GAAM,SAAY,sBAAsB,GAAM,SAAS,cAAc,CAAC,GAAM,SAAS,UAAU,CAAC,GAAM,SAAS,WAAW,CAAC,GAAM,SAAS,eAAe,CAAC,GAAM,SAAS,qBAAqB,CAAC,GAAM,SAAS,aAAa,CAAC,GAAM,SAAY,oBAAmB,CAAC,CAAC;AAAA,EACxa;AAAA,EACA,OAAO,QAA0B,mBAAmB;AAAA,IAClD,OAAO;AAAA,IACP,SAAS,iBAAgB;AAAA,IACzB,YAAY;AAAA,EACd,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,iBAAiB,CAAC;AAAA,IACxF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC1B,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,SAAS;AAAA,IAClB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,IACtB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,mBAAmB;AAAA,IAC5B,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,aAAa,iBAAiB,CAAC,mBAAmB,CAAC;AACnD,IAAM,wBAAN,MAAM,uBAAsB;AAAA,EAC1B,cAAc;AACZ,aAAS,gBAAgB,eAAeE,SAAQ,MAAM,aAAa;AAAA,EACrE;AAAA,EACA,OAAO,OAAO,SAAS,8BAA8B,mBAAmB;AACtE,WAAO,KAAK,qBAAqB,wBAAuB;AAAA,EAC1D;AAAA,EACA,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,WAAW,CAAC,eAAe;AAAA,EAC7B,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,uBAAuB,CAAC;AAAA,IAC9F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,WAAW,CAAC,eAAe;AAAA,IAC7B,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;;;AC9QH,IAAMC,QAAO;AACb,IAAMC,WAAU;AAkBhB,SAAS,mBAAmB,YAAY,SAAS;AAC/C,MAAI,YAAY,QAAW;AACzB,WAAO;AAAA,MACL,OAAO;AAAA,IACT;AAAA,EACF;AACA,MAAI,QAAQ,gBAAgB,UAAa,QAAQ,UAAU,QAAW;AACpE,UAAM,IAAI,eAAe,oBAAoB,sCAAsC,UAAU,wDAA6D;AAAA,EAC5J;AACA,SAAO;AACT;AAmBA,SAAS,4BAA4B;AACnC,MAAI,OAAO,eAAe,aAAa;AACrC,UAAM,IAAI,eAAe,iBAAiB,oDAAoD;AAAA,EAChG;AACF;AAEA,SAAS,wBAAwB;AAC/B,MAAI,CAAC,4BAAmB,GAAG;AACzB,UAAM,IAAI,eAAe,iBAAiB,yDAAyD;AAAA,EACrG;AACF;AAEA,IAAM,OAAN,MAAM,MAAK;AAAA,EACT,YAAY,WAAW;AACrB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,OAAO,iBAAiBC,SAAQ;AAC9B,0BAAsB;AACtB,WAAO,IAAI,MAAK,MAAM,iBAAiBA,OAAM,CAAC;AAAA,EAChD;AAAA,EACA,OAAO,eAAe,OAAO;AAC3B,8BAA0B;AAC1B,WAAO,IAAI,MAAK,MAAM,eAAe,KAAK,CAAC;AAAA,EAC7C;AAAA,EACA,WAAW;AACT,0BAAsB;AACtB,WAAO,KAAK,UAAU,SAAS;AAAA,EACjC;AAAA,EACA,eAAe;AACb,8BAA0B;AAC1B,WAAO,KAAK,UAAU,aAAa;AAAA,EACrC;AAAA,EACA,QAAQ,OAAO;AACb,WAAO,KAAK,UAAU,QAAQ,MAAM,SAAS;AAAA,EAC/C;AAAA,EACA,WAAW;AACT,WAAO,kBAAkB,KAAK,SAAS,IAAI;AAAA,EAC7C;AACF;AAkBA,SAAS,kBAAkB,KAAK;AAC9B,SAAO,qBAAqB,KAAK,CAAC,QAAQ,SAAS,UAAU,CAAC;AAChE;AAKA,SAAS,qBAAqB,KAAK,SAAS;AAC1C,MAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AAC3C,WAAO;AAAA,EACT;AACA,QAAM,SAAS;AACf,aAAW,UAAU,SAAS;AAC5B,QAAI,UAAU,UAAU,OAAO,OAAO,MAAM,MAAM,YAAY;AAC5D,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAqBA,IAAM,+BAAN,MAAmC;AAAA,EACjC,2BAA2B,WAAW,gBAAgB;AACpD,WAAO,2BAA2B,UAAU,WAAW;AAAA,MACrD;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,mCAAmC,WAAW;AAC5C,WAAO,mCAAmC,UAAU,SAAS;AAAA,EAC/D;AAAA,EACA,0BAA0B,WAAW;AACnC,WAAO,0BAA0B,UAAU,SAAS;AAAA,EACtD;AACF;AAKA,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY,iBAAiB,WAAW,sBAAsB;AAC5D,SAAK,YAAY;AACjB,SAAK,uBAAuB;AAC5B,SAAK,WAAW;AAAA,MACd,QAAQ,MAAM,KAAK,UAAU;AAAA,IAC/B;AACA,QAAI,EAAE,2BAA2B,aAAc;AAC7C,WAAK,aAAa;AAAA,IACpB;AAAA,EACF;AAAA,EACA,IAAI,cAAc;AAChB,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,SAAS,iBAAiB;AACxB,UAAM,kBAAkB,KAAK,UAAU,aAAa;AACpD,QAAI,CAAC,gBAAgB,SAAS,gBAAgB,SAAS,gBAAgB,MAAM;AAC3E,wBAAS,2GAAgH;AAAA,IAC3H;AACA,QAAI,gBAAgB,OAAO;AACzB,wBAAkB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,eAAe,GAAG,eAAe;AAEnF,aAAO,gBAAgB;AAAA,IACzB;AACA,SAAK,UAAU,aAAa,eAAe;AAAA,EAC7C;AAAA,EACA,YAAY,MAAM,MAAM,UAAU,CAAC,GAAG;AACpC,6BAAyB,KAAK,WAAW,MAAM,MAAM,OAAO;AAAA,EAC9D;AAAA,EACA,gBAAgB;AACd,WAAO,cAAc,KAAK,SAAS;AAAA,EACrC;AAAA,EACA,iBAAiB;AACf,WAAO,eAAe,KAAK,SAAS;AAAA,EACtC;AAAA,EACA,kBAAkB,UAAU;AAC1B,QAAI,kBAAkB;AACtB,QAAI,6BAA6B;AACjC,QAAI,UAAU;AACZ,wBAAkB,CAAC,CAAC,SAAS;AAC7B,mCAA6B,CAAC,CAAC,SAAS;AACxC,0CAA2B,mBAAmB,iBAAiB,8BAA8B,0BAA0B;AAAA,IACzH;AACA,WAAO,kBAAkB,KAAK,qBAAqB,mCAAmC,IAAI,IAAI,KAAK,qBAAqB,2BAA2B,MAAM,0BAA0B;AAAA,EACrL;AAAA,EACA,mBAAmB;AACjB,WAAO,KAAK,qBAAqB,0BAA0B,IAAI;AAAA,EACjE;AAAA,EACA,YAAY;AACV,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,uBAAuB,kBAAkB;AACzD,WAAK,WAAW,uBAAuB,WAAW;AAAA,IACpD;AACA,WAAO,KAAK,UAAU,QAAQ;AAAA,EAChC;AAAA,EACA,uBAAuB;AACrB,WAAO,qBAAqB,KAAK,SAAS;AAAA,EAC5C;AAAA,EACA,kBAAkB,KAAK;AACrB,WAAO,kBAAkB,KAAK,WAAW,GAAG;AAAA,EAC9C;AAAA,EACA,IAAI,MAAM;AACR,QAAI,CAAC,KAAK,YAAY;AACpB,YAAM,IAAI,eAAe,uBAAuB,8EAAmF;AAAA,IACrI;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,WAAW,YAAY;AACrB,QAAI;AACF,aAAO,IAAI,oBAAoB,MAAM,WAAW,KAAK,WAAW,UAAU,CAAC;AAAA,IAC7E,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,gBAAgB,wBAAwB;AAAA,IACvE;AAAA,EACF;AAAA,EACA,IAAI,YAAY;AACd,QAAI;AACF,aAAO,IAAIC,mBAAkB,MAAM,IAAI,KAAK,WAAW,UAAU,CAAC;AAAA,IACpE,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,SAAS,iBAAiB;AAAA,IACzD;AAAA,EACF;AAAA,EACA,gBAAgB,cAAc;AAC5B,QAAI;AACF,aAAO,IAAI,MAAM,MAAM,gBAAgB,KAAK,WAAW,YAAY,CAAC;AAAA,IACtE,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,qBAAqB,6BAA6B;AAAA,IACjF;AAAA,EACF;AAAA,EACA,eAAe,gBAAgB;AAC7B,WAAO,eAAe,KAAK,WAAW,iBAAe,eAAe,IAAI,YAAY,MAAM,WAAW,CAAC,CAAC;AAAA,EACzG;AAAA,EACA,QAAQ;AACN,8BAA0B,KAAK,SAAS;AACxC,WAAO,IAAIC,YAAW,IAAI,WAAa,KAAK,WAAW,eAAa,aAAa,KAAK,WAAW,SAAS,CAAC,CAAC;AAAA,EAC9G;AAAA,EACA,WAAW,YAAY;AACrB,WAAO,WAAW,KAAK,WAAW,UAAU;AAAA,EAC9C;AAAA,EACA,WAAWJ,OAAM;AACf,WAAO,WAAW,KAAK,WAAWA,KAAI,EAAE,KAAK,cAAY;AACvD,UAAI,CAAC,UAAU;AACb,eAAO;AAAA,MACT;AACA,aAAO,IAAI;AAAA,QAAM;AAAA;AAAA;AAAA,QAGjB;AAAA,MAAQ;AAAA,IACV,CAAC;AAAA,EACH;AACF;AACA,IAAM,iBAAN,cAA6B,uBAAuB;AAAA,EAClD,YAAY,WAAW;AACrB,UAAM;AACN,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,aAAa,OAAO;AAClB,WAAO,IAAI,KAAK,IAAI,MAAM,KAAK,CAAC;AAAA,EAClC;AAAA,EACA,iBAAiBA,OAAM;AACrB,UAAM,MAAM,KAAK,mBAAmBA,OAAM,KAAK,UAAU,WAAW;AACpE,WAAOG,mBAAkB;AAAA,MAAO;AAAA,MAAK,KAAK;AAAA;AAAA,MAA2B;AAAA,IAAI;AAAA,EAC3E;AACF;AACA,SAASE,aAAY,OAAO;AAC1B,cAAc,KAAK;AACrB;AAIA,IAAM,cAAN,MAAkB;AAAA,EAChB,YAAY,YAAY,WAAW;AACjC,SAAK,aAAa;AAClB,SAAK,YAAY;AACjB,SAAK,kBAAkB,IAAI,eAAe,UAAU;AAAA,EACtD;AAAA,EACA,IAAI,aAAa;AACf,UAAM,MAAM,cAAc,WAAW;AACrC,WAAO,KAAK,UAAU,IAAI,GAAG,EAAE,KAAK,YAAU,IAAIC,kBAAiB,KAAK,YAAY,IAAI,iBAAmB,KAAK,WAAW,WAAW,KAAK,iBAAiB,OAAO,MAAM,OAAO,WAAW,OAAO,UAAU,IAAI,SAAS,CAAC,CAAC;AAAA,EAC7N;AAAA,EACA,IAAI,aAAa,MAAM,SAAS;AAC9B,UAAM,MAAM,cAAc,WAAW;AACrC,QAAI,SAAS;AACX,yBAAmB,mBAAmB,OAAO;AAC7C,WAAK,UAAU,IAAI,KAAK,MAAM,OAAO;AAAA,IACvC,OAAO;AACL,WAAK,UAAU,IAAI,KAAK,IAAI;AAAA,IAC9B;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,aAAa,aAAa,UAAU,qBAAqB;AAC9D,UAAM,MAAM,cAAc,WAAW;AACrC,QAAI,UAAU,WAAW,GAAG;AAC1B,WAAK,UAAU,OAAO,KAAK,WAAW;AAAA,IACxC,OAAO;AACL,WAAK,UAAU,OAAO,KAAK,aAAa,OAAO,GAAG,mBAAmB;AAAA,IACvE;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,aAAa;AAClB,UAAM,MAAM,cAAc,WAAW;AACrC,SAAK,UAAU,OAAO,GAAG;AACzB,WAAO;AAAA,EACT;AACF;AACA,IAAMF,cAAN,MAAiB;AAAA,EACf,YAAY,WAAW;AACrB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,IAAI,aAAa,MAAM,SAAS;AAC9B,UAAM,MAAM,cAAc,WAAW;AACrC,QAAI,SAAS;AACX,yBAAmB,kBAAkB,OAAO;AAC5C,WAAK,UAAU,IAAI,KAAK,MAAM,OAAO;AAAA,IACvC,OAAO;AACL,WAAK,UAAU,IAAI,KAAK,IAAI;AAAA,IAC9B;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,aAAa,aAAa,UAAU,qBAAqB;AAC9D,UAAM,MAAM,cAAc,WAAW;AACrC,QAAI,UAAU,WAAW,GAAG;AAC1B,WAAK,UAAU,OAAO,KAAK,WAAW;AAAA,IACxC,OAAO;AACL,WAAK,UAAU,OAAO,KAAK,aAAa,OAAO,GAAG,mBAAmB;AAAA,IACvE;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,aAAa;AAClB,UAAM,MAAM,cAAc,WAAW;AACrC,SAAK,UAAU,OAAO,GAAG;AACzB,WAAO;AAAA,EACT;AAAA,EACA,SAAS;AACP,WAAO,KAAK,UAAU,OAAO;AAAA,EAC/B;AACF;AAMA,IAAM,yBAAN,MAAM,wBAAuB;AAAA,EAC3B,YAAY,YAAY,iBAAiB,WAAW;AAClD,SAAK,aAAa;AAClB,SAAK,kBAAkB;AACvB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,cAAc,UAAU,SAAS;AAC/B,UAAM,cAAc,IAAI;AAAA,MAAwB,KAAK,WAAW;AAAA,MAAW,KAAK;AAAA,MAAiB,SAAS;AAAA,MAAM,SAAS;AAAA,MAAW,SAAS;AAAA;AAAA,MAA0B;AAAA,IAAI;AAC3K,WAAO,KAAK,UAAU,cAAc,IAAIG,uBAAsB,KAAK,YAAY,WAAW,GAAG,YAAY,QAAQ,YAAY,SAAS,UAAU,CAAC,CAAC;AAAA,EACpJ;AAAA,EACA,YAAY,aAAa,SAAS;AAChC,QAAI,CAAC,SAAS;AACZ,aAAO,KAAK,UAAU,YAAY,WAAW;AAAA,IAC/C,OAAO;AACL,aAAO,KAAK,UAAU,YAAY,aAAa,OAAO;AAAA,IACxD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,YAAY,WAAW,WAAW;AACvC,UAAM,0BAA0B,wBAAuB;AACvD,QAAI,8BAA8B,wBAAwB,IAAI,SAAS;AACvE,QAAI,CAAC,6BAA6B;AAChC,oCAA8B,oBAAI,QAAQ;AAC1C,8BAAwB,IAAI,WAAW,2BAA2B;AAAA,IACpE;AACA,QAAI,WAAW,4BAA4B,IAAI,SAAS;AACxD,QAAI,CAAC,UAAU;AACb,iBAAW,IAAI,wBAAuB,WAAW,IAAI,eAAe,SAAS,GAAG,SAAS;AACzF,kCAA4B,IAAI,WAAW,QAAQ;AAAA,IACrD;AACA,WAAO;AAAA,EACT;AACF;AACA,uBAAuB,YAAY,oBAAI,QAAQ;AAI/C,IAAMJ,qBAAN,MAAM,mBAAkB;AAAA,EACtB,YAAY,WAAW,WAAW;AAChC,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,kBAAkB,IAAI,eAAe,SAAS;AAAA,EACrD;AAAA,EACA,OAAO,QAAQ,MAAM,WAAW,WAAW;AACzC,QAAI,KAAK,SAAS,MAAM,GAAG;AACzB,YAAM,IAAI,eAAe,oBAAoB,6FAAuG,KAAK,gBAAgB,CAAC,QAAQ,KAAK,MAAM,EAAE;AAAA,IACjM;AACA,WAAO,IAAI,mBAAkB,WAAW,IAAI,kBAAoB,UAAU,WAAW,WAAW,IAAI,YAAa,IAAI,CAAC,CAAC;AAAA,EACzH;AAAA,EACA,OAAO,OAAO,KAAK,WAAW,WAAW;AACvC,WAAO,IAAI,mBAAkB,WAAW,IAAI,kBAAoB,UAAU,WAAW,WAAW,GAAG,CAAC;AAAA,EACtG;AAAA,EACA,IAAI,KAAK;AACP,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,IAAI,oBAAoB,KAAK,WAAW,KAAK,UAAU,MAAM;AAAA,EACtE;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,WAAW,YAAY;AACrB,QAAI;AACF,aAAO,IAAI,oBAAoB,KAAK,WAAW,WAAW,KAAK,WAAW,UAAU,CAAC;AAAA,IACvF,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,gBAAgB,gCAAgC;AAAA,IAC/E;AAAA,EACF;AAAA,EACA,QAAQ,OAAO;AACb,YAAQ,mBAAmB,KAAK;AAChC,QAAI,EAAE,iBAAiB,oBAAsB;AAC3C,aAAO;AAAA,IACT;AACA,WAAO,SAAS,KAAK,WAAW,KAAK;AAAA,EACvC;AAAA,EACA,IAAI,OAAO,SAAS;AAClB,cAAU,mBAAmB,yBAAyB,OAAO;AAC7D,QAAI;AACF,UAAI,SAAS;AACX,eAAO,OAAO,KAAK,WAAW,OAAO,OAAO;AAAA,MAC9C,OAAO;AACL,eAAO,OAAO,KAAK,WAAW,KAAK;AAAA,MACrC;AAAA,IACF,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,YAAY,yBAAyB;AAAA,IACpE;AAAA,EACF;AAAA,EACA,OAAO,mBAAmB,UAAU,qBAAqB;AACvD,QAAI;AACF,UAAI,UAAU,WAAW,GAAG;AAC1B,eAAO,UAAU,KAAK,WAAW,iBAAiB;AAAA,MACpD,OAAO;AACL,eAAO,UAAU,KAAK,WAAW,mBAAmB,OAAO,GAAG,mBAAmB;AAAA,MACnF;AAAA,IACF,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,eAAe,4BAA4B;AAAA,IAC1E;AAAA,EACF;AAAA,EACA,SAAS;AACP,WAAO,UAAU,KAAK,SAAS;AAAA,EACjC;AAAA,EACA,cAAc,MAAM;AAClB,UAAM,UAAU,uBAAuB,IAAI;AAC3C,UAAM,WAAW,aAAa,MAAM,YAAU,IAAIG,kBAAiB,KAAK,WAAW,IAAI,iBAAmB,KAAK,UAAU,WAAW,KAAK,iBAAiB,OAAO,MAAM,OAAO,WAAW,OAAO,UAAU,KAAK,UAAU,SAAS,CAAC,CAAC;AACpO,WAAO,WAAW,KAAK,WAAW,SAAS,QAAQ;AAAA,EACrD;AAAA,EACA,IAAI,SAAS;AACX,QAAI;AACJ,SAAK,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,YAAY,SAAS;AAClF,aAAO,gBAAgB,KAAK,SAAS;AAAA,IACvC,YAAY,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,YAAY,UAAU;AAC1F,aAAO,iBAAiB,KAAK,SAAS;AAAA,IACxC,OAAO;AACL,aAAO,OAAO,KAAK,SAAS;AAAA,IAC9B;AACA,WAAO,KAAK,KAAK,YAAU,IAAIA,kBAAiB,KAAK,WAAW,IAAI,iBAAmB,KAAK,UAAU,WAAW,KAAK,iBAAiB,OAAO,MAAM,OAAO,WAAW,OAAO,UAAU,KAAK,UAAU,SAAS,CAAC,CAAC;AAAA,EACnN;AAAA,EACA,cAAc,WAAW;AACvB,WAAO,IAAI,mBAAkB,KAAK,WAAW,YAAY,KAAK,UAAU,cAAc,uBAAuB,YAAY,KAAK,WAAW,SAAS,CAAC,IAAI,KAAK,UAAU,cAAc,IAAI,CAAC;AAAA,EAC3L;AACF;AAKA,SAAS,oBAAoB,GAAG,UAAU,SAAS;AACjD,IAAE,UAAU,EAAE,QAAQ,QAAQ,UAAU,OAAO;AAC/C,SAAO;AACT;AAMA,SAAS,uBAAuB,MAAM;AACpC,aAAW,OAAO,MAAM;AACtB,QAAI,OAAO,QAAQ,YAAY,CAAC,kBAAkB,GAAG,GAAG;AACtD,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO,CAAC;AACV;AAUA,SAAS,aAAa,MAAM,SAAS;AACnC,MAAI,IAAI;AACR,MAAI;AACJ,MAAI,kBAAkB,KAAK,CAAC,CAAC,GAAG;AAC9B,mBAAe,KAAK,CAAC;AAAA,EACvB,WAAW,kBAAkB,KAAK,CAAC,CAAC,GAAG;AACrC,mBAAe,KAAK,CAAC;AAAA,EACvB,WAAW,OAAO,KAAK,CAAC,MAAM,YAAY;AACxC,mBAAe;AAAA,MACb,MAAM,KAAK,CAAC;AAAA,MACZ,OAAO,KAAK,CAAC;AAAA,MACb,UAAU,KAAK,CAAC;AAAA,IAClB;AAAA,EACF,OAAO;AACL,mBAAe;AAAA,MACb,MAAM,KAAK,CAAC;AAAA,MACZ,OAAO,KAAK,CAAC;AAAA,MACb,UAAU,KAAK,CAAC;AAAA,IAClB;AAAA,EACF;AACA,SAAO;AAAA,IACL,MAAM,SAAO;AACX,UAAI,aAAa,MAAM;AACrB,qBAAa,KAAK,QAAQ,GAAG,CAAC;AAAA,MAChC;AAAA,IACF;AAAA,IACA,QAAQ,KAAK,aAAa,WAAW,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,YAAY;AAAA,IAC1F,WAAW,KAAK,aAAa,cAAc,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,YAAY;AAAA,EAClG;AACF;AACA,IAAMA,oBAAN,MAAuB;AAAA,EACrB,YAAY,YAAY,WAAW;AACjC,SAAK,aAAa;AAClB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,IAAI,MAAM;AACR,WAAO,IAAIH,mBAAkB,KAAK,YAAY,KAAK,UAAU,GAAG;AAAA,EAClE;AAAA,EACA,IAAI,KAAK;AACP,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,UAAU,OAAO;AAAA,EAC/B;AAAA,EACA,KAAK,SAAS;AACZ,WAAO,KAAK,UAAU,KAAK,OAAO;AAAA,EACpC;AAAA,EACA,IAAI,WAAW,SAGb;AACA,WAAO,KAAK,UAAU,IAAI,WAAW,OAAO;AAAA,EAC9C;AAAA,EACA,QAAQ,OAAO;AACb,WAAO,cAAc,KAAK,WAAW,MAAM,SAAS;AAAA,EACtD;AACF;AACA,IAAMI,yBAAN,cAAoCD,kBAAiB;AAAA,EACnD,KAAK,SAAS;AACZ,UAAM,OAAO,KAAK,UAAU,KAAK,OAAO;AACxC,QAAI,KAAK,UAAU,YAAY;AAE7B,aAAO;AAAA,IACT,OAAO;AACL,4BAAa,SAAS,QAAW,kDAAkD;AACnF,aAAO;AAAA,IACT;AAAA,EACF;AACF;AACA,IAAM,QAAN,MAAM,OAAM;AAAA,EACV,YAAY,WAAW,WAAW;AAChC,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,kBAAkB,IAAI,eAAe,SAAS;AAAA,EACrD;AAAA,EACA,MAAM,WAAW,OAAO,OAAO;AAC7B,QAAI;AAIF,aAAO,IAAI,OAAM,KAAK,WAAW,MAAM,KAAK,WAAW,MAAM,WAAW,OAAO,KAAK,CAAC,CAAC;AAAA,IACxF,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,uBAAuB,YAAY;AAAA,IAClE;AAAA,EACF;AAAA,EACA,QAAQ,WAAW,cAAc;AAC/B,QAAI;AAIF,aAAO,IAAI,OAAM,KAAK,WAAW,MAAM,KAAK,WAAW,QAAQ,WAAW,YAAY,CAAC,CAAC;AAAA,IAC1F,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,uBAAuB,YAAY;AAAA,IAClE;AAAA,EACF;AAAA,EACA,MAAM,GAAG;AACP,QAAI;AACF,aAAO,IAAI,OAAM,KAAK,WAAW,MAAM,KAAK,WAAW,MAAM,CAAC,CAAC,CAAC;AAAA,IAClE,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,WAAW,eAAe;AAAA,IACzD;AAAA,EACF;AAAA,EACA,YAAY,GAAG;AACb,QAAI;AACF,aAAO,IAAI,OAAM,KAAK,WAAW,MAAM,KAAK,WAAW,YAAY,CAAC,CAAC,CAAC;AAAA,IACxE,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,iBAAiB,qBAAqB;AAAA,IACrE;AAAA,EACF;AAAA,EACA,WAAW,MAAM;AACf,QAAI;AACF,aAAO,IAAI,OAAM,KAAK,WAAW,MAAM,KAAK,WAAW,QAAQ,GAAG,IAAI,CAAC,CAAC;AAAA,IAC1E,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,aAAa,iBAAiB;AAAA,IAC7D;AAAA,EACF;AAAA,EACA,cAAc,MAAM;AAClB,QAAI;AACF,aAAO,IAAI,OAAM,KAAK,WAAW,MAAM,KAAK,WAAW,WAAW,GAAG,IAAI,CAAC,CAAC;AAAA,IAC7E,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,gBAAgB,oBAAoB;AAAA,IACnE;AAAA,EACF;AAAA,EACA,aAAa,MAAM;AACjB,QAAI;AACF,aAAO,IAAI,OAAM,KAAK,WAAW,MAAM,KAAK,WAAW,UAAU,GAAG,IAAI,CAAC,CAAC;AAAA,IAC5E,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,eAAe,mBAAmB;AAAA,IACjE;AAAA,EACF;AAAA,EACA,SAAS,MAAM;AACb,QAAI;AACF,aAAO,IAAI,OAAM,KAAK,WAAW,MAAM,KAAK,WAAW,MAAM,GAAG,IAAI,CAAC,CAAC;AAAA,IACxE,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,WAAW,eAAe;AAAA,IACzD;AAAA,EACF;AAAA,EACA,QAAQ,OAAO;AACb,WAAO,WAAW,KAAK,WAAW,MAAM,SAAS;AAAA,EACnD;AAAA,EACA,IAAI,SAAS;AACX,QAAIE;AACJ,SAAK,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,YAAY,SAAS;AAClF,MAAAA,SAAQ,iBAAiB,KAAK,SAAS;AAAA,IACzC,YAAY,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,YAAY,UAAU;AAC1F,MAAAA,SAAQ,kBAAkB,KAAK,SAAS;AAAA,IAC1C,OAAO;AACL,MAAAA,SAAQ,QAAQ,KAAK,SAAS;AAAA,IAChC;AACA,WAAOA,OAAM,KAAK,YAAU,IAAIC,eAAc,KAAK,WAAW,IAAI,cAAgB,KAAK,UAAU,WAAW,KAAK,iBAAiB,KAAK,WAAW,OAAO,SAAS,CAAC,CAAC;AAAA,EACtK;AAAA,EACA,cAAc,MAAM;AAClB,UAAM,UAAU,uBAAuB,IAAI;AAC3C,UAAM,WAAW,aAAa,MAAM,UAAQ,IAAIA,eAAc,KAAK,WAAW,IAAI,cAAgB,KAAK,UAAU,WAAW,KAAK,iBAAiB,KAAK,WAAW,KAAK,SAAS,CAAC,CAAC;AAClL,WAAO,WAAW,KAAK,WAAW,SAAS,QAAQ;AAAA,EACrD;AAAA,EACA,cAAc,WAAW;AACvB,WAAO,IAAI,OAAM,KAAK,WAAW,YAAY,KAAK,UAAU,cAAc,uBAAuB,YAAY,KAAK,WAAW,SAAS,CAAC,IAAI,KAAK,UAAU,cAAc,IAAI,CAAC;AAAA,EAC/K;AACF;AACA,IAAM,iBAAN,MAAqB;AAAA,EACnB,YAAY,YAAY,WAAW;AACjC,SAAK,aAAa;AAClB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,MAAM;AACR,WAAO,IAAIF,uBAAsB,KAAK,YAAY,KAAK,UAAU,GAAG;AAAA,EACtE;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,UAAU;AAAA,EACxB;AACF;AACA,IAAME,iBAAN,MAAoB;AAAA,EAClB,YAAY,YAAY,WAAW;AACjC,SAAK,aAAa;AAClB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,IAAI,MAAM,KAAK,YAAY,KAAK,UAAU,KAAK;AAAA,EACxD;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,UAAU,KAAK,IAAI,CAAAC,SAAO,IAAIH,uBAAsB,KAAK,YAAYG,IAAG,CAAC;AAAA,EACvF;AAAA,EACA,WAAW,SAAS;AAClB,WAAO,KAAK,UAAU,WAAW,OAAO,EAAE,IAAI,eAAa,IAAI,eAAe,KAAK,YAAY,SAAS,CAAC;AAAA,EAC3G;AAAA,EACA,QAAQ,UAAU,SAAS;AACzB,SAAK,UAAU,QAAQ,cAAY;AACjC,eAAS,KAAK,SAAS,IAAIH,uBAAsB,KAAK,YAAY,QAAQ,CAAC;AAAA,IAC7E,CAAC;AAAA,EACH;AAAA,EACA,QAAQ,OAAO;AACb,WAAO,cAAc,KAAK,WAAW,MAAM,SAAS;AAAA,EACtD;AACF;AACA,IAAM,sBAAN,MAAM,6BAA4B,MAAM;AAAA,EACtC,YAAY,WAAW,WAAW;AAChC,UAAM,WAAW,SAAS;AAC1B,SAAK,YAAY;AACjB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,IAAI,KAAK;AACP,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,SAAS;AACX,UAAM,SAAS,KAAK,UAAU;AAC9B,WAAO,SAAS,IAAIJ,mBAAkB,KAAK,WAAW,MAAM,IAAI;AAAA,EAClE;AAAA,EACA,IAAI,cAAc;AAChB,QAAI;AACF,UAAI,iBAAiB,QAAW;AAI9B,eAAO,IAAIA,mBAAkB,KAAK,WAAW,IAAI,KAAK,SAAS,CAAC;AAAA,MAClE,OAAO;AACL,eAAO,IAAIA,mBAAkB,KAAK,WAAW,IAAI,KAAK,WAAW,YAAY,CAAC;AAAA,MAChF;AAAA,IACF,SAAS,GAAG;AACV,YAAM,oBAAoB,GAAG,SAAS,2BAA2B;AAAA,IACnE;AAAA,EACF;AAAA,EACA,IAAI,MAAM;AACR,WAAO,OAAO,KAAK,WAAW,IAAI,EAAE,KAAK,YAAU,IAAIA,mBAAkB,KAAK,WAAW,MAAM,CAAC;AAAA,EAClG;AAAA,EACA,QAAQ,OAAO;AACb,WAAO,SAAS,KAAK,WAAW,MAAM,SAAS;AAAA,EACjD;AAAA,EACA,cAAc,WAAW;AACvB,WAAO,IAAI,qBAAoB,KAAK,WAAW,YAAY,KAAK,UAAU,cAAc,uBAAuB,YAAY,KAAK,WAAW,SAAS,CAAC,IAAI,KAAK,UAAU,cAAc,IAAI,CAAC;AAAA,EAC7L;AACF;AACA,SAAS,cAAc,aAAa;AAClC,SAAO,eAAM,aAAa,iBAAmB;AAC/C;AA0BA,IAAMQ,aAAN,MAAM,WAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOd,eAAe,YAAY;AACzB,SAAK,YAAY,IAAI,UAAY,GAAG,UAAU;AAAA,EAChD;AAAA,EACA,OAAO,aAAa;AAOlB,WAAO,IAAI,WAAU,YAAW,SAAS,EAAE,gBAAgB,CAAC;AAAA,EAC9D;AAAA,EACA,QAAQ,OAAO;AACb,YAAQ,mBAAmB,KAAK;AAChC,QAAI,EAAE,iBAAiB,YAAc;AACnC,aAAO;AAAA,IACT;AACA,WAAO,KAAK,UAAU,cAAc,QAAQ,MAAM,aAAa;AAAA,EACjE;AACF;AAkBA,IAAM,aAAN,MAAM,YAAW;AAAA,EACf,YAAY,WAAW;AACrB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,OAAO,kBAAkB;AACvB,UAAM,WAAW,gBAAgB;AACjC,aAAS,cAAc;AACvB,WAAO,IAAI,YAAW,QAAQ;AAAA,EAChC;AAAA,EACA,OAAO,SAAS;AACd,UAAM,WAAW,YAAY;AAC7B,aAAS,cAAc;AACvB,WAAO,IAAI,YAAW,QAAQ;AAAA,EAChC;AAAA,EACA,OAAO,cAAc,UAAU;AAC7B,UAAM,WAAW,WAAW,GAAG,QAAQ;AACvC,aAAS,cAAc;AACvB,WAAO,IAAI,YAAW,QAAQ;AAAA,EAChC;AAAA,EACA,OAAO,eAAe,UAAU;AAC9B,UAAM,WAAW,YAAY,GAAG,QAAQ;AACxC,aAAS,cAAc;AACvB,WAAO,IAAI,YAAW,QAAQ;AAAA,EAChC;AAAA,EACA,OAAO,UAAU,GAAG;AAClB,UAAM,WAAW,UAAU,CAAC;AAC5B,aAAS,cAAc;AACvB,WAAO,IAAI,YAAW,QAAQ;AAAA,EAChC;AAAA,EACA,QAAQ,OAAO;AACb,WAAO,KAAK,UAAU,QAAQ,MAAM,SAAS;AAAA,EAC/C;AACF;AAkBA,IAAM,qBAAqB;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAAP;AAAA,EACA,mBAAAD;AAAA,EACA,kBAAAG;AAAA,EACA;AAAA,EACA,uBAAAC;AAAA,EACA,eAAAE;AAAA,EACA;AAAA,EACA,WAAAE;AAAA,EACA;AAAA,EACA,aAAAN;AAAA,EACA;AACF;AAQA,SAAS,qBAAqBO,WAAU,kBAAkB;AACxD,EAAAA,UAAS,SAAS,kBAAkB,IAAI,UAAU,oBAAoB,eAAa;AACjF,UAAM,MAAM,UAAU,YAAY,YAAY,EAAE,aAAa;AAC7D,UAAM,eAAe,UAAU,YAAY,WAAW,EAAE,aAAa;AACrE,WAAO,iBAAiB,KAAK,YAAY;AAAA,EAC3C,GAAG,QAAQ,EAAE,gBAAgB,OAAO,OAAO,CAAC,GAAG,kBAAkB,CAAC,CAAC;AACrE;AAsBA,SAAS,kBAAkB,UAAU;AACnC,uBAAqB,UAAU,CAAC,KAAK,iBAAiB,IAAI,UAAU,KAAK,cAAc,IAAI,6BAA6B,CAAC,CAAC;AAC1H,WAAS,gBAAgBZ,OAAMC,QAAO;AACxC;AACA,kBAAkB,QAAQ;;;ACx6B1B,SAAS,SAAS,KAAK,YAAY,gBAAgB;AACjD,SAAO,IAAI,WAAW,gBAAc;AAClC,QAAI;AACJ,QAAI,aAAa,MAAM;AACrB,gBAAU,SAAS,MAAM;AACvB,sBAAc,IAAI,WAAW;AAAA,UAC3B,wBAAwB;AAAA,QAC1B,GAAG,UAAU;AAAA,MACf,CAAC;AAAA,IACH,OAAO;AACL,oBAAc,IAAI,WAAW;AAAA,QAC3B,wBAAwB;AAAA,MAC1B,GAAG,UAAU;AAAA,IACf;AACA,WAAO,MAAM;AACX,UAAI,eAAe,MAAM;AACvB,oBAAY;AAAA,MACd;AAAA,IACF;AAAA,EACF,CAAC;AACH;AACA,SAAS,QAAQ,KAAK,WAAW;AAC/B,SAAO,SAAS,KAAK,SAAS;AAChC;AACA,SAAS,WAAW,KAAK,WAAW;AAClC,SAAO,QAAQ,KAAK,SAAS,EAAE,KAAK,UAAU,MAAS,GAAG,SAAS,GAAG,IAAI,eAAa;AACrF,UAAM,CAAC,cAAc,OAAO,IAAI;AAChC,QAAI,CAAC,QAAQ,QAAQ;AACnB,aAAO;AAAA,QACL;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AACA,QAAI,CAAC,cAAc,QAAQ;AACzB,aAAO;AAAA,QACL;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AACA,WAAO;AAAA,MACL;AAAA,MACA,MAAM;AAAA,IACR;AAAA,EACF,CAAC,CAAC;AACJ;AACA,SAAS,kBAAkB,KAAK,WAAW;AACzC,SAAO,QAAQ,KAAK,SAAS,EAAE,KAAK,IAAI,cAAY;AAAA,IAClD;AAAA,IACA,MAAM;AAAA,EACR,EAAE,CAAC;AACL;AAwBA,IAAM,2BAAN,MAA+B;AAAA,EAC7B;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,KAAK,KAAK;AACpB,SAAK,MAAM;AACX,SAAK,MAAM;AAAA,EACb;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,MAAM,SAAS;AACjB,WAAO,KAAK,IAAI,IAAI,MAAM,OAAO;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,MAAM;AACX,WAAO,KAAK,IAAI,OAAO,IAAI;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS;AACP,WAAO,KAAK,IAAI,OAAO;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,MAAM,SAAS;AACxB,UAAM,gBAAgB,KAAK,IAAI,WAAW,IAAI;AAC9C,UAAM;AAAA,MACJ;AAAA,MACA,OAAAY;AAAA,IACF,IAAI,eAAe,eAAe,OAAO;AACzC,WAAO,IAAI,2BAA2B,KAAKA,QAAO,KAAK,GAAG;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA,EAIA,kBAAkB;AAChB,UAAM,uBAAuB,WAAW,KAAK,KAAK,KAAK,IAAI,WAAW,cAAc;AACpF,WAAO,qBAAqB,KAAK,sBAAsB;AAAA,EACzD;AAAA,EACA,aAAa,UAAU,CAAC,GAAG;AACzB,WAAO,KAAK,gBAAgB,EAAE,KAAK,IAAI,CAAC;AAAA,MACtC;AAAA,IACF,MAAM,QAAQ,UAAU,kCACnB,QAAQ,KAAK,IACb;AAAA,MACD,CAAC,QAAQ,OAAO,GAAG,QAAQ;AAAA,IAC7B,KACE,QAAQ,KAAK,CAAC,CAAC;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,SAAS;AACX,WAAO,KAAK,KAAK,IAAI,IAAI,OAAO,CAAC,EAAE,KAAK,sBAAsB;AAAA,EAChE;AACF;AAMA,SAAS,WAAWA,QAAO,WAAW;AACpC,SAAO,kBAAkBA,QAAO,SAAS,EAAE,KAAK,UAAU,MAAS,GAAG,SAAS,GAAG,IAAI,iBAAe;AACnG,UAAM,CAAC,aAAa,MAAM,IAAI;AAC9B,UAAMC,cAAa,OAAO,QAAQ,WAAW;AAC7C,UAAM,UAAUA,YAAW,IAAI,aAAW;AAAA,MACxC,MAAM,OAAO;AAAA,MACb,SAAS;AAAA,IACX,EAAE;AAEF,QAAI,eAAe,KAAK,UAAU,YAAY,QAAQ,QAAQ,MAAM,KAAK,UAAU,OAAO,QAAQ,QAAQ,GAAG;AAE3G,aAAO,QAAQ,KAAK,QAAQ,CAAC,YAAY,iBAAiB;AACxD,cAAM,YAAYA,YAAW,KAAK,OAAK,EAAE,IAAI,IAAI,QAAQ,WAAW,GAAG,CAAC;AACxE,cAAM,WAAW,aAAa,QAAQ,KAAK,KAAK,OAAK,EAAE,IAAI,QAAQ,WAAW,GAAG,CAAC;AAClF,YAAI,aAAa,KAAK,UAAU,UAAU,IAAI,QAAQ,MAAM,KAAK,UAAU,WAAW,QAAQ,KAAK,CAAC,aAAa,YAAY,KAAK,UAAU,SAAS,QAAQ,MAAM,KAAK,UAAU,WAAW,QAAQ,GAAG;AAAA,QAExM,OAAO;AAEL,kBAAQ,KAAK;AAAA,YACX,MAAM;AAAA,YACN,SAAS;AAAA,cACP,UAAU;AAAA,cACV,UAAU;AAAA,cACV,MAAM;AAAA,cACN,KAAK;AAAA,YACP;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT,CAAC,CAAC;AACJ;AAIA,SAAS,cAAcD,QAAO,QAAQ,WAAW;AAC/C,SAAO,WAAWA,QAAO,SAAS,EAAE;AAAA,IAAK,KAAK,CAAC,SAAS,YAAY,eAAe,SAAS,QAAQ,IAAI,QAAM,GAAG,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC;AAAA,IAAG,qBAAqB;AAAA;AAAA,IAE9J,IAAI,aAAW,QAAQ,IAAI,QAAM;AAAA,MAC/B,MAAM,EAAE;AAAA,MACR,SAAS;AAAA,IACX,EAAE,CAAC;AAAA,EAAC;AACN;AAKA,SAAS,eAAe,SAAS,SAAS,QAAQ;AAChD,UAAQ,QAAQ,YAAU;AAExB,QAAI,OAAO,QAAQ,OAAO,IAAI,IAAI,IAAI;AACpC,gBAAU,cAAc,SAAS,MAAM;AAAA,IACzC;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAKA,SAAS,eAAe,UAAU,OAAO,gBAAgB,MAAM;AAC7D,QAAM,cAAc,SAAS,MAAM;AACnC,cAAY,OAAO,OAAO,aAAa,GAAG,IAAI;AAC9C,SAAO;AACT;AAMA,SAAS,cAAc,UAAU,QAAQ;AACvC,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK;AACH,UAAI,SAAS,OAAO,QAAQ,KAAK,SAAS,OAAO,QAAQ,EAAE,IAAI,IAAI,QAAQ,OAAO,IAAI,GAAG,GAAG;AAAA,MAE5F,OAAO;AACL,eAAO,eAAe,UAAU,OAAO,UAAU,GAAG,MAAM;AAAA,MAC5D;AACA;AAAA,IACF,KAAK;AACH,UAAI,SAAS,OAAO,QAAQ,KAAK,QAAQ,SAAS,OAAO,QAAQ,EAAE,IAAI,IAAI,QAAQ,OAAO,IAAI,GAAG,GAAG;AAGlG,YAAI,OAAO,aAAa,OAAO,UAAU;AACvC,gBAAM,cAAc,SAAS,MAAM;AACnC,sBAAY,OAAO,OAAO,UAAU,CAAC;AACrC,sBAAY,OAAO,OAAO,UAAU,GAAG,MAAM;AAC7C,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO,eAAe,UAAU,OAAO,UAAU,GAAG,MAAM;AAAA,QAC5D;AAAA,MACF;AACA;AAAA,IACF,KAAK;AACH,UAAI,SAAS,OAAO,QAAQ,KAAK,SAAS,OAAO,QAAQ,EAAE,IAAI,IAAI,QAAQ,OAAO,IAAI,GAAG,GAAG;AAC1F,eAAO,eAAe,UAAU,OAAO,UAAU,CAAC;AAAA,MACpD;AACA;AAAA,EACJ;AACA,SAAO;AACT;AACA,SAAS,oBAAoB,QAAQ;AACnC,MAAI,CAAC,UAAU,OAAO,WAAW,GAAG;AAClC,aAAS,CAAC,SAAS,WAAW,UAAU;AAAA,EAC1C;AACA,SAAO;AACT;AAwBA,IAAM,6BAAN,MAAiC;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,YAAY,KAAKA,QAAO,KAAK;AAC3B,SAAK,MAAM;AACX,SAAK,QAAQA;AACb,SAAK,MAAM;AAAA,EACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,QAAQ;AACnB,QAAI,SAAS,WAAW,KAAK,OAAO,KAAK,IAAI,WAAW,cAAc;AACtE,QAAI,UAAU,OAAO,SAAS,GAAG;AAC/B,eAAS,OAAO,KAAK,IAAI,aAAW,QAAQ,OAAO,YAAU,OAAO,QAAQ,OAAO,IAAI,IAAI,EAAE,CAAC,CAAC;AAAA,IACjG;AACA,WAAO,OAAO;AAAA;AAAA;AAAA,MAGd,UAAU,MAAS;AAAA,MAAG,SAAS;AAAA,MAAG,OAAO,CAAC,CAAC,OAAO,OAAO,MAAM,QAAQ,SAAS,KAAK,CAAC,KAAK;AAAA,MAAG,IAAI,CAAC,CAAC,EAAE,OAAO,MAAM,OAAO;AAAA,MAAG;AAAA,IAAsB;AAAA,EACrJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,QAAQ;AACjB,WAAO,KAAK,aAAa,MAAM,EAAE,KAAK,KAAK,CAAC,SAAS,WAAW,CAAC,GAAG,SAAS,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,EAC9F;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB,QAAQ;AACtB,UAAM,kBAAkB,oBAAoB,MAAM;AAClD,UAAM,0BAA0B,cAAc,KAAK,OAAO,iBAAiB,KAAK,IAAI,WAAW,cAAc;AAC7G,WAAO,wBAAwB,KAAK,sBAAsB;AAAA,EAC5D;AAAA,EACA,aAAa,UAAU,CAAC,GAAG;AACzB,WAAO,kBAAkB,KAAK,OAAO,KAAK,IAAI,WAAW,cAAc,EAAE,KAAK,IAAI,aAAW,QAAQ,QAAQ,KAAK,IAAI,OAAK;AACzH,UAAI,QAAQ,SAAS;AACnB,eAAO,kCACF,EAAE,KAAK,IACP;AAAA,UACD,CAAC,QAAQ,OAAO,GAAG,EAAE;AAAA,QACvB;AAAA,MAEJ,OAAO;AACL,eAAO,EAAE,KAAK;AAAA,MAChB;AAAA,IACF,CAAC,CAAC,GAAG,sBAAsB;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,SAAS;AACX,WAAO,KAAK,KAAK,MAAM,IAAI,OAAO,CAAC,EAAE,KAAK,sBAAsB;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,MAAM;AACR,WAAO,KAAK,IAAI,IAAI,IAAI;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,MAAM;AAER,WAAO,IAAI,yBAAyB,KAAK,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG;AAAA,EAClE;AACF;AAoBA,IAAM,kCAAN,MAAsC;AAAA,EACpC;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAYA,QAAO,KAAK;AACtB,SAAK,QAAQA;AACb,SAAK,MAAM;AAAA,EACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,QAAQ;AACnB,QAAI,CAAC,UAAU,OAAO,WAAW,GAAG;AAClC,aAAO,WAAW,KAAK,OAAO,KAAK,IAAI,WAAW,cAAc,EAAE,KAAK,sBAAsB;AAAA,IAC/F;AACA,WAAO,WAAW,KAAK,OAAO,KAAK,IAAI,WAAW,cAAc,EAAE,KAAK,IAAI,aAAW,QAAQ,OAAO,YAAU,OAAO,QAAQ,OAAO,IAAI,IAAI,EAAE,CAAC,GAAG,OAAO,aAAW,QAAQ,SAAS,CAAC,GAAG,sBAAsB;AAAA,EAClN;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,QAAQ;AACjB,WAAO,KAAK,aAAa,MAAM,EAAE,KAAK,KAAK,CAAC,SAAS,WAAW,CAAC,GAAG,SAAS,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,EAC9F;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB,QAAQ;AACtB,UAAM,kBAAkB,oBAAoB,MAAM;AAClD,UAAM,0BAA0B,cAAc,KAAK,OAAO,iBAAiB,KAAK,IAAI,WAAW,cAAc;AAC7G,WAAO,wBAAwB,KAAK,sBAAsB;AAAA,EAC5D;AAAA,EACA,aAAa,UAAU,CAAC,GAAG;AACzB,UAAM,8BAA8B,kBAAkB,KAAK,OAAO,KAAK,IAAI,WAAW,cAAc;AACpG,WAAO,4BAA4B,KAAK,IAAI,aAAW,QAAQ,QAAQ,KAAK,IAAI,OAAK;AACnF,UAAI,QAAQ,SAAS;AACnB,eAAO;AAAA,UACL,CAAC,QAAQ,OAAO,GAAG,EAAE;AAAA,WAClB,EAAE,KAAK;AAAA,MAEd,OAAO;AACL,eAAO,EAAE,KAAK;AAAA,MAChB;AAAA,IACF,CAAC,CAAC,GAAG,sBAAsB;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,SAAS;AACX,WAAO,KAAK,KAAK,MAAM,IAAI,OAAO,CAAC,EAAE,KAAK,sBAAsB;AAAA,EAClE;AACF;AAKA,IAAM,qBAAqB,IAAI,eAAe,yCAAyC;AACvF,IAAM,uBAAuB,IAAI,eAAe,4CAA4C;AAC5F,IAAME,YAAW,IAAI,eAAe,iCAAiC;AACrE,IAAMC,gBAAe,IAAI,eAAe,qCAAqC;AAa7E,SAAS,eAAe,eAAe,UAAU,SAAO,KAAK;AAC3D,QAAMH,SAAQ,QAAQ,aAAa;AACnC,QAAM,MAAM;AACZ,SAAO;AAAA,IACL,OAAAA;AAAA,IACA;AAAA,EACF;AACF;AAwDA,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,SAASI,OAAM,yBAAyB,UAEpD,YAAY,MAAM,YAAY,qBAAqB,cAAc,MAAM,iBAAiB,cAExF,UAAU,cAAc,mBAAmB,aAAa,oBAAoB;AAC1E,SAAK,aAAa;AAClB,UAAM,MAAM,oBAAoB,SAAS,MAAMA,KAAI;AACnD,UAAM,cAAc;AACpB,QAAI,MAAM;AACR,mBAAa,KAAK,MAAM,iBAAiB,UAAU,cAAc,mBAAmB,cAAc,WAAW;AAAA,IAC/G;AACA,KAAC,KAAK,WAAW,KAAK,mBAAmB,IAAI,eAAe,GAAG,IAAI,IAAI,cAAc,oBAAoB,IAAI,MAAM,MAAM;AACvH,YAAM,YAAY,KAAK,kBAAkB,MAAM,IAAI,UAAU,CAAC;AAC9D,UAAI,UAAU;AACZ,kBAAU,SAAS,QAAQ;AAAA,MAC7B;AACA,UAAI,aAAa;AACf,kBAAU,YAAY,GAAG,WAAW;AAAA,MACtC;AACA,UAAI,2BAA2B,CAAC,iBAAiB,UAAU,GAAG;AAG5D,cAAM,oBAAoB,MAAM;AAC9B,cAAI;AACF,mBAAO,KAAK,UAAU,kBAAkB,uBAAuB,MAAS,EAAE,KAAK,MAAM,MAAM,MAAM,KAAK,CAAC;AAAA,UACzG,SAAS,GAAG;AACV,gBAAI,OAAO,YAAY,aAAa;AAClC,sBAAQ,KAAK,CAAC;AAAA,YAChB;AACA,mBAAO,GAAG,KAAK;AAAA,UACjB;AAAA,QACF;AACA,eAAO,CAAC,WAAW,KAAK,kBAAkB,iBAAiB,CAAC;AAAA,MAC9D,OAAO;AACL,eAAO,CAAC,WAAW,GAAG,KAAK,CAAC;AAAA,MAC9B;AAAA,IACF,GAAG,CAAC,UAAU,aAAa,uBAAuB,CAAC;AAAA,EACrD;AAAA,EACA,WAAW,WAAW,SAAS;AAC7B,QAAI;AACJ,QAAI,OAAO,cAAc,UAAU;AACjC,sBAAgB,KAAK,UAAU,WAAW,SAAS;AAAA,IACrD,OAAO;AACL,sBAAgB;AAAA,IAClB;AACA,UAAM;AAAA,MACJ;AAAA,MACA,OAAAJ;AAAA,IACF,IAAI,eAAe,eAAe,OAAO;AACzC,UAAM,YAAY,KAAK,WAAW,OAAO,IAAI,MAAM,GAAG;AACtD,WAAO,IAAI,2BAA2B,WAAWA,QAAO,IAAI;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,gBAAgB,cAAc,cAAc;AAC1C,UAAM,UAAU,iBAAiB,SAAO;AACxC,UAAMK,mBAAkB,KAAK,UAAU,gBAAgB,YAAY;AACnE,WAAO,IAAI,gCAAgC,QAAQA,gBAAe,GAAG,IAAI;AAAA,EAC3E;AAAA,EACA,IAAI,WAAW;AACb,QAAI;AACJ,QAAI,OAAO,cAAc,UAAU;AACjC,YAAM,KAAK,UAAU,IAAI,SAAS;AAAA,IACpC,OAAO;AACL,YAAM;AAAA,IACR;AACA,UAAM,YAAY,KAAK,WAAW,OAAO,IAAI,MAAM,GAAG;AACtD,WAAO,IAAI,yBAAyB,WAAW,IAAI;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AACT,WAAO,KAAK,UAAU,WAAW,GAAG,EAAE,IAAI,EAAE;AAAA,EAC9C;AAAA,EACA,OAAO,OAAO,SAAS,yBAAyB,mBAAmB;AACjE,WAAO,KAAK,qBAAqB,mBAAqB,SAAS,gBAAgB,GAAM,SAAS,mBAAmB,CAAC,GAAM,SAAS,oBAAoB,CAAC,GAAM,SAASH,WAAU,CAAC,GAAM,SAAS,WAAW,GAAM,SAAY,MAAM,GAAM,SAAY,sBAAsB,GAAM,SAAS,sBAAsB,CAAC,GAAM,SAASC,eAAc,CAAC,GAAM,SAAY,iBAAiB,CAAC,GAAM,SAAS,cAAgB,CAAC,GAAM,SAAS,UAAY,CAAC,GAAM,SAAS,WAAW,CAAC,GAAM,SAAS,eAAe,CAAC,GAAM,SAAS,qBAAqB,CAAC,GAAM,SAAS,aAAa,CAAC,GAAM,SAAY,oBAAmB,CAAC,CAAC;AAAA,EACnlB;AAAA,EACA,OAAO,QAA0B,mBAAmB;AAAA,IAClD,OAAO;AAAA,IACP,SAAS,kBAAiB;AAAA,IAC1B,YAAY;AAAA,EACd,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC1B,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,kBAAkB;AAAA,IAC3B,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAACD,SAAQ;AAAA,IACjB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,oBAAoB;AAAA,IAC7B,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAACC,aAAY;AAAA,IACrB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,YAAc;AAAA,IACvB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,QAAU;AAAA,IACnB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,SAAS;AAAA,IAClB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,IACtB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,mBAAmB;AAAA,IAC5B,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM,yBAAN,MAAM,wBAAuB;AAAA,EAC3B,cAAc;AACZ,aAAS,gBAAgB,eAAeG,SAAQ,MAAM,YAAY;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,kBAAkB,qBAAqB;AAC5C,WAAO;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,UAAU;AAAA,MACZ,GAAG;AAAA,QACD,SAAS;AAAA,QACT,UAAU;AAAA,MACZ,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,OAAO,OAAO,SAAS,+BAA+B,mBAAmB;AACvE,WAAO,KAAK,qBAAqB,yBAAwB;AAAA,EAC3D;AAAA,EACA,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,WAAW,CAAC,gBAAgB;AAAA,EAC9B,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,wBAAwB,CAAC;AAAA,IAC/F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,WAAW,CAAC,gBAAgB;AAAA,IAC9B,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;",
  "names": ["VERSION", "getLimitedUseToken", "getToken", "initializeAppCheck", "onTokenChanged", "setTokenAutoRefreshEnabled", "name", "version", "name", "_", "self", "FirebaseApp", "app", "VERSION", "name", "auth", "VERSION", "name", "version", "base64", "DocumentReference", "WriteBatch", "setLogLevel", "DocumentSnapshot", "QueryDocumentSnapshot", "query", "QuerySnapshot", "doc", "FieldPath", "firebase", "query", "docChanges", "SETTINGS", "USE_EMULATOR", "name", "collectionGroup", "VERSION"]
}
